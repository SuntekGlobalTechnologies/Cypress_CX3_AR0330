   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"CX3RDKOV5640.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	gl32SetControl,4,4
  17              		.comm	gl16SetControl,2,2
  18              		.comm	uvcAppThread,168,4
  19              		.comm	glTimerEvent,40,4
  20              		.section	.bss.UvcTimer,"aw",%nobits
  21              		.align	2
  24              	UvcTimer:
  25 0000 00000000 		.space	44
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.text.UvcAppProgressTimer,"ax",%progbits
  27              		.align	2
  29              	UvcAppProgressTimer:
  30              	.LFB0:
  31              		.file 1 "../CX3RDKOV5640.c"
   1:../CX3RDKOV5640.c **** /*
   2:../CX3RDKOV5640.c ****  ## e-con Systems USB UVC Stack ï¿½See3CAMCX3RDK Platform
   3:../CX3RDKOV5640.c **** 
   4:../CX3RDKOV5640.c ****  ## source file : CX3RDKOV5640.c
   5:../CX3RDKOV5640.c ****  ## ===========================
   6:../CX3RDKOV5640.c ****  ##
   7:../CX3RDKOV5640.c ****  ##  Copyright E-Con Systems, 2013-2014,
   8:../CX3RDKOV5640.c ****  ##  All Rights Reserved
   9:../CX3RDKOV5640.c ****  ##  UNPUBLISHED, LICENSED SOFTWARE.
  10:../CX3RDKOV5640.c ****  ##
  11:../CX3RDKOV5640.c ****  ##  CONFIDENTIAL AND PROPRIETARY INFORMATION
  12:../CX3RDKOV5640.c ****  ##  PROPERTY OF ECON SYSTEMS
  13:../CX3RDKOV5640.c **** 
  14:../CX3RDKOV5640.c ****  ## www.e-consystems.com
  15:../CX3RDKOV5640.c ****  ##
  16:../CX3RDKOV5640.c ****  ##
  17:../CX3RDKOV5640.c ****  ## ===========================
  18:../CX3RDKOV5640.c **** */
  19:../CX3RDKOV5640.c **** 
  20:../CX3RDKOV5640.c **** #include "cyu3system.h"
  21:../CX3RDKOV5640.c **** #include "cyu3os.h"
  22:../CX3RDKOV5640.c **** #include "cyu3dma.h"
  23:../CX3RDKOV5640.c **** #include "cyu3error.h"
  24:../CX3RDKOV5640.c **** #include "cyu3usb.h"
  25:../CX3RDKOV5640.c **** #include "cyu3i2c.h"
  26:../CX3RDKOV5640.c **** #include "cyu3uart.h"
  27:../CX3RDKOV5640.c **** #include "cyu3gpio.h"
  28:../CX3RDKOV5640.c **** #include "cyu3utils.h"
  29:../CX3RDKOV5640.c **** #include "cyu3pib.h"
  30:../CX3RDKOV5640.c **** #include "cyu3socket.h"
  31:../CX3RDKOV5640.c **** #include "sock_regs.h"
  32:../CX3RDKOV5640.c **** #include "cyu3mipicsi.h"
  33:../CX3RDKOV5640.c **** 
  34:../CX3RDKOV5640.c **** #include "CX3OV5640Lib.h"
  35:../CX3RDKOV5640.c **** #include "CX3RDKOV5640.h"
  36:../CX3RDKOV5640.c **** 
  37:../CX3RDKOV5640.c **** #include "AR0330.h"
  38:../CX3RDKOV5640.c **** 
  39:../CX3RDKOV5640.c **** 
  40:../CX3RDKOV5640.c **** /* Event generated on Timer overflow*/
  41:../CX3RDKOV5640.c **** #define ES_TIMER_RESET_EVENT		(1<<4)
  42:../CX3RDKOV5640.c **** 
  43:../CX3RDKOV5640.c **** /* Event generated on a USB Suspend Request*/
  44:../CX3RDKOV5640.c **** #define ES_USB_SUSP_EVENT_FLAG		(1<<5)
  45:../CX3RDKOV5640.c **** 
  46:../CX3RDKOV5640.c **** /* Firmware version*/
  47:../CX3RDKOV5640.c **** #define MajorVersion 				1
  48:../CX3RDKOV5640.c **** #define MinorVersion 				3
  49:../CX3RDKOV5640.c **** #define SubVersion					131
  50:../CX3RDKOV5640.c **** #define SubVersion1					308
  51:../CX3RDKOV5640.c **** 
  52:../CX3RDKOV5640.c **** #define RESET_TIMER_ENABLE 1
  53:../CX3RDKOV5640.c **** 
  54:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
  55:../CX3RDKOV5640.c **** #define TIMER_PERIOD	(500)
  56:../CX3RDKOV5640.c **** 
  57:../CX3RDKOV5640.c **** static CyU3PTimer        UvcTimer;
  58:../CX3RDKOV5640.c **** 
  59:../CX3RDKOV5640.c **** static void UvcAppProgressTimer (uint32_t arg)
  60:../CX3RDKOV5640.c **** {
  32              		.loc 1 60 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 00482DE9 		stmfd	sp!, {fp, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 11, -8
  40              		.cfi_offset 14, -4
  41 0004 04B08DE2 		add	fp, sp, #4
  42              	.LCFI1:
  43              		.cfi_def_cfa 11, 4
  44 0008 08D04DE2 		sub	sp, sp, #8
  45 000c 08000BE5 		str	r0, [fp, #-8]
  61:../CX3RDKOV5640.c ****     /* This frame has taken too long to complete.
  62:../CX3RDKOV5640.c ****      * Abort it, so that the next frame can be started. */
  63:../CX3RDKOV5640.c ****     CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
  46              		.loc 1 63 0
  47 0010 10009FE5 		ldr	r0, .L2
  48 0014 1010A0E3 		mov	r1, #16
  49 0018 0020A0E3 		mov	r2, #0
  50 001c FEFFFFEB 		bl	_txe_event_flags_set
  64:../CX3RDKOV5640.c **** }
  51              		.loc 1 64 0
  52 0020 04D04BE2 		sub	sp, fp, #4
  53              		@ sp needed
  54 0024 0088BDE8 		ldmfd	sp!, {fp, pc}
  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 0028 00000000 		.word	glTimerEvent
  59              		.cfi_endproc
  60              	.LFE0:
  62              		.global	glDMATxCount
  63              		.section	.bss.glDMATxCount,"aw",%nobits
  64              		.align	2
  67              	glDMATxCount:
  68 0000 00000000 		.space	4
  69              		.global	glDmaDone
  70              		.section	.bss.glDmaDone,"aw",%nobits
  71              		.align	2
  74              	glDmaDone:
  75 0000 00000000 		.space	4
  76              		.global	glActiveSocket
  77              		.section	.bss.glActiveSocket,"aw",%nobits
  80              	glActiveSocket:
  81 0000 00       		.space	1
  82              		.global	doLpmDisable
  83              		.section	.data.doLpmDisable,"aw",%progbits
  84              		.align	2
  87              	doLpmDisable:
  88 0000 01000000 		.word	1
  89              		.global	glHitFV
  90              		.section	.bss.glHitFV,"aw",%nobits
  91              		.align	2
  94              	glHitFV:
  95 0000 00000000 		.space	4
  96              		.global	glMipiActive
  97              		.section	.bss.glMipiActive,"aw",%nobits
  98              		.align	2
 101              	glMipiActive:
 102 0000 00000000 		.space	4
 103              		.global	glIsClearFeature
 104              		.section	.bss.glIsClearFeature,"aw",%nobits
 105              		.align	2
 108              	glIsClearFeature:
 109 0000 00000000 		.space	4
 110              		.global	glPreviewStarted
 111              		.section	.bss.glPreviewStarted,"aw",%nobits
 112              		.align	2
 115              	glPreviewStarted:
 116 0000 00000000 		.space	4
 117              		.global	glUVCHeader
 118              		.section	.data.glUVCHeader,"aw",%progbits
 119              		.align	2
 122              	glUVCHeader:
 123 0000 0C       		.byte	12
 124 0001 8C       		.byte	-116
 125 0002 00       		.byte	0
 126 0003 00       		.byte	0
 127 0004 00       		.byte	0
 128 0005 00       		.byte	0
 129 0006 00       		.byte	0
 130 0007 00       		.byte	0
 131 0008 00       		.byte	0
 132 0009 00       		.byte	0
 133 000a 00       		.byte	0
 134 000b 00       		.byte	0
 135              		.comm	glCommitCtrl,32,4
 136              		.global	glCurrentFrameIndex
 137              		.section	.data.glCurrentFrameIndex,"aw",%progbits
 140              	glCurrentFrameIndex:
 141 0000 01       		.byte	1
 142              		.comm	glStillCommitCtrl,32,4
 143              		.global	glCurrentStillFrameIndex
 144              		.section	.data.glCurrentStillFrameIndex,"aw",%progbits
 147              	glCurrentStillFrameIndex:
 148 0000 01       		.byte	1
 149              		.global	glStillTriggerCtrl
 150              		.section	.bss.glStillTriggerCtrl,"aw",%nobits
 153              	glStillTriggerCtrl:
 154 0000 00       		.space	1
 155              		.global	glFrameIndexToSet
 156              		.section	.bss.glFrameIndexToSet,"aw",%nobits
 159              	glFrameIndexToSet:
 160 0000 00       		.space	1
 161              		.global	glStillCaptureStart
 162              		.section	.bss.glStillCaptureStart,"aw",%nobits
 163              		.align	2
 166              	glStillCaptureStart:
 167 0000 00000000 		.space	4
 168              		.global	glStillCaptured
 169              		.section	.bss.glStillCaptured,"aw",%nobits
 170              		.align	2
 173              	glStillCaptured:
 174 0000 00000000 		.space	4
 175              		.global	glStillSkip
 176              		.section	.bss.glStillSkip,"aw",%nobits
 179              	glStillSkip:
 180 0000 00       		.space	1
 181              		.global	glIsApplnActive
 182              		.section	.bss.glIsApplnActive,"aw",%nobits
 183              		.align	2
 186              	glIsApplnActive:
 187 0000 00000000 		.space	4
 188              		.global	glIsConfigured
 189              		.section	.bss.glIsConfigured,"aw",%nobits
 190              		.align	2
 193              	glIsConfigured:
 194 0000 00000000 		.space	4
 195              		.global	glIsStreamingStarted
 196              		.section	.bss.glIsStreamingStarted,"aw",%nobits
 197              		.align	2
 200              	glIsStreamingStarted:
 201 0000 00000000 		.space	4
 202              		.comm	glChHandleUVCStream,232,4
 203              		.global	ES_UVC_STREAM_BUF_SIZE
 204              		.section	.bss.ES_UVC_STREAM_BUF_SIZE,"aw",%nobits
 205              		.align	1
 208              	ES_UVC_STREAM_BUF_SIZE:
 209 0000 0000     		.space	2
 210              		.global	ES_UVC_DATA_BUF_SIZE
 211              		.section	.bss.ES_UVC_DATA_BUF_SIZE,"aw",%nobits
 212              		.align	1
 215              	ES_UVC_DATA_BUF_SIZE:
 216 0000 0000     		.space	2
 217              		.global	ES_UVC_STREAM_BUF_COUNT
 218              		.section	.bss.ES_UVC_STREAM_BUF_COUNT,"aw",%nobits
 221              	ES_UVC_STREAM_BUF_COUNT:
 222 0000 00       		.space	1
 223              		.global	g_IsAutoFocus
 224              		.section	.data.g_IsAutoFocus,"aw",%progbits
 227              	g_IsAutoFocus:
 228 0000 01       		.byte	1
 229              		.global	glGet_Info
 230              		.section	.bss.glGet_Info,"aw",%nobits
 233              	glGet_Info:
 234 0000 00       		.space	1
 235              		.global	gl8GetControl
 236              		.section	.bss.gl8GetControl,"aw",%nobits
 237              		.align	1
 240              	gl8GetControl:
 241 0000 0000     		.space	2
 242              		.global	gl8SetControl
 243              		.section	.bss.gl8SetControl,"aw",%nobits
 244              		.align	1
 247              	gl8SetControl:
 248 0000 0000     		.space	2
 249              		.global	gl16GetControl
 250              		.section	.bss.gl16GetControl,"aw",%nobits
 251              		.align	1
 254              	gl16GetControl:
 255 0000 0000     		.space	2
 256              		.global	gl32GetControl
 257              		.section	.bss.gl32GetControl,"aw",%nobits
 258              		.align	2
 261              	gl32GetControl:
 262 0000 00000000 		.space	4
 263              		.global	glcommitcount
 264              		.section	.bss.glcommitcount,"aw",%nobits
 267              	glcommitcount:
 268 0000 00       		.space	1
 269              		.global	glcheckframe
 270              		.section	.data.glcheckframe,"aw",%progbits
 273              	glcheckframe:
 274 0000 01       		.byte	1
 275              		.section	.text.esUVCAppErrorHandler,"ax",%progbits
 276              		.align	2
 277              		.global	esUVCAppErrorHandler
 279              	esUVCAppErrorHandler:
 280              	.LFB1:
  65:../CX3RDKOV5640.c **** #endif
  66:../CX3RDKOV5640.c **** 
  67:../CX3RDKOV5640.c **** volatile int32_t glDMATxCount = 0;          /* Counter used to count the Dma Transfers */
  68:../CX3RDKOV5640.c **** volatile int32_t glDmaDone = 0;
  69:../CX3RDKOV5640.c **** volatile uint8_t glActiveSocket = 0;
  70:../CX3RDKOV5640.c **** volatile CyBool_t doLpmDisable = CyTrue;	/* Flag used to Enable/Disable low USB 3.0 LPM */
  71:../CX3RDKOV5640.c **** CyBool_t glHitFV = CyFalse;             	/* Flag used for state of FV signal. */
  72:../CX3RDKOV5640.c **** CyBool_t glMipiActive = CyFalse;        	/* Flag set to true when Mipi interface is active. Used fo
  73:../CX3RDKOV5640.c **** CyBool_t glIsClearFeature = CyFalse;    	/* Flag to signal when AppStop is called from the ClearFea
  74:../CX3RDKOV5640.c **** CyBool_t glPreviewStarted = CyFalse;		/* Flag to support Mac os */
  75:../CX3RDKOV5640.c **** 
  76:../CX3RDKOV5640.c **** /* UVC Header */
  77:../CX3RDKOV5640.c **** uint8_t glUVCHeader[ES_UVC_HEADER_LENGTH] =
  78:../CX3RDKOV5640.c **** {
  79:../CX3RDKOV5640.c ****     0x0C,                           /* Header Length */
  80:../CX3RDKOV5640.c ****     0x8C,                           /* Bit field header field */
  81:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,            /* Presentation time stamp field */
  82:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,0x00,0x00   /* Source clock reference field */
  83:../CX3RDKOV5640.c **** };
  84:../CX3RDKOV5640.c **** 
  85:../CX3RDKOV5640.c **** /* Video Probe Commit Control */
  86:../CX3RDKOV5640.c **** uint8_t glCommitCtrl[ES_UVC_MAX_PROBE_SETTING_ALIGNED];
  87:../CX3RDKOV5640.c **** uint8_t glCurrentFrameIndex = 1;
  88:../CX3RDKOV5640.c **** uint8_t glStillCommitCtrl[ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED];
  89:../CX3RDKOV5640.c **** uint8_t glCurrentStillFrameIndex = 1;
  90:../CX3RDKOV5640.c **** uint8_t glStillTriggerCtrl = 0;
  91:../CX3RDKOV5640.c **** uint8_t glFrameIndexToSet = 0;
  92:../CX3RDKOV5640.c **** CyBool_t glStillCaptureStart = CyFalse;
  93:../CX3RDKOV5640.c **** CyBool_t glStillCaptured = CyFalse;
  94:../CX3RDKOV5640.c **** uint8_t glStillSkip = 0;
  95:../CX3RDKOV5640.c **** 
  96:../CX3RDKOV5640.c **** CyBool_t glIsApplnActive = CyFalse;             /* Whether the Mipi->USB application is active or n
  97:../CX3RDKOV5640.c **** CyBool_t glIsConfigured = CyFalse;              /* Whether Application is in configured state or no
  98:../CX3RDKOV5640.c **** CyBool_t glIsStreamingStarted = CyFalse;        /* Whether streaming has started - Used for MAC OS 
  99:../CX3RDKOV5640.c **** 
 100:../CX3RDKOV5640.c **** /* DMA Channel */
 101:../CX3RDKOV5640.c **** CyU3PDmaMultiChannel glChHandleUVCStream;       /* DMA Channel Handle for UVC Stream  */
 102:../CX3RDKOV5640.c **** uint16_t ES_UVC_STREAM_BUF_SIZE=0;
 103:../CX3RDKOV5640.c **** uint16_t ES_UVC_DATA_BUF_SIZE=0;
 104:../CX3RDKOV5640.c **** uint8_t ES_UVC_STREAM_BUF_COUNT=0;
 105:../CX3RDKOV5640.c **** 
 106:../CX3RDKOV5640.c **** uint8_t g_IsAutoFocus=1;						/* Check the AutoFocus is Enabled or not*/
 107:../CX3RDKOV5640.c **** 
 108:../CX3RDKOV5640.c **** /* USB control request processing variables*/
 109:../CX3RDKOV5640.c **** #if 1
 110:../CX3RDKOV5640.c **** 
 111:../CX3RDKOV5640.c **** uint8_t glGet_Info = 0;
 112:../CX3RDKOV5640.c **** int16_t gl8GetControl = 0;
 113:../CX3RDKOV5640.c **** int16_t gl8SetControl = 0;
 114:../CX3RDKOV5640.c **** int16_t gl16GetControl = 0;
 115:../CX3RDKOV5640.c **** 
 116:../CX3RDKOV5640.c **** int32_t gl32GetControl = 0;
 117:../CX3RDKOV5640.c **** 
 118:../CX3RDKOV5640.c **** #endif
 119:../CX3RDKOV5640.c **** 
 120:../CX3RDKOV5640.c **** uint8_t glcommitcount=0,glcheckframe=1;
 121:../CX3RDKOV5640.c **** 
 122:../CX3RDKOV5640.c **** /* Application critical error handler */
 123:../CX3RDKOV5640.c ****     void
 124:../CX3RDKOV5640.c **** esUVCAppErrorHandler (
 125:../CX3RDKOV5640.c ****         CyU3PReturnStatus_t status        /* API return status */
 126:../CX3RDKOV5640.c ****         )
 127:../CX3RDKOV5640.c **** {
 281              		.loc 1 127 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 00482DE9 		stmfd	sp!, {fp, lr}
 286              	.LCFI2:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 11, -8
 289              		.cfi_offset 14, -4
 290 0004 04B08DE2 		add	fp, sp, #4
 291              	.LCFI3:
 292              		.cfi_def_cfa 11, 4
 293 0008 08D04DE2 		sub	sp, sp, #8
 294 000c 08000BE5 		str	r0, [fp, #-8]
 295              	.L5:
 128:../CX3RDKOV5640.c ****     /* Application failed with the error code status */
 129:../CX3RDKOV5640.c **** 
 130:../CX3RDKOV5640.c ****     /* Add custom debug or recovery actions here */
 131:../CX3RDKOV5640.c **** 
 132:../CX3RDKOV5640.c ****     /* Loop indefinitely */
 133:../CX3RDKOV5640.c ****     for (;;)
 134:../CX3RDKOV5640.c ****     {
 135:../CX3RDKOV5640.c ****         /* Thread sleep : 100 ms */
 136:../CX3RDKOV5640.c ****         CyU3PThreadSleep (100);
 296              		.loc 1 136 0 discriminator 1
 297 0010 6400A0E3 		mov	r0, #100
 298 0014 FEFFFFEB 		bl	_tx_thread_sleep
 137:../CX3RDKOV5640.c ****     }
 299              		.loc 1 137 0 discriminator 1
 300 0018 FCFFFFEA 		b	.L5
 301              		.cfi_endproc
 302              	.LFE1:
 304              		.section	.text.esUVCUvcAddHeader,"ax",%progbits
 305              		.align	2
 307              	esUVCUvcAddHeader:
 308              	.LFB2:
 138:../CX3RDKOV5640.c **** }
 139:../CX3RDKOV5640.c **** 
 140:../CX3RDKOV5640.c **** 
 141:../CX3RDKOV5640.c **** /* UVC header addition function */
 142:../CX3RDKOV5640.c ****     static void
 143:../CX3RDKOV5640.c **** esUVCUvcAddHeader (
 144:../CX3RDKOV5640.c ****         uint8_t *buffer_p,      /* Buffer pointer */
 145:../CX3RDKOV5640.c ****         uint8_t frameInd        /* EOF or normal frame indication */
 146:../CX3RDKOV5640.c ****         )
 147:../CX3RDKOV5640.c **** {
 309              		.loc 1 147 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 00482DE9 		stmfd	sp!, {fp, lr}
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 11, -8
 317              		.cfi_offset 14, -4
 318 0004 04B08DE2 		add	fp, sp, #4
 319              	.LCFI5:
 320              		.cfi_def_cfa 11, 4
 321 0008 08D04DE2 		sub	sp, sp, #8
 322 000c 08000BE5 		str	r0, [fp, #-8]
 323 0010 0130A0E1 		mov	r3, r1
 324 0014 09304BE5 		strb	r3, [fp, #-9]
 148:../CX3RDKOV5640.c ****     /* Copy header to buffer */
 149:../CX3RDKOV5640.c ****     CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, ES_UVC_HEADER_LENGTH);
 325              		.loc 1 149 0
 326 0018 08001BE5 		ldr	r0, [fp, #-8]
 327 001c 50109FE5 		ldr	r1, .L8
 328 0020 0C20A0E3 		mov	r2, #12
 329 0024 FEFFFFEB 		bl	CyU3PMemCopy
 150:../CX3RDKOV5640.c **** 
 151:../CX3RDKOV5640.c ****     /* Check if last packet of the frame. */
 152:../CX3RDKOV5640.c ****     if (frameInd == ES_UVC_HEADER_EOF)
 330              		.loc 1 152 0
 331 0028 09305BE5 		ldrb	r3, [fp, #-9]	@ zero_extendqisi2
 332 002c 020053E3 		cmp	r3, #2
 333 0030 0D00001A 		bne	.L6
 153:../CX3RDKOV5640.c ****     {
 154:../CX3RDKOV5640.c ****         /* Modify UVC header to toggle Frame ID */
 155:../CX3RDKOV5640.c ****         glUVCHeader[1] ^= ES_UVC_HEADER_FRAME_ID;
 334              		.loc 1 155 0
 335 0034 38309FE5 		ldr	r3, .L8
 336 0038 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 337 003c 013023E2 		eor	r3, r3, #1
 338 0040 FF2003E2 		and	r2, r3, #255
 339 0044 28309FE5 		ldr	r3, .L8
 340 0048 0120C3E5 		strb	r2, [r3, #1]
 156:../CX3RDKOV5640.c **** 
 157:../CX3RDKOV5640.c ****         /* Indicate End of Frame in the buffer */
 158:../CX3RDKOV5640.c ****         buffer_p[1] |=  ES_UVC_HEADER_EOF;
 341              		.loc 1 158 0
 342 004c 08301BE5 		ldr	r3, [fp, #-8]
 343 0050 013083E2 		add	r3, r3, #1
 344 0054 08201BE5 		ldr	r2, [fp, #-8]
 345 0058 012082E2 		add	r2, r2, #1
 346 005c 0020D2E5 		ldrb	r2, [r2]	@ zero_extendqisi2
 347 0060 022082E3 		orr	r2, r2, #2
 348 0064 FF2002E2 		and	r2, r2, #255
 349 0068 0020C3E5 		strb	r2, [r3]
 350              	.L6:
 159:../CX3RDKOV5640.c ****     }
 160:../CX3RDKOV5640.c **** }
 351              		.loc 1 160 0
 352 006c 04D04BE2 		sub	sp, fp, #4
 353              		@ sp needed
 354 0070 0088BDE8 		ldmfd	sp!, {fp, pc}
 355              	.L9:
 356              		.align	2
 357              	.L8:
 358 0074 00000000 		.word	glUVCHeader
 359              		.cfi_endproc
 360              	.LFE2:
 362              		.section	.rodata
 363              		.align	2
 364              	.LC0:
 365 0000 0A1B7355 		.ascii	"\012\033sUVCUvcApplnStart: \000"
 365      56435576 
 365      63417070 
 365      6C6E5374 
 365      6172743A 
 366 0016 0000     		.align	2
 367              	.LC1:
 368 0018 0A0D4170 		.ascii	"\012\015AplnStrt:ChannelReset Err = 0x%x\000"
 368      6C6E5374 
 368      72743A43 
 368      68616E6E 
 368      656C5265 
 369 003b 00       		.align	2
 370              	.LC2:
 371 003c 0A0D4170 		.ascii	"\012\015AplnStrt:SetXfer Err = 0x%x\000"
 371      6C6E5374 
 371      72743A53 
 371      65745866 
 371      65722045 
 372              		.section	.text.esUVCUvcApplnStart,"ax",%progbits
 373              		.align	2
 374              		.global	esUVCUvcApplnStart
 376              	esUVCUvcApplnStart:
 377              	.LFB3:
 161:../CX3RDKOV5640.c **** 
 162:../CX3RDKOV5640.c **** 
 163:../CX3RDKOV5640.c **** /* This function starts the video streaming application. It is called
 164:../CX3RDKOV5640.c ****  * when there is a SET_INTERFACE event for alternate interface 1
 165:../CX3RDKOV5640.c ****  * (in case of UVC over Isochronous Endpoint usage) or when a
 166:../CX3RDKOV5640.c ****  * COMMIT_CONTROL(SET_CUR) request is received (when using BULK only UVC).
 167:../CX3RDKOV5640.c ****  */
 168:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t
 169:../CX3RDKOV5640.c **** esUVCUvcApplnStart (void)
 170:../CX3RDKOV5640.c **** {
 378              		.loc 1 170 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 8
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382 0000 00482DE9 		stmfd	sp!, {fp, lr}
 383              	.LCFI6:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 11, -8
 386              		.cfi_offset 14, -4
 387 0004 04B08DE2 		add	fp, sp, #4
 388              	.LCFI7:
 389              		.cfi_def_cfa 11, 4
 390 0008 10D04DE2 		sub	sp, sp, #16
 171:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 391              		.loc 1 171 0
 392 000c 0030A0E3 		mov	r3, #0
 393 0010 08300BE5 		str	r3, [fp, #-8]
 172:../CX3RDKOV5640.c **** 
 173:../CX3RDKOV5640.c ****     glIsApplnActive = CyTrue;
 394              		.loc 1 173 0
 395 0014 68319FE5 		ldr	r3, .L15
 396 0018 0120A0E3 		mov	r2, #1
 397 001c 002083E5 		str	r2, [r3]
 174:../CX3RDKOV5640.c ****     glDmaDone = 0;
 398              		.loc 1 174 0
 399 0020 60319FE5 		ldr	r3, .L15+4
 400 0024 0020A0E3 		mov	r2, #0
 401 0028 002083E5 		str	r2, [r3]
 175:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 402              		.loc 1 175 0
 403 002c 58319FE5 		ldr	r3, .L15+8
 404 0030 0020A0E3 		mov	r2, #0
 405 0034 002083E5 		str	r2, [r3]
 176:../CX3RDKOV5640.c ****     glHitFV = CyFalse;
 406              		.loc 1 176 0
 407 0038 50319FE5 		ldr	r3, .L15+12
 408 003c 0020A0E3 		mov	r2, #0
 409 0040 002083E5 		str	r2, [r3]
 177:../CX3RDKOV5640.c ****     doLpmDisable = CyTrue;
 410              		.loc 1 177 0
 411 0044 48319FE5 		ldr	r3, .L15+16
 412 0048 0120A0E3 		mov	r2, #1
 413 004c 002083E5 		str	r2, [r3]
 178:../CX3RDKOV5640.c **** 
 179:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 180:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 414              		.loc 1 180 0
 415 0050 40019FE5 		ldr	r0, .L15+20
 416 0054 FEFFFFEB 		bl	_txe_timer_deactivate
 181:../CX3RDKOV5640.c **** #endif
 182:../CX3RDKOV5640.c **** 
 183:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4,"\n\esUVCUvcApplnStart: ");
 417              		.loc 1 183 0
 418 0058 0400A0E3 		mov	r0, #4
 419 005c 38119FE5 		ldr	r1, .L15+24
 420 0060 FEFFFFEB 		bl	CyU3PDebugPrint
 184:../CX3RDKOV5640.c **** 
 185:../CX3RDKOV5640.c **** 
 186:../CX3RDKOV5640.c ****     /* Place the EP in NAK mode before cleaning up the pipe. */
 187:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 421              		.loc 1 187 0
 422 0064 8300A0E3 		mov	r0, #131
 423 0068 0110A0E3 		mov	r1, #1
 424 006c FEFFFFEB 		bl	CyU3PUsbSetEpNak
 188:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 425              		.loc 1 188 0
 426 0070 6400A0E3 		mov	r0, #100
 427 0074 FEFFFFEB 		bl	CyFx3BusyWait
 189:../CX3RDKOV5640.c **** 
 190:../CX3RDKOV5640.c ****     /* Reset USB EP and DMA */
 191:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 428              		.loc 1 191 0
 429 0078 8300A0E3 		mov	r0, #131
 430 007c FEFFFFEB 		bl	CyU3PUsbFlushEp
 192:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 431              		.loc 1 192 0
 432 0080 18019FE5 		ldr	r0, .L15+28
 433 0084 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 434 0088 08000BE5 		str	r0, [fp, #-8]
 193:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 435              		.loc 1 193 0
 436 008c 08301BE5 		ldr	r3, [fp, #-8]
 437 0090 000053E3 		cmp	r3, #0
 438 0094 0500000A 		beq	.L11
 194:../CX3RDKOV5640.c ****     {
 195:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 439              		.loc 1 195 0
 440 0098 0400A0E3 		mov	r0, #4
 441 009c 00119FE5 		ldr	r1, .L15+32
 442 00a0 08201BE5 		ldr	r2, [fp, #-8]
 443 00a4 FEFFFFEB 		bl	CyU3PDebugPrint
 196:../CX3RDKOV5640.c ****         return status;
 444              		.loc 1 196 0
 445 00a8 08301BE5 		ldr	r3, [fp, #-8]
 446 00ac 310000EA 		b	.L12
 447              	.L11:
 197:../CX3RDKOV5640.c ****     }
 198:../CX3RDKOV5640.c **** 
 199:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 448              		.loc 1 199 0
 449 00b0 E8009FE5 		ldr	r0, .L15+28
 450 00b4 0010A0E3 		mov	r1, #0
 451 00b8 0020A0E3 		mov	r2, #0
 452 00bc FEFFFFEB 		bl	CyU3PDmaMultiChannelSetXfer
 453 00c0 08000BE5 		str	r0, [fp, #-8]
 200:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 454              		.loc 1 200 0
 455 00c4 08301BE5 		ldr	r3, [fp, #-8]
 456 00c8 000053E3 		cmp	r3, #0
 457 00cc 0500000A 		beq	.L13
 201:../CX3RDKOV5640.c ****     {
 202:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 458              		.loc 1 202 0
 459 00d0 0400A0E3 		mov	r0, #4
 460 00d4 CC109FE5 		ldr	r1, .L15+36
 461 00d8 08201BE5 		ldr	r2, [fp, #-8]
 462 00dc FEFFFFEB 		bl	CyU3PDebugPrint
 203:../CX3RDKOV5640.c ****         return status;
 463              		.loc 1 203 0
 464 00e0 08301BE5 		ldr	r3, [fp, #-8]
 465 00e4 230000EA 		b	.L12
 466              	.L13:
 204:../CX3RDKOV5640.c ****     }
 205:../CX3RDKOV5640.c **** 
 206:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 467              		.loc 1 206 0
 468 00e8 8300A0E3 		mov	r0, #131
 469 00ec 0010A0E3 		mov	r1, #0
 470 00f0 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 207:../CX3RDKOV5640.c ****     CyU3PBusyWait (200);
 471              		.loc 1 207 0
 472 00f4 C800A0E3 		mov	r0, #200
 473 00f8 FEFFFFEB 		bl	CyFx3BusyWait
 208:../CX3RDKOV5640.c **** //
 209:../CX3RDKOV5640.c **** //    /* Place the EP in NAK mode before cleaning up the pipe. */
 210:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 211:../CX3RDKOV5640.c **** //    CyU3PBusyWait (100);
 212:../CX3RDKOV5640.c **** //
 213:../CX3RDKOV5640.c **** //    /* Reset USB EP and DMA */
 214:../CX3RDKOV5640.c **** //    CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 215:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 216:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 217:../CX3RDKOV5640.c **** //    {
 218:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 219:../CX3RDKOV5640.c **** //        return status;
 220:../CX3RDKOV5640.c **** //    }
 221:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 222:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 223:../CX3RDKOV5640.c **** //    {
 224:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 225:../CX3RDKOV5640.c **** //        return status;
 226:../CX3RDKOV5640.c **** //    }
 227:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 228:../CX3RDKOV5640.c **** //    CyU3PBusyWait (200);
 229:../CX3RDKOV5640.c **** 
 230:../CX3RDKOV5640.c **** 	 /* Night Mode function
 231:../CX3RDKOV5640.c **** 	 *  --------------------
 232:../CX3RDKOV5640.c **** 	 *  esOV5640_Nightmode API is used to enable the Nightmode
 233:../CX3RDKOV5640.c **** 	 *  of OV5640 sensor.
 234:../CX3RDKOV5640.c **** 	 *  Set Enable -- Cytrue to enable Nightmode
 235:../CX3RDKOV5640.c **** 	 * 				  CyFalse to Disable Nightmode
 236:../CX3RDKOV5640.c **** 	 *
 237:../CX3RDKOV5640.c **** 	 *  Set NightMode_option -- 1 to 6 to set different night modes
 238:../CX3RDKOV5640.c **** 	 *
 239:../CX3RDKOV5640.c **** 	 * To test different night modes, uncomment the below statement and build the firmware
 240:../CX3RDKOV5640.c **** 	 */
 241:../CX3RDKOV5640.c ****     //TODO Change this Function to "Sensor Specific" Nightmode Function to enable the nightmode(If 
 242:../CX3RDKOV5640.c **** 	/*esOV5640_Nightmode(CyTrue,3);*/
 243:../CX3RDKOV5640.c **** 
 244:../CX3RDKOV5640.c **** 
 245:../CX3RDKOV5640.c ****     /* Resume the Fixed Function GPIF State machine */
 246:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyFalse);
 474              		.loc 1 246 0
 475 00fc 0000A0E3 		mov	r0, #0
 476 0100 FEFFFFEB 		bl	CyU3PGpifSMControl
 247:../CX3RDKOV5640.c **** 
 248:../CX3RDKOV5640.c ****     glActiveSocket = 0;
 477              		.loc 1 248 0
 478 0104 A0309FE5 		ldr	r3, .L15+40
 479 0108 0020A0E3 		mov	r2, #0
 480 010c 0020C3E5 		strb	r2, [r3]
 249:../CX3RDKOV5640.c ****     CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 481              		.loc 1 249 0
 482 0110 0230A0E3 		mov	r3, #2
 483 0114 00308DE5 		str	r3, [sp]
 484 0118 90009FE5 		ldr	r0, .L15+44
 485 011c 0010A0E3 		mov	r1, #0
 486 0120 88209FE5 		ldr	r2, .L15+44
 487 0124 0030A0E3 		mov	r3, #0
 488 0128 FEFFFFEB 		bl	CyU3PGpifSMSwitch
 250:../CX3RDKOV5640.c ****     		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 251:../CX3RDKOV5640.c **** 
 252:../CX3RDKOV5640.c ****     CyU3PThreadSleep(10);
 489              		.loc 1 252 0
 490 012c 0A00A0E3 		mov	r0, #10
 491 0130 FEFFFFEB 		bl	_tx_thread_sleep
 253:../CX3RDKOV5640.c **** 
 254:../CX3RDKOV5640.c ****     /* Wake Mipi interface and Image Sensor */
 255:../CX3RDKOV5640.c ****     CyU3PMipicsiWakeup();
 492              		.loc 1 255 0
 493 0134 FEFFFFEB 		bl	CyU3PMipicsiWakeup
 256:../CX3RDKOV5640.c **** 
 257:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the sensor
 258:../CX3RDKOV5640.c ****     //[TBD] esCamera_Power_Up();
 259:../CX3RDKOV5640.c **** 
 260:../CX3RDKOV5640.c ****     glMipiActive = CyTrue;
 494              		.loc 1 260 0
 495 0138 74309FE5 		ldr	r3, .L15+48
 496 013c 0120A0E3 		mov	r2, #1
 497 0140 002083E5 		str	r2, [r3]
 261:../CX3RDKOV5640.c **** 
 262:../CX3RDKOV5640.c **** 
 263:../CX3RDKOV5640.c ****     //TODO Change this Function with "Sensor Specific" AutoFocus Function to Set the AutoFocus of t
 264:../CX3RDKOV5640.c **** 	if(glStillCaptureStart!= CyTrue)
 498              		.loc 1 264 0
 499 0144 6C309FE5 		ldr	r3, .L15+52
 500 0148 003093E5 		ldr	r3, [r3]
 501 014c 010053E3 		cmp	r3, #1
 502 0150 0700000A 		beq	.L14
 265:../CX3RDKOV5640.c **** 	{
 266:../CX3RDKOV5640.c **** 		if(g_IsAutoFocus)
 503              		.loc 1 266 0
 504 0154 60309FE5 		ldr	r3, .L15+56
 505 0158 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 506 015c 000053E3 		cmp	r3, #0
 507 0160 0300000A 		beq	.L14
 267:../CX3RDKOV5640.c **** 			CAMERA_SetAutofocus(g_IsAutoFocus);
 508              		.loc 1 267 0
 509 0164 50309FE5 		ldr	r3, .L15+56
 510 0168 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 511 016c 0300A0E1 		mov	r0, r3
 512 0170 FEFFFFEB 		bl	CAMERA_SetAutofocus
 513              	.L14:
 268:../CX3RDKOV5640.c **** 	}
 269:../CX3RDKOV5640.c ****     return CY_U3P_SUCCESS;
 514              		.loc 1 269 0
 515 0174 0030A0E3 		mov	r3, #0
 516              	.L12:
 270:../CX3RDKOV5640.c **** }
 517              		.loc 1 270 0
 518 0178 0300A0E1 		mov	r0, r3
 519 017c 04D04BE2 		sub	sp, fp, #4
 520              		@ sp needed
 521 0180 0088BDE8 		ldmfd	sp!, {fp, pc}
 522              	.L16:
 523              		.align	2
 524              	.L15:
 525 0184 00000000 		.word	glIsApplnActive
 526 0188 00000000 		.word	glDmaDone
 527 018c 00000000 		.word	glDMATxCount
 528 0190 00000000 		.word	glHitFV
 529 0194 00000000 		.word	doLpmDisable
 530 0198 00000000 		.word	UvcTimer
 531 019c 00000000 		.word	.LC0
 532 01a0 00000000 		.word	glChHandleUVCStream
 533 01a4 18000000 		.word	.LC1
 534 01a8 3C000000 		.word	.LC2
 535 01ac 00000000 		.word	glActiveSocket
 536 01b0 01010000 		.word	257
 537 01b4 00000000 		.word	glMipiActive
 538 01b8 00000000 		.word	glStillCaptureStart
 539 01bc 00000000 		.word	g_IsAutoFocus
 540              		.cfi_endproc
 541              	.LFE3:
 543              		.section	.rodata
 544 005a 0000     		.align	2
 545              	.LC3:
 546 005c 0A0D4170 		.ascii	"\012\015AplnStop:ChannelReset Err = 0x%x\000"
 546      6C6E5374 
 546      6F703A43 
 546      68616E6E 
 546      656C5265 
 547              		.section	.text.esUVCUvcApplnStop,"ax",%progbits
 548              		.align	2
 549              		.global	esUVCUvcApplnStop
 551              	esUVCUvcApplnStop:
 552              	.LFB4:
 271:../CX3RDKOV5640.c **** 
 272:../CX3RDKOV5640.c **** /* This function stops the video streaming. It is called from the USB event
 273:../CX3RDKOV5640.c ****  * handler, when there is a reset / disconnect or SET_INTERFACE for alternate
 274:../CX3RDKOV5640.c ****  * interface 0 in case of ischronous implementation or when a Clear Feature (Halt)
 275:../CX3RDKOV5640.c ****  * request is received (in case of bulk only implementation).
 276:../CX3RDKOV5640.c ****  */
 277:../CX3RDKOV5640.c ****     void
 278:../CX3RDKOV5640.c **** esUVCUvcApplnStop(void)
 279:../CX3RDKOV5640.c **** {
 553              		.loc 1 279 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 8
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557 0000 00482DE9 		stmfd	sp!, {fp, lr}
 558              	.LCFI8:
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 11, -8
 561              		.cfi_offset 14, -4
 562 0004 04B08DE2 		add	fp, sp, #4
 563              	.LCFI9:
 564              		.cfi_def_cfa 11, 4
 565 0008 08D04DE2 		sub	sp, sp, #8
 280:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 566              		.loc 1 280 0
 567 000c 0030A0E3 		mov	r3, #0
 568 0010 08300BE5 		str	r3, [fp, #-8]
 281:../CX3RDKOV5640.c **** 
 282:../CX3RDKOV5640.c ****     /* Update the flag so that the application thread is notified of this. */
 283:../CX3RDKOV5640.c ****     glIsApplnActive = CyFalse;
 569              		.loc 1 283 0
 570 0014 D8309FE5 		ldr	r3, .L20
 571 0018 0020A0E3 		mov	r2, #0
 572 001c 002083E5 		str	r2, [r3]
 284:../CX3RDKOV5640.c **** 
 285:../CX3RDKOV5640.c ****     /* Stop the image sensor and CX3 mipi interface */
 286:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSleep();
 573              		.loc 1 286 0
 574 0020 FEFFFFEB 		bl	CyU3PMipicsiSleep
 575 0024 08000BE5 		str	r0, [fp, #-8]
 287:../CX3RDKOV5640.c **** 
 288:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
 289:../CX3RDKOV5640.c ****     //[TBD] esCamera_Power_Down();
 290:../CX3RDKOV5640.c **** 
 291:../CX3RDKOV5640.c ****     glMipiActive = CyFalse;
 576              		.loc 1 291 0
 577 0028 C8309FE5 		ldr	r3, .L20+4
 578 002c 0020A0E3 		mov	r2, #0
 579 0030 002083E5 		str	r2, [r3]
 292:../CX3RDKOV5640.c **** 
 293:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 294:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 580              		.loc 1 294 0
 581 0034 C0009FE5 		ldr	r0, .L20+8
 582 0038 FEFFFFEB 		bl	_txe_timer_deactivate
 295:../CX3RDKOV5640.c **** #endif
 296:../CX3RDKOV5640.c **** 
 297:../CX3RDKOV5640.c ****     /* Pause the GPIF interface*/
 298:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 583              		.loc 1 298 0
 584 003c 0100A0E3 		mov	r0, #1
 585 0040 FEFFFFEB 		bl	CyU3PGpifSMControl
 299:../CX3RDKOV5640.c **** 
 300:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 586              		.loc 1 300 0
 587 0044 8300A0E3 		mov	r0, #131
 588 0048 0110A0E3 		mov	r1, #1
 589 004c FEFFFFEB 		bl	CyU3PUsbSetEpNak
 301:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 590              		.loc 1 301 0
 591 0050 6400A0E3 		mov	r0, #100
 592 0054 FEFFFFEB 		bl	CyFx3BusyWait
 302:../CX3RDKOV5640.c **** 
 303:../CX3RDKOV5640.c ****     /* Abort and destroy the video streaming channel */
 304:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set DSCR_SIZE field i
 305:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);
 593              		.loc 1 305 0
 594 0058 A0009FE5 		ldr	r0, .L20+12
 595 005c FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 596 0060 08000BE5 		str	r0, [fp, #-8]
 306:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 597              		.loc 1 306 0
 598 0064 08301BE5 		ldr	r3, [fp, #-8]
 599 0068 000053E3 		cmp	r3, #0
 600 006c 0300000A 		beq	.L18
 307:../CX3RDKOV5640.c ****     {
 308:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStop:ChannelReset Err = 0x%x",status);
 601              		.loc 1 308 0
 602 0070 0400A0E3 		mov	r0, #4
 603 0074 88109FE5 		ldr	r1, .L20+16
 604 0078 08201BE5 		ldr	r2, [fp, #-8]
 605 007c FEFFFFEB 		bl	CyU3PDebugPrint
 606              	.L18:
 309:../CX3RDKOV5640.c ****     }
 310:../CX3RDKOV5640.c ****     CyU3PThreadSleep(25);
 607              		.loc 1 310 0
 608 0080 1900A0E3 		mov	r0, #25
 609 0084 FEFFFFEB 		bl	_tx_thread_sleep
 311:../CX3RDKOV5640.c **** 
 312:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
 313:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 610              		.loc 1 313 0
 611 0088 8300A0E3 		mov	r0, #131
 612 008c FEFFFFEB 		bl	CyU3PUsbFlushEp
 314:../CX3RDKOV5640.c ****     /* Clear the stall condition and sequence numbers if ClearFeature. */
 315:../CX3RDKOV5640.c ****     if (glIsClearFeature)
 613              		.loc 1 315 0
 614 0090 70309FE5 		ldr	r3, .L20+20
 615 0094 003093E5 		ldr	r3, [r3]
 616 0098 000053E3 		cmp	r3, #0
 617 009c 0600000A 		beq	.L19
 316:../CX3RDKOV5640.c ****     {
 317:../CX3RDKOV5640.c ****         CyU3PUsbStall (ES_UVC_EP_BULK_VIDEO, CyFalse, CyTrue);
 618              		.loc 1 317 0
 619 00a0 8300A0E3 		mov	r0, #131
 620 00a4 0010A0E3 		mov	r1, #0
 621 00a8 0120A0E3 		mov	r2, #1
 622 00ac FEFFFFEB 		bl	CyU3PUsbStall
 318:../CX3RDKOV5640.c ****         glIsClearFeature = CyFalse;
 623              		.loc 1 318 0
 624 00b0 50309FE5 		ldr	r3, .L20+20
 625 00b4 0020A0E3 		mov	r2, #0
 626 00b8 002083E5 		str	r2, [r3]
 627              	.L19:
 319:../CX3RDKOV5640.c ****     }
 320:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 628              		.loc 1 320 0
 629 00bc 8300A0E3 		mov	r0, #131
 630 00c0 0010A0E3 		mov	r1, #0
 631 00c4 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 321:../CX3RDKOV5640.c **** 	CyU3PBusyWait (200);
 632              		.loc 1 321 0
 633 00c8 C800A0E3 		mov	r0, #200
 634 00cc FEFFFFEB 		bl	CyFx3BusyWait
 322:../CX3RDKOV5640.c **** 
 323:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 635              		.loc 1 323 0
 636 00d0 34309FE5 		ldr	r3, .L20+24
 637 00d4 0020A0E3 		mov	r2, #0
 638 00d8 002083E5 		str	r2, [r3]
 324:../CX3RDKOV5640.c ****     glDmaDone = 0;
 639              		.loc 1 324 0
 640 00dc 2C309FE5 		ldr	r3, .L20+28
 641 00e0 0020A0E3 		mov	r2, #0
 642 00e4 002083E5 		str	r2, [r3]
 325:../CX3RDKOV5640.c **** 
 326:../CX3RDKOV5640.c ****     /* Enable USB 3.0 LPM */
 327:../CX3RDKOV5640.c ****     CyU3PUsbLPMEnable ();
 643              		.loc 1 327 0
 644 00e8 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 328:../CX3RDKOV5640.c **** }
 645              		.loc 1 328 0
 646 00ec 04D04BE2 		sub	sp, fp, #4
 647              		@ sp needed
 648 00f0 0088BDE8 		ldmfd	sp!, {fp, pc}
 649              	.L21:
 650              		.align	2
 651              	.L20:
 652 00f4 00000000 		.word	glIsApplnActive
 653 00f8 00000000 		.word	glMipiActive
 654 00fc 00000000 		.word	UvcTimer
 655 0100 00000000 		.word	glChHandleUVCStream
 656 0104 5C000000 		.word	.LC3
 657 0108 00000000 		.word	glIsClearFeature
 658 010c 00000000 		.word	glDMATxCount
 659 0110 00000000 		.word	glDmaDone
 660              		.cfi_endproc
 661              	.LFE4:
 663              		.section	.rodata
 664 007f 00       		.align	2
 665              	.LC4:
 666 0080 0A0D4770 		.ascii	"\012\015GpifCB callback function \000"
 666      69664342 
 666      2063616C 
 666      6C626163 
 666      6B206675 
 667              		.align	2
 668              	.LC5:
 669 009c 0A0D4359 		.ascii	"\012\015CYU3P_GPIF_EVT_SM_INTERRUPT \000"
 669      5533505F 
 669      47504946 
 669      5F455654 
 669      5F534D5F 
 670 00bb 00       		.align	2
 671              	.LC6:
 672 00bc 0A0D4358 		.ascii	"\012\015CX3_PARTIAL_BUFFER_IN_SCK0 \000"
 672      335F5041 
 672      52544941 
 672      4C5F4255 
 672      46464552 
 673 00da 0000     		.align	2
 674              	.LC7:
 675 00dc 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK0 Err = 0x%x\000"
 675      69664342 
 675      3A577261 
 675      70557020 
 675      53434B30 
 676              		.align	2
 677              	.LC8:
 678 00fc 0A0D4358 		.ascii	"\012\015CX3_PARTIAL_BUFFER_IN_SCK1 \000"
 678      335F5041 
 678      52544941 
 678      4C5F4255 
 678      46464552 
 679 011a 0000     		.align	2
 680              	.LC9:
 681 011c 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK1 Err = 0x%x\000"
 681      69664342 
 681      3A577261 
 681      70557020 
 681      53434B31 
 682              		.section	.text.esUVCGpifCB,"ax",%progbits
 683              		.align	2
 684              		.global	esUVCGpifCB
 686              	esUVCGpifCB:
 687              	.LFB5:
 329:../CX3RDKOV5640.c **** 
 330:../CX3RDKOV5640.c **** /* GpifCB callback function is invoked when FV triggers GPIF interrupt */
 331:../CX3RDKOV5640.c ****     void
 332:../CX3RDKOV5640.c **** esUVCGpifCB (
 333:../CX3RDKOV5640.c ****         CyU3PGpifEventType event,
 334:../CX3RDKOV5640.c ****         uint8_t currentState
 335:../CX3RDKOV5640.c ****         )
 336:../CX3RDKOV5640.c **** {
 688              		.loc 1 336 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 16
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692 0000 00482DE9 		stmfd	sp!, {fp, lr}
 693              	.LCFI10:
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 11, -8
 696              		.cfi_offset 14, -4
 697 0004 04B08DE2 		add	fp, sp, #4
 698              	.LCFI11:
 699              		.cfi_def_cfa 11, 4
 700 0008 10D04DE2 		sub	sp, sp, #16
 701 000c 0020A0E1 		mov	r2, r0
 702 0010 0130A0E1 		mov	r3, r1
 703 0014 0D204BE5 		strb	r2, [fp, #-13]
 704 0018 0E304BE5 		strb	r3, [fp, #-14]
 337:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 705              		.loc 1 337 0
 706 001c 0030A0E3 		mov	r3, #0
 707 0020 08300BE5 		str	r3, [fp, #-8]
 338:../CX3RDKOV5640.c ****     /* Handle interrupt from the State Machine */
 339:../CX3RDKOV5640.c **** 
 340:../CX3RDKOV5640.c **** 	CyU3PDebugPrint (4, "\n\rGpifCB callback function ");
 708              		.loc 1 340 0
 709 0024 0400A0E3 		mov	r0, #4
 710 0028 AC109FE5 		ldr	r1, .L26
 711 002c FEFFFFEB 		bl	CyU3PDebugPrint
 341:../CX3RDKOV5640.c **** 
 342:../CX3RDKOV5640.c ****     if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
 712              		.loc 1 342 0
 713 0030 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 714 0034 010053E3 		cmp	r3, #1
 715 0038 2500001A 		bne	.L22
 343:../CX3RDKOV5640.c ****     {
 344:../CX3RDKOV5640.c ****     	CyU3PDebugPrint (4, "\n\rCYU3P_GPIF_EVT_SM_INTERRUPT ");
 716              		.loc 1 344 0
 717 003c 0400A0E3 		mov	r0, #4
 718 0040 98109FE5 		ldr	r1, .L26+4
 719 0044 FEFFFFEB 		bl	CyU3PDebugPrint
 345:../CX3RDKOV5640.c **** 
 346:../CX3RDKOV5640.c ****         /* Wrapup Socket 0*/
 347:../CX3RDKOV5640.c ****         if(currentState == CX3_PARTIAL_BUFFER_IN_SCK0)
 720              		.loc 1 347 0
 721 0048 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 722 004c 090053E3 		cmp	r3, #9
 723 0050 0E00001A 		bne	.L24
 348:../CX3RDKOV5640.c ****         {
 349:../CX3RDKOV5640.c ****         	CyU3PDebugPrint (4, "\n\rCX3_PARTIAL_BUFFER_IN_SCK0 ");
 724              		.loc 1 349 0
 725 0054 0400A0E3 		mov	r0, #4
 726 0058 84109FE5 		ldr	r1, .L26+8
 727 005c FEFFFFEB 		bl	CyU3PDebugPrint
 350:../CX3RDKOV5640.c **** 
 351:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,0);
 728              		.loc 1 351 0
 729 0060 80009FE5 		ldr	r0, .L26+12
 730 0064 0010A0E3 		mov	r1, #0
 731 0068 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 732 006c 08000BE5 		str	r0, [fp, #-8]
 352:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 733              		.loc 1 352 0
 734 0070 08301BE5 		ldr	r3, [fp, #-8]
 735 0074 000053E3 		cmp	r3, #0
 736 0078 1500000A 		beq	.L22
 353:../CX3RDKOV5640.c ****             {
 354:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK0 Err = 0x%x",status);
 737              		.loc 1 354 0
 738 007c 0400A0E3 		mov	r0, #4
 739 0080 64109FE5 		ldr	r1, .L26+16
 740 0084 08201BE5 		ldr	r2, [fp, #-8]
 741 0088 FEFFFFEB 		bl	CyU3PDebugPrint
 742 008c 100000EA 		b	.L22
 743              	.L24:
 355:../CX3RDKOV5640.c ****             }
 356:../CX3RDKOV5640.c ****         }
 357:../CX3RDKOV5640.c ****         /* Wrapup Socket 1 */
 358:../CX3RDKOV5640.c ****         else if(currentState == CX3_PARTIAL_BUFFER_IN_SCK1)
 744              		.loc 1 358 0
 745 0090 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 746 0094 0A0053E3 		cmp	r3, #10
 747 0098 0D00001A 		bne	.L22
 359:../CX3RDKOV5640.c ****         {
 360:../CX3RDKOV5640.c ****         	CyU3PDebugPrint (4, "\n\rCX3_PARTIAL_BUFFER_IN_SCK1 ");
 748              		.loc 1 360 0
 749 009c 0400A0E3 		mov	r0, #4
 750 00a0 48109FE5 		ldr	r1, .L26+20
 751 00a4 FEFFFFEB 		bl	CyU3PDebugPrint
 361:../CX3RDKOV5640.c **** 
 362:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,1);
 752              		.loc 1 362 0
 753 00a8 38009FE5 		ldr	r0, .L26+12
 754 00ac 0110A0E3 		mov	r1, #1
 755 00b0 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 756 00b4 08000BE5 		str	r0, [fp, #-8]
 363:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 757              		.loc 1 363 0
 758 00b8 08301BE5 		ldr	r3, [fp, #-8]
 759 00bc 000053E3 		cmp	r3, #0
 760 00c0 0300000A 		beq	.L22
 364:../CX3RDKOV5640.c ****             {
 365:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK1 Err = 0x%x",status);
 761              		.loc 1 365 0
 762 00c4 0400A0E3 		mov	r0, #4
 763 00c8 24109FE5 		ldr	r1, .L26+24
 764 00cc 08201BE5 		ldr	r2, [fp, #-8]
 765 00d0 FEFFFFEB 		bl	CyU3PDebugPrint
 766              	.L22:
 366:../CX3RDKOV5640.c ****             }
 367:../CX3RDKOV5640.c ****         }
 368:../CX3RDKOV5640.c ****     }
 369:../CX3RDKOV5640.c **** }
 767              		.loc 1 369 0
 768 00d4 04D04BE2 		sub	sp, fp, #4
 769              		@ sp needed
 770 00d8 0088BDE8 		ldmfd	sp!, {fp, pc}
 771              	.L27:
 772              		.align	2
 773              	.L26:
 774 00dc 80000000 		.word	.LC4
 775 00e0 9C000000 		.word	.LC5
 776 00e4 BC000000 		.word	.LC6
 777 00e8 00000000 		.word	glChHandleUVCStream
 778 00ec DC000000 		.word	.LC7
 779 00f0 FC000000 		.word	.LC8
 780 00f4 1C010000 		.word	.LC9
 781              		.cfi_endproc
 782              	.LFE5:
 784              		.section	.text.esUVCUvcAppDmaCallback,"ax",%progbits
 785              		.align	2
 786              		.global	esUVCUvcAppDmaCallback
 788              	esUVCUvcAppDmaCallback:
 789              	.LFB6:
 370:../CX3RDKOV5640.c **** 
 371:../CX3RDKOV5640.c **** 
 372:../CX3RDKOV5640.c **** /* DMA callback function to handle the produce and consume events. */
 373:../CX3RDKOV5640.c ****     void
 374:../CX3RDKOV5640.c **** esUVCUvcAppDmaCallback (
 375:../CX3RDKOV5640.c ****         CyU3PDmaMultiChannel   *chHandle,
 376:../CX3RDKOV5640.c ****         CyU3PDmaCbType_t  type,
 377:../CX3RDKOV5640.c ****         CyU3PDmaCBInput_t *input
 378:../CX3RDKOV5640.c ****         )
 379:../CX3RDKOV5640.c **** {
 790              		.loc 1 379 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 32
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794 0000 00482DE9 		stmfd	sp!, {fp, lr}
 795              	.LCFI12:
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 11, -8
 798              		.cfi_offset 14, -4
 799 0004 04B08DE2 		add	fp, sp, #4
 800              	.LCFI13:
 801              		.cfi_def_cfa 11, 4
 802 0008 28D04DE2 		sub	sp, sp, #40
 803 000c 18000BE5 		str	r0, [fp, #-24]
 804 0010 0130A0E1 		mov	r3, r1
 805 0014 20200BE5 		str	r2, [fp, #-32]
 806 0018 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 380:../CX3RDKOV5640.c ****     CyU3PDmaBuffer_t DmaBuffer;
 381:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 807              		.loc 1 381 0
 808 001c 0030A0E3 		mov	r3, #0
 809 0020 08300BE5 		str	r3, [fp, #-8]
 382:../CX3RDKOV5640.c **** 
 383:../CX3RDKOV5640.c ****     if (type == CY_U3P_DMA_CB_PROD_EVENT)
 810              		.loc 1 383 0
 811 0024 BA315BE1 		ldrh	r3, [fp, #-26]
 812 0028 080053E3 		cmp	r3, #8
 813 002c 5800001A 		bne	.L29
 384:../CX3RDKOV5640.c ****     {
 385:../CX3RDKOV5640.c ****         /* This is a produce event notification to the CPU. This notification is
 386:../CX3RDKOV5640.c ****          * received upon reception of every buffer. The buffer will not be sent
 387:../CX3RDKOV5640.c ****          * out unless it is explicitly committed. The call shall fail if there
 388:../CX3RDKOV5640.c ****          * is a bus reset / usb disconnect or if there is any application error. */
 389:../CX3RDKOV5640.c **** 
 390:../CX3RDKOV5640.c ****         /* Disable USB 3.0 LPM while Buffer is being transmitted out*/
 391:../CX3RDKOV5640.c ****         if ((CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED) && (doLpmDisable))
 814              		.loc 1 391 0
 815 0030 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 816 0034 0030A0E1 		mov	r3, r0
 817 0038 030053E3 		cmp	r3, #3
 818 003c 0B00001A 		bne	.L30
 819              		.loc 1 391 0 is_stmt 0 discriminator 1
 820 0040 38339FE5 		ldr	r3, .L43
 821 0044 003093E5 		ldr	r3, [r3]
 822 0048 000053E3 		cmp	r3, #0
 823 004c 0700000A 		beq	.L30
 392:../CX3RDKOV5640.c ****         {
 393:../CX3RDKOV5640.c ****             CyU3PUsbLPMDisable ();
 824              		.loc 1 393 0 is_stmt 1
 825 0050 FEFFFFEB 		bl	CyU3PUsbLPMDisable
 394:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 826              		.loc 1 394 0
 827 0054 0000A0E3 		mov	r0, #0
 828 0058 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 395:../CX3RDKOV5640.c ****             CyU3PBusyWait (200);
 829              		.loc 1 395 0
 830 005c C800A0E3 		mov	r0, #200
 831 0060 FEFFFFEB 		bl	CyFx3BusyWait
 396:../CX3RDKOV5640.c **** 
 397:../CX3RDKOV5640.c ****             doLpmDisable = CyFalse;
 832              		.loc 1 397 0
 833 0064 14339FE5 		ldr	r3, .L43
 834 0068 0020A0E3 		mov	r2, #0
 835 006c 002083E5 		str	r2, [r3]
 836              	.L30:
 398:../CX3RDKOV5640.c ****         }
 399:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 400:../CX3RDKOV5640.c ****             CyU3PTimerStart (&UvcTimer);
 837              		.loc 1 400 0
 838 0070 0C039FE5 		ldr	r0, .L43+4
 839 0074 FEFFFFEB 		bl	_txe_timer_activate
 401:../CX3RDKOV5640.c **** #endif
 402:../CX3RDKOV5640.c **** 
 403:../CX3RDKOV5640.c ****         status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 840              		.loc 1 403 0
 841 0078 14304BE2 		sub	r3, fp, #20
 842 007c 18001BE5 		ldr	r0, [fp, #-24]
 843 0080 0310A0E1 		mov	r1, r3
 844 0084 0020A0E3 		mov	r2, #0
 845 0088 FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 846 008c 08000BE5 		str	r0, [fp, #-8]
 404:../CX3RDKOV5640.c ****         while (status == CY_U3P_SUCCESS)
 847              		.loc 1 404 0
 848 0090 3B0000EA 		b	.L31
 849              	.L36:
 405:../CX3RDKOV5640.c ****         {
 406:../CX3RDKOV5640.c ****             /* Add Headers*/
 407:../CX3RDKOV5640.c ****             if(DmaBuffer.count < ES_UVC_DATA_BUF_SIZE)
 850              		.loc 1 407 0
 851 0094 B0215BE1 		ldrh	r2, [fp, #-16]
 852 0098 E8329FE5 		ldr	r3, .L43+8
 853 009c B030D3E1 		ldrh	r3, [r3]
 854 00a0 030052E1 		cmp	r2, r3
 855 00a4 0800002A 		bcs	.L32
 408:../CX3RDKOV5640.c ****             {
 409:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_EOF);
 856              		.loc 1 409 0
 857 00a8 14301BE5 		ldr	r3, [fp, #-20]
 858 00ac 0C3043E2 		sub	r3, r3, #12
 859 00b0 0300A0E1 		mov	r0, r3
 860 00b4 0210A0E3 		mov	r1, #2
 861 00b8 FEFFFFEB 		bl	esUVCUvcAddHeader
 410:../CX3RDKOV5640.c ****                 glHitFV = CyTrue;
 862              		.loc 1 410 0
 863 00bc C8329FE5 		ldr	r3, .L43+12
 864 00c0 0120A0E3 		mov	r2, #1
 865 00c4 002083E5 		str	r2, [r3]
 866 00c8 040000EA 		b	.L33
 867              	.L32:
 411:../CX3RDKOV5640.c ****             }
 412:../CX3RDKOV5640.c ****             else
 413:../CX3RDKOV5640.c ****             {
 414:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_FRAME);
 868              		.loc 1 414 0
 869 00cc 14301BE5 		ldr	r3, [fp, #-20]
 870 00d0 0C3043E2 		sub	r3, r3, #12
 871 00d4 0300A0E1 		mov	r0, r3
 872 00d8 0010A0E3 		mov	r1, #0
 873 00dc FEFFFFEB 		bl	esUVCUvcAddHeader
 874              	.L33:
 415:../CX3RDKOV5640.c ****             }
 416:../CX3RDKOV5640.c **** 
 417:../CX3RDKOV5640.c ****             /* Commit Buffer to USB*/
 418:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelCommitBuffer (chHandle, (DmaBuffer.count + 12), 0);
 875              		.loc 1 418 0
 876 00e0 B0315BE1 		ldrh	r3, [fp, #-16]
 877 00e4 0C3083E2 		add	r3, r3, #12
 878 00e8 0338A0E1 		mov	r3, r3, asl #16
 879 00ec 2338A0E1 		mov	r3, r3, lsr #16
 880 00f0 18001BE5 		ldr	r0, [fp, #-24]
 881 00f4 0310A0E1 		mov	r1, r3
 882 00f8 0020A0E3 		mov	r2, #0
 883 00fc FEFFFFEB 		bl	CyU3PDmaMultiChannelCommitBuffer
 884 0100 08000BE5 		str	r0, [fp, #-8]
 419:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 885              		.loc 1 419 0
 886 0104 08301BE5 		ldr	r3, [fp, #-8]
 887 0108 000053E3 		cmp	r3, #0
 888 010c 0500000A 		beq	.L34
 420:../CX3RDKOV5640.c ****             {
 421:../CX3RDKOV5640.c ****                    CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 889              		.loc 1 421 0
 890 0110 78029FE5 		ldr	r0, .L43+16
 891 0114 1010A0E3 		mov	r1, #16
 892 0118 0020A0E3 		mov	r2, #0
 893 011c FEFFFFEB 		bl	_txe_event_flags_set
 422:../CX3RDKOV5640.c ****                    break;
 894              		.loc 1 422 0
 895 0120 0000A0E1 		mov	r0, r0	@ nop
 896 0124 930000EA 		b	.L28
 897              	.L34:
 423:../CX3RDKOV5640.c ****             }
 424:../CX3RDKOV5640.c ****             else
 425:../CX3RDKOV5640.c ****             {
 426:../CX3RDKOV5640.c ****                 glDMATxCount++;
 898              		.loc 1 426 0
 899 0128 64329FE5 		ldr	r3, .L43+20
 900 012c 003093E5 		ldr	r3, [r3]
 901 0130 012083E2 		add	r2, r3, #1
 902 0134 58329FE5 		ldr	r3, .L43+20
 903 0138 002083E5 		str	r2, [r3]
 427:../CX3RDKOV5640.c ****                 glDmaDone++;
 904              		.loc 1 427 0
 905 013c 54329FE5 		ldr	r3, .L43+24
 906 0140 003093E5 		ldr	r3, [r3]
 907 0144 012083E2 		add	r2, r3, #1
 908 0148 48329FE5 		ldr	r3, .L43+24
 909 014c 002083E5 		str	r2, [r3]
 428:../CX3RDKOV5640.c ****             }
 429:../CX3RDKOV5640.c **** 
 430:../CX3RDKOV5640.c ****             glActiveSocket ^= 1; /* Toggle the Active Socket */
 910              		.loc 1 430 0
 911 0150 44329FE5 		ldr	r3, .L43+28
 912 0154 0030D3E5 		ldrb	r3, [r3]
 913 0158 FF3003E2 		and	r3, r3, #255
 914 015c 013023E2 		eor	r3, r3, #1
 915 0160 FF2003E2 		and	r2, r3, #255
 916 0164 30329FE5 		ldr	r3, .L43+28
 917 0168 0020C3E5 		strb	r2, [r3]
 431:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 918              		.loc 1 431 0
 919 016c 14304BE2 		sub	r3, fp, #20
 920 0170 18001BE5 		ldr	r0, [fp, #-24]
 921 0174 0310A0E1 		mov	r1, r3
 922 0178 0020A0E3 		mov	r2, #0
 923 017c FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 924 0180 08000BE5 		str	r0, [fp, #-8]
 925              	.L31:
 404:../CX3RDKOV5640.c ****         {
 926              		.loc 1 404 0 discriminator 1
 927 0184 08301BE5 		ldr	r3, [fp, #-8]
 928 0188 000053E3 		cmp	r3, #0
 929 018c C0FFFF0A 		beq	.L36
 930 0190 780000EA 		b	.L28
 931              	.L29:
 432:../CX3RDKOV5640.c ****         }
 433:../CX3RDKOV5640.c ****     }
 434:../CX3RDKOV5640.c ****     else if(type == CY_U3P_DMA_CB_CONS_EVENT)
 932              		.loc 1 434 0
 933 0194 BA315BE1 		ldrh	r3, [fp, #-26]
 934 0198 100053E3 		cmp	r3, #16
 935 019c 7500001A 		bne	.L28
 435:../CX3RDKOV5640.c ****     {
 436:../CX3RDKOV5640.c ****         glDmaDone--;
 936              		.loc 1 436 0
 937 01a0 F0319FE5 		ldr	r3, .L43+24
 938 01a4 003093E5 		ldr	r3, [r3]
 939 01a8 012043E2 		sub	r2, r3, #1
 940 01ac E4319FE5 		ldr	r3, .L43+24
 941 01b0 002083E5 		str	r2, [r3]
 437:../CX3RDKOV5640.c **** 
 438:../CX3RDKOV5640.c ****         /* Check if Frame is completely transferred */
 439:../CX3RDKOV5640.c ****         glIsStreamingStarted = CyTrue;
 942              		.loc 1 439 0
 943 01b4 E4319FE5 		ldr	r3, .L43+32
 944 01b8 0120A0E3 		mov	r2, #1
 945 01bc 002083E5 		str	r2, [r3]
 440:../CX3RDKOV5640.c **** 
 441:../CX3RDKOV5640.c ****         if((glHitFV == CyTrue) && (glDmaDone == 0))
 946              		.loc 1 441 0
 947 01c0 C4319FE5 		ldr	r3, .L43+12
 948 01c4 003093E5 		ldr	r3, [r3]
 949 01c8 010053E3 		cmp	r3, #1
 950 01cc 6900001A 		bne	.L28
 951              		.loc 1 441 0 is_stmt 0 discriminator 1
 952 01d0 C0319FE5 		ldr	r3, .L43+24
 953 01d4 003093E5 		ldr	r3, [r3]
 954 01d8 000053E3 		cmp	r3, #0
 955 01dc 6500001A 		bne	.L28
 442:../CX3RDKOV5640.c ****         {
 443:../CX3RDKOV5640.c ****             glHitFV = CyFalse;
 956              		.loc 1 443 0 is_stmt 1
 957 01e0 A4319FE5 		ldr	r3, .L43+12
 958 01e4 0020A0E3 		mov	r2, #0
 959 01e8 002083E5 		str	r2, [r3]
 444:../CX3RDKOV5640.c ****             glDMATxCount=0;
 960              		.loc 1 444 0
 961 01ec A0319FE5 		ldr	r3, .L43+20
 962 01f0 0020A0E3 		mov	r2, #0
 963 01f4 002083E5 		str	r2, [r3]
 445:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 446:../CX3RDKOV5640.c ****             CyU3PTimerStop (&UvcTimer);
 964              		.loc 1 446 0
 965 01f8 84019FE5 		ldr	r0, .L43+4
 966 01fc FEFFFFEB 		bl	_txe_timer_deactivate
 447:../CX3RDKOV5640.c **** #endif
 448:../CX3RDKOV5640.c **** 
 449:../CX3RDKOV5640.c ****             if (glActiveSocket)
 967              		.loc 1 449 0
 968 0200 94319FE5 		ldr	r3, .L43+28
 969 0204 0030D3E5 		ldrb	r3, [r3]
 970 0208 FF3003E2 		and	r3, r3, #255
 971 020c 000053E3 		cmp	r3, #0
 972 0210 0700000A 		beq	.L38
 450:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK1,
 973              		.loc 1 450 0
 974 0214 0230A0E3 		mov	r3, #2
 975 0218 00308DE5 		str	r3, [sp]
 976 021c 80019FE5 		ldr	r0, .L43+36
 977 0220 0D10A0E3 		mov	r1, #13
 978 0224 78219FE5 		ldr	r2, .L43+36
 979 0228 0030A0E3 		mov	r3, #0
 980 022c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 981 0230 060000EA 		b	.L39
 982              	.L38:
 451:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK1, ES_UVC_GPIF_SWITCH_TIMEOUT);
 452:../CX3RDKOV5640.c ****             else
 453:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 983              		.loc 1 453 0
 984 0234 0230A0E3 		mov	r3, #2
 985 0238 00308DE5 		str	r3, [sp]
 986 023c 60019FE5 		ldr	r0, .L43+36
 987 0240 0010A0E3 		mov	r1, #0
 988 0244 58219FE5 		ldr	r2, .L43+36
 989 0248 0030A0E3 		mov	r3, #0
 990 024c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 991              	.L39:
 454:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 455:../CX3RDKOV5640.c **** 
 456:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 992              		.loc 1 456 0
 993 0250 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 457:../CX3RDKOV5640.c ****             doLpmDisable = CyTrue;
 994              		.loc 1 457 0
 995 0254 24319FE5 		ldr	r3, .L43
 996 0258 0120A0E3 		mov	r2, #1
 997 025c 002083E5 		str	r2, [r3]
 458:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 459:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 998              		.loc 1 459 0
 999 0260 1C019FE5 		ldr	r0, .L43+4
 1000 0264 7D1FA0E3 		mov	r1, #500
 1001 0268 0020A0E3 		mov	r2, #0
 1002 026c FEFFFFEB 		bl	_txe_timer_change
 460:../CX3RDKOV5640.c **** #endif
 461:../CX3RDKOV5640.c **** 
 462:../CX3RDKOV5640.c ****             if(glStillCaptured == CyTrue)
 1003              		.loc 1 462 0
 1004 0270 30319FE5 		ldr	r3, .L43+40
 1005 0274 003093E5 		ldr	r3, [r3]
 1006 0278 010053E3 		cmp	r3, #1
 1007 027c 1000001A 		bne	.L40
 463:../CX3RDKOV5640.c ****             {
 464:../CX3RDKOV5640.c ****             	glStillCaptured = CyFalse;
 1008              		.loc 1 464 0
 1009 0280 20319FE5 		ldr	r3, .L43+40
 1010 0284 0020A0E3 		mov	r2, #0
 1011 0288 002083E5 		str	r2, [r3]
 465:../CX3RDKOV5640.c ****             	glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 1012              		.loc 1 465 0
 1013 028c 18319FE5 		ldr	r3, .L43+44
 1014 0290 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1015 0294 203023E2 		eor	r3, r3, #32
 1016 0298 FF2003E2 		and	r2, r3, #255
 1017 029c 08319FE5 		ldr	r3, .L43+44
 1018 02a0 0120C3E5 		strb	r2, [r3, #1]
 466:../CX3RDKOV5640.c ****             	glFrameIndexToSet = glCurrentFrameIndex;
 1019              		.loc 1 466 0
 1020 02a4 04319FE5 		ldr	r3, .L43+48
 1021 02a8 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 1022 02ac 00319FE5 		ldr	r3, .L43+52
 1023 02b0 0020C3E5 		strb	r2, [r3]
 467:../CX3RDKOV5640.c ****             	CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 1024              		.loc 1 467 0
 1025 02b4 D4009FE5 		ldr	r0, .L43+16
 1026 02b8 1010A0E3 		mov	r1, #16
 1027 02bc 0020A0E3 		mov	r2, #0
 1028 02c0 FEFFFFEB 		bl	_txe_event_flags_set
 1029              	.L40:
 468:../CX3RDKOV5640.c ****             }
 469:../CX3RDKOV5640.c ****             if(glStillCaptureStart == CyTrue)
 1030              		.loc 1 469 0
 1031 02c4 EC309FE5 		ldr	r3, .L43+56
 1032 02c8 003093E5 		ldr	r3, [r3]
 1033 02cc 010053E3 		cmp	r3, #1
 1034 02d0 2800001A 		bne	.L28
 470:../CX3RDKOV5640.c ****             {
 471:../CX3RDKOV5640.c ****             	if(glStillSkip == 3)
 1035              		.loc 1 471 0
 1036 02d4 E0309FE5 		ldr	r3, .L43+60
 1037 02d8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1038 02dc 030053E3 		cmp	r3, #3
 1039 02e0 0D00001A 		bne	.L41
 472:../CX3RDKOV5640.c **** 				{
 473:../CX3RDKOV5640.c ****             		glStillSkip--;
 1040              		.loc 1 473 0
 1041 02e4 D0309FE5 		ldr	r3, .L43+60
 1042 02e8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1043 02ec 013043E2 		sub	r3, r3, #1
 1044 02f0 FF2003E2 		and	r2, r3, #255
 1045 02f4 C0309FE5 		ldr	r3, .L43+60
 1046 02f8 0020C3E5 		strb	r2, [r3]
 474:../CX3RDKOV5640.c ****             		glFrameIndexToSet = 4;
 1047              		.loc 1 474 0
 1048 02fc B0309FE5 		ldr	r3, .L43+52
 1049 0300 0420A0E3 		mov	r2, #4
 1050 0304 0020C3E5 		strb	r2, [r3]
 475:../CX3RDKOV5640.c **** 					CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 1051              		.loc 1 475 0
 1052 0308 80009FE5 		ldr	r0, .L43+16
 1053 030c 1010A0E3 		mov	r1, #16
 1054 0310 0020A0E3 		mov	r2, #0
 1055 0314 FEFFFFEB 		bl	_txe_event_flags_set
 1056 0318 160000EA 		b	.L28
 1057              	.L41:
 476:../CX3RDKOV5640.c **** 				}
 477:../CX3RDKOV5640.c ****             	else if(glStillSkip == 0)
 1058              		.loc 1 477 0
 1059 031c 98309FE5 		ldr	r3, .L43+60
 1060 0320 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 0324 000053E3 		cmp	r3, #0
 1062 0328 0C00001A 		bne	.L42
 478:../CX3RDKOV5640.c ****             	{
 479:../CX3RDKOV5640.c ****             		glStillCaptureStart = CyFalse;
 1063              		.loc 1 479 0
 1064 032c 84309FE5 		ldr	r3, .L43+56
 1065 0330 0020A0E3 		mov	r2, #0
 1066 0334 002083E5 		str	r2, [r3]
 480:../CX3RDKOV5640.c **** 					glStillCaptured = CyTrue;
 1067              		.loc 1 480 0
 1068 0338 68309FE5 		ldr	r3, .L43+40
 1069 033c 0120A0E3 		mov	r2, #1
 1070 0340 002083E5 		str	r2, [r3]
 481:../CX3RDKOV5640.c **** 					glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 1071              		.loc 1 481 0
 1072 0344 60309FE5 		ldr	r3, .L43+44
 1073 0348 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1074 034c 203023E2 		eor	r3, r3, #32
 1075 0350 FF2003E2 		and	r2, r3, #255
 1076 0354 50309FE5 		ldr	r3, .L43+44
 1077 0358 0120C3E5 		strb	r2, [r3, #1]
 1078 035c 050000EA 		b	.L28
 1079              	.L42:
 482:../CX3RDKOV5640.c ****             	}
 483:../CX3RDKOV5640.c ****             	else
 484:../CX3RDKOV5640.c ****             		glStillSkip--;
 1080              		.loc 1 484 0
 1081 0360 54309FE5 		ldr	r3, .L43+60
 1082 0364 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1083 0368 013043E2 		sub	r3, r3, #1
 1084 036c FF2003E2 		and	r2, r3, #255
 1085 0370 44309FE5 		ldr	r3, .L43+60
 1086 0374 0020C3E5 		strb	r2, [r3]
 1087              	.L28:
 485:../CX3RDKOV5640.c ****             }
 486:../CX3RDKOV5640.c ****         }
 487:../CX3RDKOV5640.c ****     }
 488:../CX3RDKOV5640.c **** }
 1088              		.loc 1 488 0
 1089 0378 04D04BE2 		sub	sp, fp, #4
 1090              		@ sp needed
 1091 037c 0088BDE8 		ldmfd	sp!, {fp, pc}
 1092              	.L44:
 1093              		.align	2
 1094              	.L43:
 1095 0380 00000000 		.word	doLpmDisable
 1096 0384 00000000 		.word	UvcTimer
 1097 0388 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 1098 038c 00000000 		.word	glHitFV
 1099 0390 00000000 		.word	glTimerEvent
 1100 0394 00000000 		.word	glDMATxCount
 1101 0398 00000000 		.word	glDmaDone
 1102 039c 00000000 		.word	glActiveSocket
 1103 03a0 00000000 		.word	glIsStreamingStarted
 1104 03a4 01010000 		.word	257
 1105 03a8 00000000 		.word	glStillCaptured
 1106 03ac 00000000 		.word	glUVCHeader
 1107 03b0 00000000 		.word	glCurrentFrameIndex
 1108 03b4 00000000 		.word	glFrameIndexToSet
 1109 03b8 00000000 		.word	glStillCaptureStart
 1110 03bc 00000000 		.word	glStillSkip
 1111              		.cfi_endproc
 1112              	.LFE6:
 1114              		.section	.text.esUVCUvcApplnUSBEventCB,"ax",%progbits
 1115              		.align	2
 1117              	esUVCUvcApplnUSBEventCB:
 1118              	.LFB7:
 489:../CX3RDKOV5640.c **** 
 490:../CX3RDKOV5640.c **** /* This is the Callback function to handle the USB Events */
 491:../CX3RDKOV5640.c ****     static void
 492:../CX3RDKOV5640.c **** esUVCUvcApplnUSBEventCB (
 493:../CX3RDKOV5640.c ****         CyU3PUsbEventType_t evtype,     /* Event type */
 494:../CX3RDKOV5640.c ****         uint16_t            evdata      /* Event data */
 495:../CX3RDKOV5640.c ****         )
 496:../CX3RDKOV5640.c **** {
 1119              		.loc 1 496 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 16
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1124              	.LCFI14:
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 11, -8
 1127              		.cfi_offset 14, -4
 1128 0004 04B08DE2 		add	fp, sp, #4
 1129              	.LCFI15:
 1130              		.cfi_def_cfa 11, 4
 1131 0008 10D04DE2 		sub	sp, sp, #16
 1132 000c 0020A0E1 		mov	r2, r0
 1133 0010 0130A0E1 		mov	r3, r1
 1134 0014 0D204BE5 		strb	r2, [fp, #-13]
 1135 0018 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 497:../CX3RDKOV5640.c ****     uint8_t interface = 0, altSetting = 0;
 1136              		.loc 1 497 0
 1137 001c 0030A0E3 		mov	r3, #0
 1138 0020 05304BE5 		strb	r3, [fp, #-5]
 1139 0024 0030A0E3 		mov	r3, #0
 1140 0028 06304BE5 		strb	r3, [fp, #-6]
 498:../CX3RDKOV5640.c **** 
 499:../CX3RDKOV5640.c ****     switch (evtype)
 1141              		.loc 1 499 0
 1142 002c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1143 0030 070053E3 		cmp	r3, #7
 1144 0034 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1145 0038 530000EA 		b	.L58
 1146              	.L48:
 1147 003c 2C010000 		.word	.L47
 1148 0040 2C010000 		.word	.L47
 1149 0044 5C000000 		.word	.L49
 1150 0048 8C010000 		.word	.L58
 1151 004c 2C010000 		.word	.L47
 1152 0050 2C010000 		.word	.L47
 1153 0054 8C010000 		.word	.L58
 1154 0058 7C000000 		.word	.L50
 1155              	.L49:
 500:../CX3RDKOV5640.c ****     {
 501:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SUSPEND:
 502:../CX3RDKOV5640.c ****             /* Suspend the device with Wake On Bus Activity set */
 503:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1156              		.loc 1 503 0
 1157 005c 34319FE5 		ldr	r3, .L59
 1158 0060 0020A0E3 		mov	r2, #0
 1159 0064 002083E5 		str	r2, [r3]
 504:../CX3RDKOV5640.c ****             CyU3PEventSet (&glTimerEvent, ES_USB_SUSP_EVENT_FLAG, CYU3P_EVENT_OR);
 1160              		.loc 1 504 0
 1161 0068 2C019FE5 		ldr	r0, .L59+4
 1162 006c 2010A0E3 		mov	r1, #32
 1163 0070 0020A0E3 		mov	r2, #0
 1164 0074 FEFFFFEB 		bl	_txe_event_flags_set
 505:../CX3RDKOV5640.c ****             break;
 1165              		.loc 1 505 0
 1166 0078 440000EA 		b	.L45
 1167              	.L50:
 506:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETINTF:
 507:../CX3RDKOV5640.c ****             /* Start the video streamer application if the
 508:../CX3RDKOV5640.c ****              * interface requested was 1. If not, stop the
 509:../CX3RDKOV5640.c ****              * streamer. */
 510:../CX3RDKOV5640.c ****             interface = CY_U3P_GET_MSB(evdata);
 1168              		.loc 1 510 0
 1169 007c B0315BE1 		ldrh	r3, [fp, #-16]
 1170 0080 2334A0E1 		mov	r3, r3, lsr #8
 1171 0084 0338A0E1 		mov	r3, r3, asl #16
 1172 0088 2338A0E1 		mov	r3, r3, lsr #16
 1173 008c 05304BE5 		strb	r3, [fp, #-5]
 511:../CX3RDKOV5640.c ****             altSetting = CY_U3P_GET_LSB(evdata);
 1174              		.loc 1 511 0
 1175 0090 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 1176 0094 06304BE5 		strb	r3, [fp, #-6]
 512:../CX3RDKOV5640.c **** 
 513:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1177              		.loc 1 513 0
 1178 0098 F8309FE5 		ldr	r3, .L59
 1179 009c 0020A0E3 		mov	r2, #0
 1180 00a0 002083E5 		str	r2, [r3]
 514:../CX3RDKOV5640.c **** 
 515:../CX3RDKOV5640.c ****             if ((altSetting == ES_UVC_STREAM_INTERFACE) && (interface == 1))
 1181              		.loc 1 515 0
 1182 00a4 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1183 00a8 010053E3 		cmp	r3, #1
 1184 00ac 0C00001A 		bne	.L52
 1185              		.loc 1 515 0 is_stmt 0 discriminator 1
 1186 00b0 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1187 00b4 010053E3 		cmp	r3, #1
 1188 00b8 0900001A 		bne	.L52
 516:../CX3RDKOV5640.c ****             {
 517:../CX3RDKOV5640.c ****                 /* Stop the application before re-starting. */
 518:../CX3RDKOV5640.c ****                 if (glIsApplnActive)
 1189              		.loc 1 518 0 is_stmt 1
 1190 00bc DC309FE5 		ldr	r3, .L59+8
 1191 00c0 003093E5 		ldr	r3, [r3]
 1192 00c4 000053E3 		cmp	r3, #0
 1193 00c8 0300000A 		beq	.L53
 519:../CX3RDKOV5640.c ****                 {
 520:../CX3RDKOV5640.c ****                 	glIsClearFeature = CyTrue;
 1194              		.loc 1 520 0
 1195 00cc D0309FE5 		ldr	r3, .L59+12
 1196 00d0 0120A0E3 		mov	r2, #1
 1197 00d4 002083E5 		str	r2, [r3]
 521:../CX3RDKOV5640.c ****                     esUVCUvcApplnStop ();
 1198              		.loc 1 521 0
 1199 00d8 FEFFFFEB 		bl	esUVCUvcApplnStop
 1200              	.L53:
 522:../CX3RDKOV5640.c ****                 }
 523:../CX3RDKOV5640.c ****                 esUVCUvcApplnStart ();
 1201              		.loc 1 523 0
 1202 00dc FEFFFFEB 		bl	esUVCUvcApplnStart
 1203 00e0 100000EA 		b	.L54
 1204              	.L52:
 524:../CX3RDKOV5640.c **** 
 525:../CX3RDKOV5640.c ****             }
 526:../CX3RDKOV5640.c ****             else if ((altSetting == 0x00) && (interface == 1))
 1205              		.loc 1 526 0
 1206 00e4 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1207 00e8 000053E3 		cmp	r3, #0
 1208 00ec 0D00001A 		bne	.L54
 1209              		.loc 1 526 0 is_stmt 0 discriminator 1
 1210 00f0 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1211 00f4 010053E3 		cmp	r3, #1
 1212 00f8 0A00001A 		bne	.L54
 527:../CX3RDKOV5640.c ****             {
 528:../CX3RDKOV5640.c ****             	glPreviewStarted = CyFalse;
 1213              		.loc 1 528 0 is_stmt 1
 1214 00fc A4309FE5 		ldr	r3, .L59+16
 1215 0100 0020A0E3 		mov	r2, #0
 1216 0104 002083E5 		str	r2, [r3]
 529:../CX3RDKOV5640.c ****             	/* Stop the application before re-starting. */
 530:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1217              		.loc 1 530 0
 1218 0108 94309FE5 		ldr	r3, .L59+12
 1219 010c 0120A0E3 		mov	r2, #1
 1220 0110 002083E5 		str	r2, [r3]
 531:../CX3RDKOV5640.c **** 				esUVCUvcApplnStop ();
 1221              		.loc 1 531 0
 1222 0114 FEFFFFEB 		bl	esUVCUvcApplnStop
 532:../CX3RDKOV5640.c **** 				glcommitcount = 0;
 1223              		.loc 1 532 0
 1224 0118 8C309FE5 		ldr	r3, .L59+20
 1225 011c 0020A0E3 		mov	r2, #0
 1226 0120 0020C3E5 		strb	r2, [r3]
 533:../CX3RDKOV5640.c ****             }
 534:../CX3RDKOV5640.c ****             break;
 1227              		.loc 1 534 0
 1228 0124 190000EA 		b	.L45
 1229              	.L54:
 1230 0128 180000EA 		b	.L45
 1231              	.L47:
 535:../CX3RDKOV5640.c **** 
 536:../CX3RDKOV5640.c ****             /* Fall-through. */
 537:../CX3RDKOV5640.c **** 
 538:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETCONF:
 539:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_RESET:
 540:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_DISCONNECT:
 541:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_CONNECT:
 542:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1232              		.loc 1 542 0
 1233 012c 64309FE5 		ldr	r3, .L59
 1234 0130 0020A0E3 		mov	r2, #0
 1235 0134 002083E5 		str	r2, [r3]
 543:../CX3RDKOV5640.c ****             if (evtype == CY_U3P_USB_EVENT_SETCONF)
 1236              		.loc 1 543 0
 1237 0138 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1238 013c 050053E3 		cmp	r3, #5
 1239 0140 0300001A 		bne	.L55
 544:../CX3RDKOV5640.c ****                 glIsConfigured = CyTrue;
 1240              		.loc 1 544 0
 1241 0144 64309FE5 		ldr	r3, .L59+24
 1242 0148 0120A0E3 		mov	r2, #1
 1243 014c 002083E5 		str	r2, [r3]
 1244 0150 020000EA 		b	.L56
 1245              	.L55:
 545:../CX3RDKOV5640.c ****             else
 546:../CX3RDKOV5640.c ****                 glIsConfigured = CyFalse;
 1246              		.loc 1 546 0
 1247 0154 54309FE5 		ldr	r3, .L59+24
 1248 0158 0020A0E3 		mov	r2, #0
 1249 015c 002083E5 		str	r2, [r3]
 1250              	.L56:
 547:../CX3RDKOV5640.c **** 
 548:../CX3RDKOV5640.c ****             /* Stop the video streamer application and enable LPM. */
 549:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 1251              		.loc 1 549 0
 1252 0160 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 550:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 1253              		.loc 1 550 0
 1254 0164 34309FE5 		ldr	r3, .L59+8
 1255 0168 003093E5 		ldr	r3, [r3]
 1256 016c 000053E3 		cmp	r3, #0
 1257 0170 0400000A 		beq	.L57
 551:../CX3RDKOV5640.c ****             {
 552:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1258              		.loc 1 552 0
 1259 0174 28309FE5 		ldr	r3, .L59+12
 1260 0178 0120A0E3 		mov	r2, #1
 1261 017c 002083E5 		str	r2, [r3]
 553:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop ();
 1262              		.loc 1 553 0
 1263 0180 FEFFFFEB 		bl	esUVCUvcApplnStop
 554:../CX3RDKOV5640.c ****             }
 555:../CX3RDKOV5640.c ****             break;
 1264              		.loc 1 555 0
 1265 0184 010000EA 		b	.L45
 1266              	.L57:
 1267 0188 000000EA 		b	.L45
 1268              	.L58:
 556:../CX3RDKOV5640.c ****         default:
 557:../CX3RDKOV5640.c ****             break;
 1269              		.loc 1 557 0
 1270 018c 0000A0E1 		mov	r0, r0	@ nop
 1271              	.L45:
 558:../CX3RDKOV5640.c ****     }
 559:../CX3RDKOV5640.c **** }
 1272              		.loc 1 559 0
 1273 0190 04D04BE2 		sub	sp, fp, #4
 1274              		@ sp needed
 1275 0194 0088BDE8 		ldmfd	sp!, {fp, pc}
 1276              	.L60:
 1277              		.align	2
 1278              	.L59:
 1279 0198 00000000 		.word	glIsStreamingStarted
 1280 019c 00000000 		.word	glTimerEvent
 1281 01a0 00000000 		.word	glIsApplnActive
 1282 01a4 00000000 		.word	glIsClearFeature
 1283 01a8 00000000 		.word	glPreviewStarted
 1284 01ac 00000000 		.word	glcommitcount
 1285 01b0 00000000 		.word	glIsConfigured
 1286              		.cfi_endproc
 1287              	.LFE7:
 1289              		.section	.text.esUVCApplnLPMRqtCB,"ax",%progbits
 1290              		.align	2
 1292              	esUVCApplnLPMRqtCB:
 1293              	.LFB8:
 560:../CX3RDKOV5640.c **** 
 561:../CX3RDKOV5640.c **** /* Callback for LPM requests. Always return true to allow host to transition device
 562:../CX3RDKOV5640.c ****  * into required LPM state U1/U2/U3. When data transmission is active LPM management
 563:../CX3RDKOV5640.c ****  * is explicitly disabled to prevent data transmission errors.
 564:../CX3RDKOV5640.c ****  */
 565:../CX3RDKOV5640.c **** static CyBool_t esUVCApplnLPMRqtCB (
 566:../CX3RDKOV5640.c ****         CyU3PUsbLinkPowerMode link_mode         /*USB 3.0 linkmode requested by Host */
 567:../CX3RDKOV5640.c ****         )
 568:../CX3RDKOV5640.c **** {
 1294              		.loc 1 568 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 8
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
 1299 0000 04B02DE5 		str	fp, [sp, #-4]!
 1300              	.LCFI16:
 1301              		.cfi_def_cfa_offset 4
 1302              		.cfi_offset 11, -4
 1303 0004 00B08DE2 		add	fp, sp, #0
 1304              	.LCFI17:
 1305              		.cfi_def_cfa_register 11
 1306 0008 0CD04DE2 		sub	sp, sp, #12
 1307 000c 0030A0E1 		mov	r3, r0
 1308 0010 05304BE5 		strb	r3, [fp, #-5]
 569:../CX3RDKOV5640.c ****     return CyTrue;
 1309              		.loc 1 569 0
 1310 0014 0130A0E3 		mov	r3, #1
 570:../CX3RDKOV5640.c **** }
 1311              		.loc 1 570 0
 1312 0018 0300A0E1 		mov	r0, r3
 1313 001c 00D04BE2 		sub	sp, fp, #0
 1314              		@ sp needed
 1315 0020 04B09DE4 		ldr	fp, [sp], #4
 1316 0024 1EFF2FE1 		bx	lr
 1317              		.cfi_endproc
 1318              	.LFE8:
 1320              		.section	.rodata
 1321              		.align	2
 1322              	.LC10:
 1323 013c 0A0D6573 		.ascii	"\012\015esSetCameraResolution == 1 ==\000"
 1323      53657443 
 1323      616D6572 
 1323      61526573 
 1323      6F6C7574 
 1324              		.align	2
 1325              	.LC11:
 1326 015c 0A0D5772 		.ascii	"\012\015Write 1080pSettings -1- \000"
 1326      69746520 
 1326      31303830 
 1326      70536574 
 1326      74696E67 
 1327 0177 00       		.align	2
 1328              	.LC12:
 1329 0178 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS1 Err = 0x%x\000"
 1329      42537470 
 1329      43423A53 
 1329      6574496E 
 1329      74665061 
 1330              		.align	2
 1331              	.LC13:
 1332 01a0 0A0D5772 		.ascii	"\012\015Write VGA Settings -2- \000"
 1332      69746520 
 1332      56474120 
 1332      53657474 
 1332      696E6773 
 1333 01ba 0000     		.align	2
 1334              	.LC14:
 1335 01bc 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams FS Err = 0x%x\000"
 1335      42537470 
 1335      43423A53 
 1335      6574496E 
 1335      74665061 
 1336 01e3 00       		.align	2
 1337              	.LC15:
 1338 01e4 0A0D5772 		.ascii	"\012\015Write 720p Settings -3- \000"
 1338      69746520 
 1338      37323070 
 1338      20536574 
 1338      74696E67 
 1339 01ff 00       		.align	2
 1340              	.LC16:
 1341 0200 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS2 Err = 0x%x\000"
 1341      42537470 
 1341      43423A53 
 1341      6574496E 
 1341      74665061 
 1342              		.align	2
 1343              	.LC17:
 1344 0228 0A0D5772 		.ascii	"\012\015Write 5M Settings -4- \000"
 1344      69746520 
 1344      354D2053 
 1344      65747469 
 1344      6E677320 
 1345 0241 000000   		.align	2
 1346              	.LC18:
 1347 0244 0A0D5772 		.ascii	"\012\015Write VGA Setting -5- \000"
 1347      69746520 
 1347      56474120 
 1347      53657474 
 1347      696E6720 
 1348 025d 000000   		.align	2
 1349              	.LC19:
 1350 0260 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams HS Err = 0x%x\000"
 1350      42537470 
 1350      43423A53 
 1350      6574496E 
 1350      74665061 
 1351 0287 00       		.align	2
 1352              	.LC20:
 1353 0288 0A0D5772 		.ascii	"\012\015Write VGA Setting -6- \000"
 1353      69746520 
 1353      56474120 
 1353      53657474 
 1353      696E6720 
 1354              		.section	.text.esSetCameraResolution,"ax",%progbits
 1355              		.align	2
 1356              		.global	esSetCameraResolution
 1358              	esSetCameraResolution:
 1359              	.LFB9:
 571:../CX3RDKOV5640.c **** 
 572:../CX3RDKOV5640.c **** //TODO Change this function with "Sensor Specific" function to write the sensor settings & configur
 573:../CX3RDKOV5640.c **** void esSetCameraResolution(uint8_t FrameIndex)
 574:../CX3RDKOV5640.c **** {
 1360              		.loc 1 574 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 16
 1363              		@ frame_needed = 1, uses_anonymous_args = 0
 1364 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1365              	.LCFI18:
 1366              		.cfi_def_cfa_offset 8
 1367              		.cfi_offset 11, -8
 1368              		.cfi_offset 14, -4
 1369 0004 04B08DE2 		add	fp, sp, #4
 1370              	.LCFI19:
 1371              		.cfi_def_cfa 11, 4
 1372 0008 10D04DE2 		sub	sp, sp, #16
 1373 000c 0030A0E1 		mov	r3, r0
 1374 0010 0D304BE5 		strb	r3, [fp, #-13]
 575:../CX3RDKOV5640.c **** 	CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1375              		.loc 1 575 0
 1376 0014 0030A0E3 		mov	r3, #0
 1377 0018 08300BE5 		str	r3, [fp, #-8]
 576:../CX3RDKOV5640.c **** 	CyU3PDebugPrint (4, "\n\resSetCameraResolution == 1 ==");
 1378              		.loc 1 576 0
 1379 001c 0400A0E3 		mov	r0, #4
 1380 0020 D8119FE5 		ldr	r1, .L76
 1381 0024 FEFFFFEB 		bl	CyU3PDebugPrint
 577:../CX3RDKOV5640.c **** 	/* Super Speed USB Streams*/
 578:../CX3RDKOV5640.c **** 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1382              		.loc 1 578 0
 1383 0028 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1384 002c 0030A0E1 		mov	r3, r0
 1385 0030 030053E3 		cmp	r3, #3
 1386 0034 4B00001A 		bne	.L64
 579:../CX3RDKOV5640.c **** 	{
 580:../CX3RDKOV5640.c **** 		if(FrameIndex == 0x01)
 1387              		.loc 1 580 0
 1388 0038 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1389 003c 010053E3 		cmp	r3, #1
 1390 0040 0F00001A 		bne	.L65
 581:../CX3RDKOV5640.c **** 		{
 582:../CX3RDKOV5640.c **** 			/* Write 1080pSettings */
 583:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rWrite 1080pSettings -1- ");
 1391              		.loc 1 583 0
 1392 0044 0400A0E3 		mov	r0, #4
 1393 0048 B4119FE5 		ldr	r1, .L76+4
 1394 004c FEFFFFEB 		bl	CyU3PDebugPrint
 584:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc1080p30NoMclk, CyFalse);
 1395              		.loc 1 584 0
 1396 0050 B0019FE5 		ldr	r0, .L76+8
 1397 0054 0010A0E3 		mov	r1, #0
 1398 0058 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1399 005c 08000BE5 		str	r0, [fp, #-8]
 585:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1400              		.loc 1 585 0
 1401 0060 08301BE5 		ldr	r3, [fp, #-8]
 1402 0064 000053E3 		cmp	r3, #0
 1403 0068 0300000A 		beq	.L66
 586:../CX3RDKOV5640.c **** 			{
 587:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS1 Err = 0x%x", status);
 1404              		.loc 1 587 0
 1405 006c 0400A0E3 		mov	r0, #4
 1406 0070 94119FE5 		ldr	r1, .L76+12
 1407 0074 08201BE5 		ldr	r2, [fp, #-8]
 1408 0078 FEFFFFEB 		bl	CyU3PDebugPrint
 1409              	.L66:
 588:../CX3RDKOV5640.c **** 			}
 589:../CX3RDKOV5640.c **** 			CAMERA_1080P_config();
 1410              		.loc 1 589 0
 1411 007c FEFFFFEB 		bl	CAMERA_1080P_config
 1412 0080 5C0000EA 		b	.L63
 1413              	.L65:
 590:../CX3RDKOV5640.c **** 		}
 591:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x02)
 1414              		.loc 1 591 0
 1415 0084 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1416 0088 020053E3 		cmp	r3, #2
 1417 008c 0F00001A 		bne	.L68
 592:../CX3RDKOV5640.c **** 		{
 593:../CX3RDKOV5640.c **** 			/* Write VGA Settings */
 594:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rWrite VGA Settings -2- ");
 1418              		.loc 1 594 0
 1419 0090 0400A0E3 		mov	r0, #4
 1420 0094 74119FE5 		ldr	r1, .L76+16
 1421 0098 FEFFFFEB 		bl	CyU3PDebugPrint
 595:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1422              		.loc 1 595 0
 1423 009c 70019FE5 		ldr	r0, .L76+20
 1424 00a0 0010A0E3 		mov	r1, #0
 1425 00a4 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1426 00a8 08000BE5 		str	r0, [fp, #-8]
 596:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1427              		.loc 1 596 0
 1428 00ac 08301BE5 		ldr	r3, [fp, #-8]
 1429 00b0 000053E3 		cmp	r3, #0
 1430 00b4 0300000A 		beq	.L69
 597:../CX3RDKOV5640.c **** 			{
 598:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1431              		.loc 1 598 0
 1432 00b8 0400A0E3 		mov	r0, #4
 1433 00bc 54119FE5 		ldr	r1, .L76+24
 1434 00c0 08201BE5 		ldr	r2, [fp, #-8]
 1435 00c4 FEFFFFEB 		bl	CyU3PDebugPrint
 1436              	.L69:
 599:../CX3RDKOV5640.c **** 			}
 600:../CX3RDKOV5640.c **** 			CAMERA_VGA_config();
 1437              		.loc 1 600 0
 1438 00c8 FEFFFFEB 		bl	CAMERA_VGA_config
 1439 00cc 490000EA 		b	.L63
 1440              	.L68:
 601:../CX3RDKOV5640.c **** 		}
 602:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x03)
 1441              		.loc 1 602 0
 1442 00d0 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1443 00d4 030053E3 		cmp	r3, #3
 1444 00d8 0F00001A 		bne	.L70
 603:../CX3RDKOV5640.c **** 		{
 604:../CX3RDKOV5640.c **** 			/* Write 720pSettings */
 605:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rWrite 720p Settings -3- ");
 1445              		.loc 1 605 0
 1446 00dc 0400A0E3 		mov	r0, #4
 1447 00e0 34119FE5 		ldr	r1, .L76+28
 1448 00e4 FEFFFFEB 		bl	CyU3PDebugPrint
 606:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc720p60NoMclk, CyFalse);
 1449              		.loc 1 606 0
 1450 00e8 30019FE5 		ldr	r0, .L76+32
 1451 00ec 0010A0E3 		mov	r1, #0
 1452 00f0 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1453 00f4 08000BE5 		str	r0, [fp, #-8]
 607:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1454              		.loc 1 607 0
 1455 00f8 08301BE5 		ldr	r3, [fp, #-8]
 1456 00fc 000053E3 		cmp	r3, #0
 1457 0100 0300000A 		beq	.L71
 608:../CX3RDKOV5640.c **** 			{
 609:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1458              		.loc 1 609 0
 1459 0104 0400A0E3 		mov	r0, #4
 1460 0108 14119FE5 		ldr	r1, .L76+36
 1461 010c 08201BE5 		ldr	r2, [fp, #-8]
 1462 0110 FEFFFFEB 		bl	CyU3PDebugPrint
 1463              	.L71:
 610:../CX3RDKOV5640.c **** 			}
 611:../CX3RDKOV5640.c **** 			CAMERA_720P_config();
 1464              		.loc 1 611 0
 1465 0114 FEFFFFEB 		bl	CAMERA_720P_config
 1466 0118 360000EA 		b	.L63
 1467              	.L70:
 612:../CX3RDKOV5640.c **** 		}
 613:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x04)
 1468              		.loc 1 613 0
 1469 011c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1470 0120 040053E3 		cmp	r3, #4
 1471 0124 3300001A 		bne	.L63
 614:../CX3RDKOV5640.c **** 		{
 615:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rWrite 5M Settings -4- ");
 1472              		.loc 1 615 0
 1473 0128 0400A0E3 		mov	r0, #4
 1474 012c F4109FE5 		ldr	r1, .L76+40
 1475 0130 FEFFFFEB 		bl	CyU3PDebugPrint
 616:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc5Mp15NoMclk, CyFalse);
 1476              		.loc 1 616 0
 1477 0134 F0009FE5 		ldr	r0, .L76+44
 1478 0138 0010A0E3 		mov	r1, #0
 1479 013c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1480 0140 08000BE5 		str	r0, [fp, #-8]
 617:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1481              		.loc 1 617 0
 1482 0144 08301BE5 		ldr	r3, [fp, #-8]
 1483 0148 000053E3 		cmp	r3, #0
 1484 014c 0300000A 		beq	.L72
 618:../CX3RDKOV5640.c **** 			{
 619:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1485              		.loc 1 619 0
 1486 0150 0400A0E3 		mov	r0, #4
 1487 0154 C8109FE5 		ldr	r1, .L76+36
 1488 0158 08201BE5 		ldr	r2, [fp, #-8]
 1489 015c FEFFFFEB 		bl	CyU3PDebugPrint
 1490              	.L72:
 620:../CX3RDKOV5640.c **** 			}
 621:../CX3RDKOV5640.c **** 			CAMERA_5MP_config();
 1491              		.loc 1 621 0
 1492 0160 FEFFFFEB 		bl	CAMERA_5MP_config
 1493 0164 230000EA 		b	.L63
 1494              	.L64:
 622:../CX3RDKOV5640.c **** 		}
 623:../CX3RDKOV5640.c **** 	}
 624:../CX3RDKOV5640.c **** 	/* High Speed USB Streams*/
 625:../CX3RDKOV5640.c **** 	else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1495              		.loc 1 625 0
 1496 0168 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1497 016c 0030A0E1 		mov	r3, r0
 1498 0170 020053E3 		cmp	r3, #2
 1499 0174 1000001A 		bne	.L74
 626:../CX3RDKOV5640.c **** 	{
 627:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 628:../CX3RDKOV5640.c **** 		CyU3PDebugPrint (4, "\n\rWrite VGA Setting -5- ");
 1500              		.loc 1 628 0
 1501 0178 0400A0E3 		mov	r0, #4
 1502 017c AC109FE5 		ldr	r1, .L76+48
 1503 0180 FEFFFFEB 		bl	CyU3PDebugPrint
 629:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1504              		.loc 1 629 0
 1505 0184 88009FE5 		ldr	r0, .L76+20
 1506 0188 0010A0E3 		mov	r1, #0
 1507 018c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1508 0190 08000BE5 		str	r0, [fp, #-8]
 630:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1509              		.loc 1 630 0
 1510 0194 08301BE5 		ldr	r3, [fp, #-8]
 1511 0198 000053E3 		cmp	r3, #0
 1512 019c 0300000A 		beq	.L75
 631:../CX3RDKOV5640.c **** 		{
 632:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams HS Err = 0x%x", status);
 1513              		.loc 1 632 0
 1514 01a0 0400A0E3 		mov	r0, #4
 1515 01a4 88109FE5 		ldr	r1, .L76+52
 1516 01a8 08201BE5 		ldr	r2, [fp, #-8]
 1517 01ac FEFFFFEB 		bl	CyU3PDebugPrint
 1518              	.L75:
 633:../CX3RDKOV5640.c **** 		}
 634:../CX3RDKOV5640.c **** 		CAMERA_VGA_config();
 1519              		.loc 1 634 0
 1520 01b0 FEFFFFEB 		bl	CAMERA_VGA_config
 635:../CX3RDKOV5640.c **** 		CAMERA_VGA_HS_config();
 1521              		.loc 1 635 0
 1522 01b4 FEFFFFEB 		bl	CAMERA_VGA_HS_config
 1523 01b8 0E0000EA 		b	.L63
 1524              	.L74:
 636:../CX3RDKOV5640.c **** 	}
 637:../CX3RDKOV5640.c **** 	/* Full Speed USB Streams*/
 638:../CX3RDKOV5640.c **** 	else
 639:../CX3RDKOV5640.c **** 	{
 640:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 641:../CX3RDKOV5640.c **** 		CyU3PDebugPrint (4, "\n\rWrite VGA Setting -6- ");
 1525              		.loc 1 641 0
 1526 01bc 0400A0E3 		mov	r0, #4
 1527 01c0 70109FE5 		ldr	r1, .L76+56
 1528 01c4 FEFFFFEB 		bl	CyU3PDebugPrint
 642:../CX3RDKOV5640.c **** 		CAMERA_VGA_config();
 1529              		.loc 1 642 0
 1530 01c8 FEFFFFEB 		bl	CAMERA_VGA_config
 643:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1531              		.loc 1 643 0
 1532 01cc 40009FE5 		ldr	r0, .L76+20
 1533 01d0 0010A0E3 		mov	r1, #0
 1534 01d4 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1535 01d8 08000BE5 		str	r0, [fp, #-8]
 644:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1536              		.loc 1 644 0
 1537 01dc 08301BE5 		ldr	r3, [fp, #-8]
 1538 01e0 000053E3 		cmp	r3, #0
 1539 01e4 0300000A 		beq	.L63
 645:../CX3RDKOV5640.c **** 		{
 646:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1540              		.loc 1 646 0
 1541 01e8 0400A0E3 		mov	r0, #4
 1542 01ec 24109FE5 		ldr	r1, .L76+24
 1543 01f0 08201BE5 		ldr	r2, [fp, #-8]
 1544 01f4 FEFFFFEB 		bl	CyU3PDebugPrint
 1545              	.L63:
 647:../CX3RDKOV5640.c **** 		}
 648:../CX3RDKOV5640.c **** 	}
 649:../CX3RDKOV5640.c **** }
 1546              		.loc 1 649 0
 1547 01f8 04D04BE2 		sub	sp, fp, #4
 1548              		@ sp needed
 1549 01fc 0088BDE8 		ldmfd	sp!, {fp, pc}
 1550              	.L77:
 1551              		.align	2
 1552              	.L76:
 1553 0200 3C010000 		.word	.LC10
 1554 0204 5C010000 		.word	.LC11
 1555 0208 00000000 		.word	cfgUvc1080p30NoMclk
 1556 020c 78010000 		.word	.LC12
 1557 0210 A0010000 		.word	.LC13
 1558 0214 00000000 		.word	cfgUvcVga30NoMclk
 1559 0218 BC010000 		.word	.LC14
 1560 021c E4010000 		.word	.LC15
 1561 0220 00000000 		.word	cfgUvc720p60NoMclk
 1562 0224 00020000 		.word	.LC16
 1563 0228 28020000 		.word	.LC17
 1564 022c 00000000 		.word	cfgUvc5Mp15NoMclk
 1565 0230 44020000 		.word	.LC18
 1566 0234 60020000 		.word	.LC19
 1567 0238 88020000 		.word	.LC20
 1568              		.cfi_endproc
 1569              	.LFE9:
 1571              		.section	.rodata
 1572 02a1 000000   		.align	2
 1573              	.LC21:
 1574 02a4 0A0D6252 		.ascii	"\012\015bRType = 0x%x, bRequest = 0x%x, wValue = 0x"
 1574      54797065 
 1574      203D2030 
 1574      7825782C 
 1574      20625265 
 1575 02d1 25782C20 		.ascii	"%x, wIndex = 0x%x, wLength= 0x%x\000"
 1575      77496E64 
 1575      6578203D 
 1575      20307825 
 1575      782C2077 
 1576 02f2 0000     		.align	2
 1577              	.LC22:
 1578 02f4 0A0D4675 		.ascii	"\012\015Full Speed Not Supported!\000"
 1578      6C6C2053 
 1578      70656564 
 1578      204E6F74 
 1578      20537570 
 1579              		.align	2
 1580              	.LC23:
 1581 0310 0A0D5553 		.ascii	"\012\015USBStpCB:GET_CUR:SendEP0Data Err = 0x%x\000"
 1581      42537470 
 1581      43423A47 
 1581      45545F43 
 1581      55523A53 
 1582 033a 0000     		.align	2
 1583              	.LC24:
 1584 033c 0A0D5553 		.ascii	"\012\015USBStpCB:SET_CUR:GetEP0Data Err = 0x%x.\000"
 1584      42537470 
 1584      43423A53 
 1584      45545F43 
 1584      55523A47 
 1585 0366 0000     		.align	2
 1586              	.LC25:
 1587 0368 0A0D5553 		.ascii	"\012\015USBStpCB:Invalid SET_CUR Rqt Len.\000"
 1587      42537470 
 1587      43423A49 
 1587      6E76616C 
 1587      69642053 
 1588              		.align	2
 1589              	.LC26:
 1590 038c 0A0D5553 		.ascii	"\012\015USBStpCB:VCI SendEP0Data = %d\000"
 1590      42537470 
 1590      43423A56 
 1590      43492053 
 1590      656E6445 
 1591              		.align	2
 1592              	.LC27:
 1593 03ac 0A0D4175 		.ascii	"\012\015Auto Focus\000"
 1593      746F2046 
 1593      6F637573 
 1593      00
 1594              		.section	.text.esUVCUvcApplnUSBSetupCB,"ax",%progbits
 1595              		.align	2
 1597              	esUVCUvcApplnUSBSetupCB:
 1598              	.LFB10:
 650:../CX3RDKOV5640.c **** 
 651:../CX3RDKOV5640.c **** /* Callback to handle the USB Setup Requests and UVC Class events */
 652:../CX3RDKOV5640.c ****     static CyBool_t
 653:../CX3RDKOV5640.c **** esUVCUvcApplnUSBSetupCB (
 654:../CX3RDKOV5640.c ****         uint32_t setupdat0,     /* SETUP Data 0 */
 655:../CX3RDKOV5640.c ****         uint32_t setupdat1      /* SETUP Data 1 */
 656:../CX3RDKOV5640.c ****         )
 657:../CX3RDKOV5640.c **** {
 1599              		.loc 1 657 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 40
 1602              		@ frame_needed = 1, uses_anonymous_args = 0
 1603 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1604              	.LCFI20:
 1605              		.cfi_def_cfa_offset 8
 1606              		.cfi_offset 11, -8
 1607              		.cfi_offset 14, -4
 1608 0004 04B08DE2 		add	fp, sp, #4
 1609              	.LCFI21:
 1610              		.cfi_def_cfa 11, 4
 1611 0008 38D04DE2 		sub	sp, sp, #56
 1612 000c 28000BE5 		str	r0, [fp, #-40]
 1613 0010 2C100BE5 		str	r1, [fp, #-44]
 658:../CX3RDKOV5640.c ****     uint8_t  bRequest, bType,bRType, bTarget;
 659:../CX3RDKOV5640.c ****     uint16_t wValue, wIndex, wLength;
 660:../CX3RDKOV5640.c ****     uint16_t readCount = 0;
 1614              		.loc 1 660 0
 1615 0014 0030A0E3 		mov	r3, #0
 1616 0018 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 661:../CX3RDKOV5640.c ****     uint8_t  ep0Buf[2];
 662:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1617              		.loc 1 662 0
 1618 001c 0030A0E3 		mov	r3, #0
 1619 0020 0C300BE5 		str	r3, [fp, #-12]
 663:../CX3RDKOV5640.c ****     uint8_t temp = 0;
 1620              		.loc 1 663 0
 1621 0024 0030A0E3 		mov	r3, #0
 1622 0028 1D304BE5 		strb	r3, [fp, #-29]
 664:../CX3RDKOV5640.c ****     CyBool_t isHandled = CyFalse;
 1623              		.loc 1 664 0
 1624 002c 0030A0E3 		mov	r3, #0
 1625 0030 08300BE5 		str	r3, [fp, #-8]
 665:../CX3RDKOV5640.c ****     uint8_t RequestOption = 0;
 1626              		.loc 1 665 0
 1627 0034 0030A0E3 		mov	r3, #0
 1628 0038 0D304BE5 		strb	r3, [fp, #-13]
 666:../CX3RDKOV5640.c **** 
 667:../CX3RDKOV5640.c ****     /* Decode the fields from the setup request. */
 668:../CX3RDKOV5640.c ****     bRType = (setupdat0 & CY_U3P_USB_REQUEST_TYPE_MASK);
 1629              		.loc 1 668 0
 1630 003c 28301BE5 		ldr	r3, [fp, #-40]
 1631 0040 0E304BE5 		strb	r3, [fp, #-14]
 669:../CX3RDKOV5640.c ****     bType    = (bRType & CY_U3P_USB_TYPE_MASK);
 1632              		.loc 1 669 0
 1633 0044 0E305BE5 		ldrb	r3, [fp, #-14]
 1634 0048 603003E2 		and	r3, r3, #96
 1635 004c 0F304BE5 		strb	r3, [fp, #-15]
 670:../CX3RDKOV5640.c ****     bTarget  = (bRType & CY_U3P_USB_TARGET_MASK);
 1636              		.loc 1 670 0
 1637 0050 0E305BE5 		ldrb	r3, [fp, #-14]
 1638 0054 033003E2 		and	r3, r3, #3
 1639 0058 10304BE5 		strb	r3, [fp, #-16]
 671:../CX3RDKOV5640.c ****     bRequest = ((setupdat0 & CY_U3P_USB_REQUEST_MASK) >> CY_U3P_USB_REQUEST_POS);
 1640              		.loc 1 671 0
 1641 005c 28301BE5 		ldr	r3, [fp, #-40]
 1642 0060 FF3C03E2 		and	r3, r3, #65280
 1643 0064 2334A0E1 		mov	r3, r3, lsr #8
 1644 0068 11304BE5 		strb	r3, [fp, #-17]
 672:../CX3RDKOV5640.c ****     wValue   = ((setupdat0 & CY_U3P_USB_VALUE_MASK)   >> CY_U3P_USB_VALUE_POS);
 1645              		.loc 1 672 0
 1646 006c 28301BE5 		ldr	r3, [fp, #-40]
 1647 0070 2338A0E1 		mov	r3, r3, lsr #16
 1648 0074 B4314BE1 		strh	r3, [fp, #-20]	@ movhi
 673:../CX3RDKOV5640.c ****     wIndex   = ((setupdat1 & CY_U3P_USB_INDEX_MASK)   >> CY_U3P_USB_INDEX_POS);
 1649              		.loc 1 673 0
 1650 0078 2C301BE5 		ldr	r3, [fp, #-44]
 1651 007c B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 674:../CX3RDKOV5640.c ****     wLength  = ((setupdat1 & CY_U3P_USB_LENGTH_MASK)  >> CY_U3P_USB_LENGTH_POS);
 1652              		.loc 1 674 0
 1653 0080 2C301BE5 		ldr	r3, [fp, #-44]
 1654 0084 2338A0E1 		mov	r3, r3, lsr #16
 1655 0088 B8314BE1 		strh	r3, [fp, #-24]	@ movhi
 675:../CX3RDKOV5640.c **** 
 676:../CX3RDKOV5640.c **** #if 1
 677:../CX3RDKOV5640.c ****    	CyU3PDebugPrint(4, "\n\rbRType = 0x%x, bRequest = 0x%x, wValue = 0x%x, wIndex = 0x%x, wLength= 
 1656              		.loc 1 677 0
 1657 008c 0E205BE5 		ldrb	r2, [fp, #-14]	@ zero_extendqisi2
 1658 0090 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1659 0094 B4C15BE1 		ldrh	ip, [fp, #-20]
 1660 0098 B6015BE1 		ldrh	r0, [fp, #-22]
 1661 009c B8115BE1 		ldrh	r1, [fp, #-24]
 1662 00a0 00C08DE5 		str	ip, [sp]
 1663 00a4 04008DE5 		str	r0, [sp, #4]
 1664 00a8 08108DE5 		str	r1, [sp, #8]
 1665 00ac 0400A0E3 		mov	r0, #4
 1666 00b0 BC1F9FE5 		ldr	r1, .L229
 1667 00b4 FEFFFFEB 		bl	CyU3PDebugPrint
 678:../CX3RDKOV5640.c **** #endif
 679:../CX3RDKOV5640.c **** 
 680:../CX3RDKOV5640.c ****     /* ClearFeature(Endpoint_Halt) received on the Streaming Endpoint. Stop Streaming */
 681:../CX3RDKOV5640.c ****     if((bTarget == CY_U3P_USB_TARGET_ENDPT) && (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
 1668              		.loc 1 681 0
 1669 00b8 10305BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1670 00bc 020053E3 		cmp	r3, #2
 1671 00c0 1C00001A 		bne	.L79
 1672              		.loc 1 681 0 is_stmt 0 discriminator 1
 1673 00c4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1674 00c8 010053E3 		cmp	r3, #1
 1675 00cc 1900001A 		bne	.L79
 682:../CX3RDKOV5640.c ****             && (wIndex == ES_UVC_EP_BULK_VIDEO) && (wValue == CY_U3P_USBX_FS_EP_HALT))
 1676              		.loc 1 682 0 is_stmt 1
 1677 00d0 B6315BE1 		ldrh	r3, [fp, #-22]
 1678 00d4 830053E3 		cmp	r3, #131
 1679 00d8 1600001A 		bne	.L79
 1680              		.loc 1 682 0 is_stmt 0 discriminator 1
 1681 00dc B4315BE1 		ldrh	r3, [fp, #-20]
 1682 00e0 000053E3 		cmp	r3, #0
 1683 00e4 1300001A 		bne	.L79
 683:../CX3RDKOV5640.c ****     {
 684:../CX3RDKOV5640.c ****         if ((glIsApplnActive) && (glIsStreamingStarted))
 1684              		.loc 1 684 0 is_stmt 1
 1685 00e8 883F9FE5 		ldr	r3, .L229+4
 1686 00ec 003093E5 		ldr	r3, [r3]
 1687 00f0 000053E3 		cmp	r3, #0
 1688 00f4 0D00000A 		beq	.L80
 1689              		.loc 1 684 0 is_stmt 0 discriminator 1
 1690 00f8 7C3F9FE5 		ldr	r3, .L229+8
 1691 00fc 003093E5 		ldr	r3, [r3]
 1692 0100 000053E3 		cmp	r3, #0
 1693 0104 0900000A 		beq	.L80
 685:../CX3RDKOV5640.c ****         {
 686:../CX3RDKOV5640.c ****         	glPreviewStarted = CyFalse;
 1694              		.loc 1 686 0 is_stmt 1
 1695 0108 703F9FE5 		ldr	r3, .L229+12
 1696 010c 0020A0E3 		mov	r2, #0
 1697 0110 002083E5 		str	r2, [r3]
 687:../CX3RDKOV5640.c ****             glIsClearFeature = CyTrue;
 1698              		.loc 1 687 0
 1699 0114 683F9FE5 		ldr	r3, .L229+16
 1700 0118 0120A0E3 		mov	r2, #1
 1701 011c 002083E5 		str	r2, [r3]
 688:../CX3RDKOV5640.c ****             esUVCUvcApplnStop();
 1702              		.loc 1 688 0
 1703 0120 FEFFFFEB 		bl	esUVCUvcApplnStop
 689:../CX3RDKOV5640.c ****             glcommitcount = 0;
 1704              		.loc 1 689 0
 1705 0124 5C3F9FE5 		ldr	r3, .L229+20
 1706 0128 0020A0E3 		mov	r2, #0
 1707 012c 0020C3E5 		strb	r2, [r3]
 1708              	.L80:
 690:../CX3RDKOV5640.c ****         }
 691:../CX3RDKOV5640.c ****         return CyFalse;
 1709              		.loc 1 691 0
 1710 0130 0030A0E3 		mov	r3, #0
 1711 0134 120500EA 		b	.L228
 1712              	.L79:
 692:../CX3RDKOV5640.c ****     }
 693:../CX3RDKOV5640.c **** 
 694:../CX3RDKOV5640.c ****     if( bRType == CY_U3P_USB_GS_DEVICE)
 1713              		.loc 1 694 0
 1714 0138 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 1715 013c 800053E3 		cmp	r3, #128
 1716 0140 0500001A 		bne	.L82
 695:../CX3RDKOV5640.c ****     {
 696:../CX3RDKOV5640.c ****         /* Make sure that we bring the link back to U0, so that the ERDY can be sent. */
 697:../CX3RDKOV5640.c ****         if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1717              		.loc 1 697 0
 1718 0144 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1719 0148 0030A0E1 		mov	r3, r0
 1720 014c 030053E3 		cmp	r3, #3
 1721 0150 0100001A 		bne	.L82
 698:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 1722              		.loc 1 698 0
 1723 0154 0000A0E3 		mov	r0, #0
 1724 0158 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 1725              	.L82:
 699:../CX3RDKOV5640.c ****     }
 700:../CX3RDKOV5640.c **** 
 701:../CX3RDKOV5640.c ****     if ((bTarget == CY_U3P_USB_TARGET_INTF) && ((bRequest == CY_U3P_USB_SC_SET_FEATURE)
 1726              		.loc 1 701 0
 1727 015c 10305BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1728 0160 010053E3 		cmp	r3, #1
 1729 0164 1400001A 		bne	.L83
 1730              		.loc 1 701 0 is_stmt 0 discriminator 1
 1731 0168 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1732 016c 030053E3 		cmp	r3, #3
 1733 0170 0200000A 		beq	.L84
 702:../CX3RDKOV5640.c ****                 || (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)) && (wValue == 0))
 1734              		.loc 1 702 0 is_stmt 1
 1735 0174 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1736 0178 010053E3 		cmp	r3, #1
 1737 017c 0E00001A 		bne	.L83
 1738              	.L84:
 1739              		.loc 1 702 0 is_stmt 0 discriminator 1
 1740 0180 B4315BE1 		ldrh	r3, [fp, #-20]
 1741 0184 000053E3 		cmp	r3, #0
 1742 0188 0B00001A 		bne	.L83
 703:../CX3RDKOV5640.c ****     {
 704:../CX3RDKOV5640.c ****         if (glIsConfigured)
 1743              		.loc 1 704 0 is_stmt 1
 1744 018c F83E9FE5 		ldr	r3, .L229+24
 1745 0190 003093E5 		ldr	r3, [r3]
 1746 0194 000053E3 		cmp	r3, #0
 1747 0198 0100000A 		beq	.L85
 705:../CX3RDKOV5640.c ****         {
 706:../CX3RDKOV5640.c ****             CyU3PUsbAckSetup ();
 1748              		.loc 1 706 0
 1749 019c FEFFFFEB 		bl	CyU3PUsbAckSetup
 1750 01a0 030000EA 		b	.L86
 1751              	.L85:
 707:../CX3RDKOV5640.c ****         }
 708:../CX3RDKOV5640.c ****         else
 709:../CX3RDKOV5640.c ****         {
 710:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1752              		.loc 1 710 0
 1753 01a4 0000A0E3 		mov	r0, #0
 1754 01a8 0110A0E3 		mov	r1, #1
 1755 01ac 0020A0E3 		mov	r2, #0
 1756 01b0 FEFFFFEB 		bl	CyU3PUsbStall
 1757              	.L86:
 711:../CX3RDKOV5640.c ****         }
 712:../CX3RDKOV5640.c ****         return CyTrue;
 1758              		.loc 1 712 0
 1759 01b4 0130A0E3 		mov	r3, #1
 1760 01b8 F10400EA 		b	.L228
 1761              	.L83:
 713:../CX3RDKOV5640.c ****     }
 714:../CX3RDKOV5640.c **** 
 715:../CX3RDKOV5640.c ****     if ((bRequest == CY_U3P_USB_SC_GET_STATUS) &&
 1762              		.loc 1 715 0
 1763 01bc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1764 01c0 000053E3 		cmp	r3, #0
 1765 01c4 1400001A 		bne	.L87
 1766              		.loc 1 715 0 is_stmt 0 discriminator 1
 1767 01c8 10305BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1768 01cc 010053E3 		cmp	r3, #1
 1769 01d0 1100001A 		bne	.L87
 716:../CX3RDKOV5640.c ****             (bTarget == CY_U3P_USB_TARGET_INTF))
 717:../CX3RDKOV5640.c ****     {
 718:../CX3RDKOV5640.c ****         /* We support only interface 0. */
 719:../CX3RDKOV5640.c ****         if (wIndex == 0)
 1770              		.loc 1 719 0 is_stmt 1
 1771 01d4 B6315BE1 		ldrh	r3, [fp, #-22]
 1772 01d8 000053E3 		cmp	r3, #0
 1773 01dc 0800001A 		bne	.L88
 720:../CX3RDKOV5640.c ****         {
 721:../CX3RDKOV5640.c ****             ep0Buf[0] = 0;
 1774              		.loc 1 721 0
 1775 01e0 0030A0E3 		mov	r3, #0
 1776 01e4 1C304BE5 		strb	r3, [fp, #-28]
 722:../CX3RDKOV5640.c ****             ep0Buf[1] = 0;
 1777              		.loc 1 722 0
 1778 01e8 0030A0E3 		mov	r3, #0
 1779 01ec 1B304BE5 		strb	r3, [fp, #-27]
 723:../CX3RDKOV5640.c ****             CyU3PUsbSendEP0Data (0x02, ep0Buf);
 1780              		.loc 1 723 0
 1781 01f0 1C304BE2 		sub	r3, fp, #28
 1782 01f4 0200A0E3 		mov	r0, #2
 1783 01f8 0310A0E1 		mov	r1, r3
 1784 01fc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1785 0200 030000EA 		b	.L89
 1786              	.L88:
 724:../CX3RDKOV5640.c ****         }
 725:../CX3RDKOV5640.c ****         else
 726:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1787              		.loc 1 726 0
 1788 0204 0000A0E3 		mov	r0, #0
 1789 0208 0110A0E3 		mov	r1, #1
 1790 020c 0020A0E3 		mov	r2, #0
 1791 0210 FEFFFFEB 		bl	CyU3PUsbStall
 1792              	.L89:
 727:../CX3RDKOV5640.c ****         return CyTrue;
 1793              		.loc 1 727 0
 1794 0214 0130A0E3 		mov	r3, #1
 1795 0218 D90400EA 		b	.L228
 1796              	.L87:
 728:../CX3RDKOV5640.c ****     }
 729:../CX3RDKOV5640.c **** 
 730:../CX3RDKOV5640.c ****     /* Check for UVC Class Requests */
 731:../CX3RDKOV5640.c ****     if (bType == CY_U3P_USB_CLASS_RQT)
 1797              		.loc 1 731 0
 1798 021c 0F305BE5 		ldrb	r3, [fp, #-15]	@ zero_extendqisi2
 1799 0220 200053E3 		cmp	r3, #32
 1800 0224 D504001A 		bne	.L90
 732:../CX3RDKOV5640.c ****     {
 733:../CX3RDKOV5640.c **** 
 734:../CX3RDKOV5640.c ****         /* UVC Class Requests */
 735:../CX3RDKOV5640.c ****         /* Requests to the Video Streaming Interface (IF 1) */
 736:../CX3RDKOV5640.c ****         if((wIndex & 0x00FF) == ES_UVC_STREAM_INTERFACE)
 1801              		.loc 1 736 0
 1802 0228 B6315BE1 		ldrh	r3, [fp, #-22]
 1803 022c FF3003E2 		and	r3, r3, #255
 1804 0230 010053E3 		cmp	r3, #1
 1805 0234 1D01001A 		bne	.L91
 737:../CX3RDKOV5640.c ****         {
 738:../CX3RDKOV5640.c ****             /* GET_CUR Request Handling Probe/Commit Controls*/
 739:../CX3RDKOV5640.c ****             if ((bRequest == ES_UVC_USB_GET_CUR_REQ)||(bRequest == ES_UVC_USB_GET_MIN_REQ) || (bReq
 1806              		.loc 1 739 0
 1807 0238 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1808 023c 810053E3 		cmp	r3, #129
 1809 0240 0800000A 		beq	.L92
 1810              		.loc 1 739 0 is_stmt 0 discriminator 1
 1811 0244 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1812 0248 820053E3 		cmp	r3, #130
 1813 024c 0500000A 		beq	.L92
 1814 0250 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1815 0254 830053E3 		cmp	r3, #131
 1816 0258 0200000A 		beq	.L92
 1817 025c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1818 0260 870053E3 		cmp	r3, #135
 1819 0264 5F00001A 		bne	.L93
 1820              	.L92:
 740:../CX3RDKOV5640.c ****             {
 741:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1821              		.loc 1 741 0 is_stmt 1
 1822 0268 0130A0E3 		mov	r3, #1
 1823 026c 08300BE5 		str	r3, [fp, #-8]
 742:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1824              		.loc 1 742 0
 1825 0270 B4315BE1 		ldrh	r3, [fp, #-20]
 1826 0274 010C53E3 		cmp	r3, #256
 1827 0278 0200000A 		beq	.L94
 1828              		.loc 1 742 0 is_stmt 0 discriminator 1
 1829 027c B4315BE1 		ldrh	r3, [fp, #-20]
 1830 0280 020C53E3 		cmp	r3, #512
 1831 0284 4000001A 		bne	.L95
 1832              	.L94:
 743:../CX3RDKOV5640.c ****                 {
 744:../CX3RDKOV5640.c ****                 	//TODO Modify this "glProbeCtrl" according to the Supported Preview Resolutions th
 745:../CX3RDKOV5640.c **** 
 746:../CX3RDKOV5640.c **** 					/* Host requests for probe data of 34 bytes (UVC 1.1) or 26 Bytes (UVC1.0). Send it over EP0. 
 747:../CX3RDKOV5640.c **** 					if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1833              		.loc 1 747 0 is_stmt 1
 1834 0288 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1835 028c 0030A0E1 		mov	r3, r0
 1836 0290 030053E3 		cmp	r3, #3
 1837 0294 2300001A 		bne	.L96
 748:../CX3RDKOV5640.c **** 					{
 749:../CX3RDKOV5640.c **** 						if(glCurrentFrameIndex == 4)
 1838              		.loc 1 749 0
 1839 0298 F03D9FE5 		ldr	r3, .L229+28
 1840 029c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1841 02a0 040053E3 		cmp	r3, #4
 1842 02a4 0400001A 		bne	.L97
 750:../CX3RDKOV5640.c **** 						{
 751:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl5MpProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1843              		.loc 1 751 0
 1844 02a8 E40D9FE5 		ldr	r0, .L229+32
 1845 02ac E41D9FE5 		ldr	r1, .L229+36
 1846 02b0 1A20A0E3 		mov	r2, #26
 1847 02b4 FEFFFFEB 		bl	CyU3PMemCopy
 1848 02b8 260000EA 		b	.L101
 1849              	.L97:
 752:../CX3RDKOV5640.c **** 						}
 753:../CX3RDKOV5640.c **** 						/* Probe Control for 1280x720 stream*/
 754:../CX3RDKOV5640.c **** 						else if(glCurrentFrameIndex == 3)
 1850              		.loc 1 754 0
 1851 02bc CC3D9FE5 		ldr	r3, .L229+28
 1852 02c0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1853 02c4 030053E3 		cmp	r3, #3
 1854 02c8 0400001A 		bne	.L99
 755:../CX3RDKOV5640.c **** 						{
 756:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl720pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1855              		.loc 1 756 0
 1856 02cc C00D9FE5 		ldr	r0, .L229+32
 1857 02d0 C41D9FE5 		ldr	r1, .L229+40
 1858 02d4 1A20A0E3 		mov	r2, #26
 1859 02d8 FEFFFFEB 		bl	CyU3PMemCopy
 1860 02dc 1D0000EA 		b	.L101
 1861              	.L99:
 757:../CX3RDKOV5640.c **** 						}
 758:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 759:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 2)
 1862              		.loc 1 759 0
 1863 02e0 A83D9FE5 		ldr	r3, .L229+28
 1864 02e4 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1865 02e8 020053E3 		cmp	r3, #2
 1866 02ec 0400001A 		bne	.L100
 760:../CX3RDKOV5640.c **** 						{
 761:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga60ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1867              		.loc 1 761 0
 1868 02f0 9C0D9FE5 		ldr	r0, .L229+32
 1869 02f4 A41D9FE5 		ldr	r1, .L229+44
 1870 02f8 1A20A0E3 		mov	r2, #26
 1871 02fc FEFFFFEB 		bl	CyU3PMemCopy
 1872 0300 140000EA 		b	.L101
 1873              	.L100:
 762:../CX3RDKOV5640.c **** 						}
 763:../CX3RDKOV5640.c **** 						/* Probe Control for 1920x1080 stream*/
 764:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 1)
 1874              		.loc 1 764 0
 1875 0304 843D9FE5 		ldr	r3, .L229+28
 1876 0308 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1877 030c 010053E3 		cmp	r3, #1
 1878 0310 1000001A 		bne	.L101
 765:../CX3RDKOV5640.c **** 						{
 766:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl1080pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1879              		.loc 1 766 0
 1880 0314 780D9FE5 		ldr	r0, .L229+32
 1881 0318 841D9FE5 		ldr	r1, .L229+48
 1882 031c 1A20A0E3 		mov	r2, #26
 1883 0320 FEFFFFEB 		bl	CyU3PMemCopy
 1884 0324 0B0000EA 		b	.L101
 1885              	.L96:
 767:../CX3RDKOV5640.c **** 						}
 768:../CX3RDKOV5640.c **** 
 769:../CX3RDKOV5640.c **** 					}
 770:../CX3RDKOV5640.c **** 					else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1886              		.loc 1 770 0
 1887 0328 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1888 032c 0030A0E1 		mov	r3, r0
 1889 0330 020053E3 		cmp	r3, #2
 1890 0334 0400001A 		bne	.L102
 771:../CX3RDKOV5640.c **** 					{
 772:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 773:../CX3RDKOV5640.c **** 						CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga30ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1891              		.loc 1 773 0
 1892 0338 540D9FE5 		ldr	r0, .L229+32
 1893 033c 641D9FE5 		ldr	r1, .L229+52
 1894 0340 1A20A0E3 		mov	r2, #26
 1895 0344 FEFFFFEB 		bl	CyU3PMemCopy
 1896 0348 020000EA 		b	.L101
 1897              	.L102:
 774:../CX3RDKOV5640.c **** 					}
 775:../CX3RDKOV5640.c **** 					else /* FULL-Speed*/
 776:../CX3RDKOV5640.c **** 					{
 777:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rFull Speed Not Supported!");
 1898              		.loc 1 777 0
 1899 034c 0400A0E3 		mov	r0, #4
 1900 0350 541D9FE5 		ldr	r1, .L229+56
 1901 0354 FEFFFFEB 		bl	CyU3PDebugPrint
 1902              	.L101:
 778:../CX3RDKOV5640.c **** 					}
 779:../CX3RDKOV5640.c **** 
 780:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(ES_UVC_MAX_PROBE_SETTING, glProbeCtrl);
 1903              		.loc 1 780 0
 1904 0358 1A00A0E3 		mov	r0, #26
 1905 035c 301D9FE5 		ldr	r1, .L229+32
 1906 0360 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1907 0364 0C000BE5 		str	r0, [fp, #-12]
 781:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1908              		.loc 1 781 0
 1909 0368 0C301BE5 		ldr	r3, [fp, #-12]
 1910 036c 000053E3 		cmp	r3, #0
 1911 0370 0400000A 		beq	.L103
 782:../CX3RDKOV5640.c **** 					{
 783:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1912              		.loc 1 783 0
 1913 0374 0400A0E3 		mov	r0, #4
 1914 0378 301D9FE5 		ldr	r1, .L229+60
 1915 037c 0C201BE5 		ldr	r2, [fp, #-12]
 1916 0380 FEFFFFEB 		bl	CyU3PDebugPrint
 781:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1917              		.loc 1 781 0
 1918 0384 160000EA 		b	.L104
 1919              	.L103:
 781:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1920              		.loc 1 781 0 is_stmt 0 discriminator 1
 1921 0388 150000EA 		b	.L104
 1922              	.L95:
 784:../CX3RDKOV5640.c **** 					}
 785:../CX3RDKOV5640.c ****                 }
 786:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 1923              		.loc 1 786 0 is_stmt 1
 1924 038c B4315BE1 		ldrh	r3, [fp, #-20]
 1925 0390 030C53E3 		cmp	r3, #768
 1926 0394 0200000A 		beq	.L105
 1927              		.loc 1 786 0 is_stmt 0 discriminator 1
 1928 0398 B4315BE1 		ldrh	r3, [fp, #-20]
 1929 039c 010B53E3 		cmp	r3, #1024
 1930 03a0 0F00001A 		bne	.L104
 1931              	.L105:
 787:../CX3RDKOV5640.c ****                 {
 788:../CX3RDKOV5640.c ****                 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1932              		.loc 1 788 0 is_stmt 1
 1933 03a4 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1934 03a8 0030A0E1 		mov	r3, r0
 1935 03ac 030053E3 		cmp	r3, #3
 1936 03b0 0B00001A 		bne	.L104
 789:../CX3RDKOV5640.c ****                 	{
 790:../CX3RDKOV5640.c **** 						status = CyU3PUsbSendEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING, glStillProbeCtrl);
 1937              		.loc 1 790 0
 1938 03b4 0B00A0E3 		mov	r0, #11
 1939 03b8 F41C9FE5 		ldr	r1, .L229+64
 1940 03bc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1941 03c0 0C000BE5 		str	r0, [fp, #-12]
 791:../CX3RDKOV5640.c **** 						if (status != CY_U3P_SUCCESS)
 1942              		.loc 1 791 0
 1943 03c4 0C301BE5 		ldr	r3, [fp, #-12]
 1944 03c8 000053E3 		cmp	r3, #0
 1945 03cc 0400000A 		beq	.L104
 792:../CX3RDKOV5640.c **** 						{
 793:../CX3RDKOV5640.c **** 							CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1946              		.loc 1 793 0
 1947 03d0 0400A0E3 		mov	r0, #4
 1948 03d4 D41C9FE5 		ldr	r1, .L229+60
 1949 03d8 0C201BE5 		ldr	r2, [fp, #-12]
 1950 03dc FEFFFFEB 		bl	CyU3PDebugPrint
 742:../CX3RDKOV5640.c ****                 {
 1951              		.loc 1 742 0
 1952 03e0 B10000EA 		b	.L106
 1953              	.L104:
 1954 03e4 B00000EA 		b	.L106
 1955              	.L93:
 794:../CX3RDKOV5640.c **** 						}
 795:../CX3RDKOV5640.c ****                 	}
 796:../CX3RDKOV5640.c ****                 }
 797:../CX3RDKOV5640.c ****             }
 798:../CX3RDKOV5640.c ****             /* SET_CUR request handling Probe/Commit controls */
 799:../CX3RDKOV5640.c ****             else if (bRequest == ES_UVC_USB_SET_CUR_REQ)
 1956              		.loc 1 799 0
 1957 03e8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1958 03ec 010053E3 		cmp	r3, #1
 1959 03f0 AA00001A 		bne	.L107
 800:../CX3RDKOV5640.c ****             {
 801:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1960              		.loc 1 801 0
 1961 03f4 0130A0E3 		mov	r3, #1
 1962 03f8 08300BE5 		str	r3, [fp, #-8]
 802:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1963              		.loc 1 802 0
 1964 03fc B4315BE1 		ldrh	r3, [fp, #-20]
 1965 0400 010C53E3 		cmp	r3, #256
 1966 0404 0200000A 		beq	.L108
 1967              		.loc 1 802 0 is_stmt 0 discriminator 1
 1968 0408 B4315BE1 		ldrh	r3, [fp, #-20]
 1969 040c 020C53E3 		cmp	r3, #512
 1970 0410 5400001A 		bne	.L109
 1971              	.L108:
 803:../CX3RDKOV5640.c ****                 {
 804:../CX3RDKOV5640.c **** 					/* Get the UVC probe/commit control data from EP0 */
 805:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_PROBE_SETTING_ALIGNED,
 1972              		.loc 1 805 0 is_stmt 1
 1973 0414 1A304BE2 		sub	r3, fp, #26
 1974 0418 2000A0E3 		mov	r0, #32
 1975 041c 941C9FE5 		ldr	r1, .L229+68
 1976 0420 0320A0E1 		mov	r2, r3
 1977 0424 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 1978 0428 0C000BE5 		str	r0, [fp, #-12]
 806:../CX3RDKOV5640.c **** 							glCommitCtrl, &readCount);
 807:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1979              		.loc 1 807 0
 1980 042c 0C301BE5 		ldr	r3, [fp, #-12]
 1981 0430 000053E3 		cmp	r3, #0
 1982 0434 0300000A 		beq	.L110
 808:../CX3RDKOV5640.c **** 					{
 809:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 1983              		.loc 1 809 0
 1984 0438 0400A0E3 		mov	r0, #4
 1985 043c 781C9FE5 		ldr	r1, .L229+72
 1986 0440 0C201BE5 		ldr	r2, [fp, #-12]
 1987 0444 FEFFFFEB 		bl	CyU3PDebugPrint
 1988              	.L110:
 810:../CX3RDKOV5640.c **** 					}
 811:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 812:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_PROBE_SETTING)
 1989              		.loc 1 812 0
 1990 0448 BA315BE1 		ldrh	r3, [fp, #-26]
 1991 044c 1A0053E3 		cmp	r3, #26
 1992 0450 0300009A 		bls	.L111
 813:../CX3RDKOV5640.c **** 					{
 814:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 1993              		.loc 1 814 0
 1994 0454 0400A0E3 		mov	r0, #4
 1995 0458 601C9FE5 		ldr	r1, .L229+76
 1996 045c FEFFFFEB 		bl	CyU3PDebugPrint
 1997 0460 3F0000EA 		b	.L112
 1998              	.L111:
 815:../CX3RDKOV5640.c **** 					}
 816:../CX3RDKOV5640.c **** 					else
 817:../CX3RDKOV5640.c **** 					{
 818:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 819:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_VS_PROBE_CONTROL)
 1999              		.loc 1 819 0
 2000 0464 B4315BE1 		ldrh	r3, [fp, #-20]
 2001 0468 010C53E3 		cmp	r3, #256
 2002 046c 0400001A 		bne	.L113
 820:../CX3RDKOV5640.c **** 						{
 821:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 2003              		.loc 1 821 0
 2004 0470 403C9FE5 		ldr	r3, .L229+68
 2005 0474 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2006 0478 103C9FE5 		ldr	r3, .L229+28
 2007 047c 0020C3E5 		strb	r2, [r3]
 2008 0480 370000EA 		b	.L112
 2009              	.L113:
 822:../CX3RDKOV5640.c **** 						}
 823:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 824:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_VS_COMMIT_CONTROL)
 2010              		.loc 1 824 0
 2011 0484 B4315BE1 		ldrh	r3, [fp, #-20]
 2012 0488 020C53E3 		cmp	r3, #512
 2013 048c 3400001A 		bne	.L112
 825:../CX3RDKOV5640.c **** 						{
 826:../CX3RDKOV5640.c **** 
 827:../CX3RDKOV5640.c **** 							if((glcommitcount==0)||(glcheckframe!=glCommitCtrl[3]))
 2014              		.loc 1 827 0
 2015 0490 F03B9FE5 		ldr	r3, .L229+20
 2016 0494 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2017 0498 000053E3 		cmp	r3, #0
 2018 049c 0500000A 		beq	.L114
 2019              		.loc 1 827 0 is_stmt 0 discriminator 1
 2020 04a0 103C9FE5 		ldr	r3, .L229+68
 2021 04a4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2022 04a8 143C9FE5 		ldr	r3, .L229+80
 2023 04ac 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2024 04b0 030052E1 		cmp	r2, r3
 2025 04b4 2A00000A 		beq	.L112
 2026              	.L114:
 828:../CX3RDKOV5640.c **** 							{
 829:../CX3RDKOV5640.c **** 								glcommitcount++;
 2027              		.loc 1 829 0 is_stmt 1
 2028 04b8 C83B9FE5 		ldr	r3, .L229+20
 2029 04bc 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2030 04c0 013083E2 		add	r3, r3, #1
 2031 04c4 FF2003E2 		and	r2, r3, #255
 2032 04c8 B83B9FE5 		ldr	r3, .L229+20
 2033 04cc 0020C3E5 		strb	r2, [r3]
 830:../CX3RDKOV5640.c **** 								glcheckframe=glCommitCtrl[3];
 2034              		.loc 1 830 0
 2035 04d0 E03B9FE5 		ldr	r3, .L229+68
 2036 04d4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2037 04d8 E43B9FE5 		ldr	r3, .L229+80
 2038 04dc 0020C3E5 		strb	r2, [r3]
 831:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 2039              		.loc 1 831 0
 2040 04e0 D03B9FE5 		ldr	r3, .L229+68
 2041 04e4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2042 04e8 A03B9FE5 		ldr	r3, .L229+28
 2043 04ec 0020C3E5 		strb	r2, [r3]
 832:../CX3RDKOV5640.c **** 							glFrameIndexToSet = glCurrentFrameIndex;
 2044              		.loc 1 832 0
 2045 04f0 983B9FE5 		ldr	r3, .L229+28
 2046 04f4 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 2047 04f8 C83B9FE5 		ldr	r3, .L229+84
 2048 04fc 0020C3E5 		strb	r2, [r3]
 833:../CX3RDKOV5640.c **** 							glPreviewStarted = CyTrue;
 2049              		.loc 1 833 0
 2050 0500 783B9FE5 		ldr	r3, .L229+12
 2051 0504 0120A0E3 		mov	r2, #1
 2052 0508 002083E5 		str	r2, [r3]
 834:../CX3RDKOV5640.c **** 
 835:../CX3RDKOV5640.c **** 							//TODO Change this function with "Sensor Specific" function to write the sensor settings & c
 836:../CX3RDKOV5640.c **** 						//	esSetCameraResolution(glCurrentFrameIndex);
 837:../CX3RDKOV5640.c **** 							esSetCameraResolution(glCommitCtrl[3]);
 2053              		.loc 1 837 0
 2054 050c A43B9FE5 		ldr	r3, .L229+68
 2055 0510 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2056 0514 0300A0E1 		mov	r0, r3
 2057 0518 FEFFFFEB 		bl	esSetCameraResolution
 838:../CX3RDKOV5640.c **** 
 839:../CX3RDKOV5640.c **** 							if (glIsApplnActive)
 2058              		.loc 1 839 0
 2059 051c 543B9FE5 		ldr	r3, .L229+4
 2060 0520 003093E5 		ldr	r3, [r3]
 2061 0524 000053E3 		cmp	r3, #0
 2062 0528 0B00000A 		beq	.L115
 840:../CX3RDKOV5640.c **** 							{
 841:../CX3RDKOV5640.c **** 								if(glcommitcount)
 2063              		.loc 1 841 0
 2064 052c 543B9FE5 		ldr	r3, .L229+20
 2065 0530 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2066 0534 000053E3 		cmp	r3, #0
 2067 0538 0300000A 		beq	.L116
 842:../CX3RDKOV5640.c **** 									glIsClearFeature = CyFalse;
 2068              		.loc 1 842 0
 2069 053c 403B9FE5 		ldr	r3, .L229+16
 2070 0540 0020A0E3 		mov	r2, #0
 2071 0544 002083E5 		str	r2, [r3]
 2072 0548 020000EA 		b	.L117
 2073              	.L116:
 843:../CX3RDKOV5640.c **** 								else
 844:../CX3RDKOV5640.c **** 									glIsClearFeature = CyTrue;
 2074              		.loc 1 844 0
 2075 054c 303B9FE5 		ldr	r3, .L229+16
 2076 0550 0120A0E3 		mov	r2, #1
 2077 0554 002083E5 		str	r2, [r3]
 2078              	.L117:
 845:../CX3RDKOV5640.c **** 
 846:../CX3RDKOV5640.c **** 								esUVCUvcApplnStop();
 2079              		.loc 1 846 0
 2080 0558 FEFFFFEB 		bl	esUVCUvcApplnStop
 2081              	.L115:
 847:../CX3RDKOV5640.c **** 							}
 848:../CX3RDKOV5640.c **** 							esUVCUvcApplnStart();
 2082              		.loc 1 848 0
 2083 055c FEFFFFEB 		bl	esUVCUvcApplnStart
 812:../CX3RDKOV5640.c **** 					{
 2084              		.loc 1 812 0
 2085 0560 4D0000EA 		b	.L118
 2086              	.L112:
 2087 0564 4C0000EA 		b	.L118
 2088              	.L109:
 849:../CX3RDKOV5640.c **** 							}
 850:../CX3RDKOV5640.c **** 						}
 851:../CX3RDKOV5640.c **** 					}
 852:../CX3RDKOV5640.c ****                 }
 853:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 2089              		.loc 1 853 0
 2090 0568 B4315BE1 		ldrh	r3, [fp, #-20]
 2091 056c 030C53E3 		cmp	r3, #768
 2092 0570 0200000A 		beq	.L119
 2093              		.loc 1 853 0 is_stmt 0 discriminator 1
 2094 0574 B4315BE1 		ldrh	r3, [fp, #-20]
 2095 0578 010B53E3 		cmp	r3, #1024
 2096 057c 2400001A 		bne	.L120
 2097              	.L119:
 854:../CX3RDKOV5640.c ****                 {
 855:../CX3RDKOV5640.c ****                 	/* Get the UVC STILL probe/commit control data from EP0 */
 856:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED,glStillCommitCtrl, &readCou
 2098              		.loc 1 856 0 is_stmt 1
 2099 0580 1A304BE2 		sub	r3, fp, #26
 2100 0584 2000A0E3 		mov	r0, #32
 2101 0588 3C1B9FE5 		ldr	r1, .L229+88
 2102 058c 0320A0E1 		mov	r2, r3
 2103 0590 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2104 0594 0C000BE5 		str	r0, [fp, #-12]
 857:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2105              		.loc 1 857 0
 2106 0598 0C301BE5 		ldr	r3, [fp, #-12]
 2107 059c 000053E3 		cmp	r3, #0
 2108 05a0 0300000A 		beq	.L121
 858:../CX3RDKOV5640.c **** 					{
 859:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2109              		.loc 1 859 0
 2110 05a4 0400A0E3 		mov	r0, #4
 2111 05a8 0C1B9FE5 		ldr	r1, .L229+72
 2112 05ac 0C201BE5 		ldr	r2, [fp, #-12]
 2113 05b0 FEFFFFEB 		bl	CyU3PDebugPrint
 2114              	.L121:
 860:../CX3RDKOV5640.c **** 					}
 861:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 862:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_STILL_PROBE_SETTING)
 2115              		.loc 1 862 0
 2116 05b4 BA315BE1 		ldrh	r3, [fp, #-26]
 2117 05b8 0B0053E3 		cmp	r3, #11
 2118 05bc 0300009A 		bls	.L122
 863:../CX3RDKOV5640.c **** 					{
 864:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2119              		.loc 1 864 0
 2120 05c0 0400A0E3 		mov	r0, #4
 2121 05c4 F41A9FE5 		ldr	r1, .L229+76
 2122 05c8 FEFFFFEB 		bl	CyU3PDebugPrint
 2123 05cc 0F0000EA 		b	.L123
 2124              	.L122:
 865:../CX3RDKOV5640.c **** 					}
 866:../CX3RDKOV5640.c **** 					else
 867:../CX3RDKOV5640.c **** 					{
 868:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 869:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_STILL_PROBE_CONTROL)
 2125              		.loc 1 869 0
 2126 05d0 B4315BE1 		ldrh	r3, [fp, #-20]
 2127 05d4 030C53E3 		cmp	r3, #768
 2128 05d8 0400001A 		bne	.L124
 870:../CX3RDKOV5640.c **** 						{
 871:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2129              		.loc 1 871 0
 2130 05dc E83A9FE5 		ldr	r3, .L229+88
 2131 05e0 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2132 05e4 E43A9FE5 		ldr	r3, .L229+92
 2133 05e8 0020C3E5 		strb	r2, [r3]
 2134 05ec 070000EA 		b	.L123
 2135              	.L124:
 872:../CX3RDKOV5640.c **** 						}
 873:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 874:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_STILL_COMMIT_CONTROL)
 2136              		.loc 1 874 0
 2137 05f0 B4315BE1 		ldrh	r3, [fp, #-20]
 2138 05f4 010B53E3 		cmp	r3, #1024
 2139 05f8 0400001A 		bne	.L123
 875:../CX3RDKOV5640.c **** 						{
 876:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2140              		.loc 1 876 0
 2141 05fc C83A9FE5 		ldr	r3, .L229+88
 2142 0600 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2143 0604 C43A9FE5 		ldr	r3, .L229+92
 2144 0608 0020C3E5 		strb	r2, [r3]
 862:../CX3RDKOV5640.c **** 					{
 2145              		.loc 1 862 0
 2146 060c 220000EA 		b	.L118
 2147              	.L123:
 2148 0610 210000EA 		b	.L118
 2149              	.L120:
 877:../CX3RDKOV5640.c **** 						}
 878:../CX3RDKOV5640.c **** 					}
 879:../CX3RDKOV5640.c **** 
 880:../CX3RDKOV5640.c ****                 }
 881:../CX3RDKOV5640.c ****                 else if(wValue == ES_UVC_STILL_TRIGGER)
 2150              		.loc 1 881 0
 2151 0614 B4315BE1 		ldrh	r3, [fp, #-20]
 2152 0618 050C53E3 		cmp	r3, #1280
 2153 061c D703001A 		bne	.L90
 882:../CX3RDKOV5640.c ****                 {
 883:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_STILL_TRIGGER_ALIGNED,&glStillTriggerCtrl, &readCount);
 2154              		.loc 1 883 0
 2155 0620 1A304BE2 		sub	r3, fp, #26
 2156 0624 1000A0E3 		mov	r0, #16
 2157 0628 A41A9FE5 		ldr	r1, .L229+96
 2158 062c 0320A0E1 		mov	r2, r3
 2159 0630 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2160 0634 0C000BE5 		str	r0, [fp, #-12]
 884:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2161              		.loc 1 884 0
 2162 0638 0C301BE5 		ldr	r3, [fp, #-12]
 2163 063c 000053E3 		cmp	r3, #0
 2164 0640 0300000A 		beq	.L125
 885:../CX3RDKOV5640.c **** 					{
 886:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2165              		.loc 1 886 0
 2166 0644 0400A0E3 		mov	r0, #4
 2167 0648 6C1A9FE5 		ldr	r1, .L229+72
 2168 064c 0C201BE5 		ldr	r2, [fp, #-12]
 2169 0650 FEFFFFEB 		bl	CyU3PDebugPrint
 2170              	.L125:
 887:../CX3RDKOV5640.c **** 					}
 888:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 889:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_STILL_TRIGGER_COUNT)
 2171              		.loc 1 889 0
 2172 0654 BA315BE1 		ldrh	r3, [fp, #-26]
 2173 0658 010053E3 		cmp	r3, #1
 2174 065c 0300009A 		bls	.L126
 890:../CX3RDKOV5640.c **** 					{
 891:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2175              		.loc 1 891 0
 2176 0660 0400A0E3 		mov	r0, #4
 2177 0664 541A9FE5 		ldr	r1, .L229+76
 2178 0668 FEFFFFEB 		bl	CyU3PDebugPrint
 2179 066c C30300EA 		b	.L90
 2180              	.L126:
 892:../CX3RDKOV5640.c **** 					}
 893:../CX3RDKOV5640.c **** 					else
 894:../CX3RDKOV5640.c **** 					{
 895:../CX3RDKOV5640.c **** 						if(glStillTriggerCtrl == 0x01)
 2181              		.loc 1 895 0
 2182 0670 5C3A9FE5 		ldr	r3, .L229+96
 2183 0674 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2184 0678 010053E3 		cmp	r3, #1
 2185 067c BF03001A 		bne	.L90
 896:../CX3RDKOV5640.c **** 						{
 897:../CX3RDKOV5640.c **** 							glStillSkip = 3;
 2186              		.loc 1 897 0
 2187 0680 503A9FE5 		ldr	r3, .L229+100
 2188 0684 0320A0E3 		mov	r2, #3
 2189 0688 0020C3E5 		strb	r2, [r3]
 898:../CX3RDKOV5640.c **** 							glStillCaptureStart = CyTrue;
 2190              		.loc 1 898 0
 2191 068c 483A9FE5 		ldr	r3, .L229+104
 2192 0690 0120A0E3 		mov	r2, #1
 2193 0694 002083E5 		str	r2, [r3]
 2194 0698 B80300EA 		b	.L90
 2195              	.L118:
 2196 069c B70300EA 		b	.L90
 2197              	.L107:
 899:../CX3RDKOV5640.c **** 						}
 900:../CX3RDKOV5640.c **** 					}
 901:../CX3RDKOV5640.c ****                 }
 902:../CX3RDKOV5640.c ****             }
 903:../CX3RDKOV5640.c ****             else
 904:../CX3RDKOV5640.c ****             {
 905:../CX3RDKOV5640.c ****                 /* Mark with error. */
 906:../CX3RDKOV5640.c ****                 status = CY_U3P_ERROR_FAILURE;
 2198              		.loc 1 906 0
 2199 06a0 4A30A0E3 		mov	r3, #74
 2200 06a4 0C300BE5 		str	r3, [fp, #-12]
 2201 06a8 B40300EA 		b	.L90
 2202              	.L106:
 2203 06ac B30300EA 		b	.L90
 2204              	.L91:
 907:../CX3RDKOV5640.c ****             }
 908:../CX3RDKOV5640.c ****         }
 909:../CX3RDKOV5640.c ****         else if((wIndex & 0x00FF) == ES_UVC_CONTROL_INTERFACE) /* Video Control Interface */
 2205              		.loc 1 909 0
 2206 06b0 B6315BE1 		ldrh	r3, [fp, #-22]
 2207 06b4 FF3003E2 		and	r3, r3, #255
 2208 06b8 000053E3 		cmp	r3, #0
 2209 06bc AF03001A 		bne	.L90
 910:../CX3RDKOV5640.c ****         {
 911:../CX3RDKOV5640.c ****             isHandled = CyTrue;
 2210              		.loc 1 911 0
 2211 06c0 0130A0E3 		mov	r3, #1
 2212 06c4 08300BE5 		str	r3, [fp, #-8]
 912:../CX3RDKOV5640.c ****             /* Respond to VC_REQUEST_ERROR_CODE_CONTROL and stall every other request as this examp
 913:../CX3RDKOV5640.c ****                any of the Video Control features */
 914:../CX3RDKOV5640.c ****             if((wIndex == 0x200) && (wValue == 0x200))/*Brightness*/
 2213              		.loc 1 914 0
 2214 06c8 B6315BE1 		ldrh	r3, [fp, #-22]
 2215 06cc 020C53E3 		cmp	r3, #512
 2216 06d0 4D00001A 		bne	.L127
 2217              		.loc 1 914 0 is_stmt 0 discriminator 1
 2218 06d4 B4315BE1 		ldrh	r3, [fp, #-20]
 2219 06d8 020C53E3 		cmp	r3, #512
 2220 06dc 4A00001A 		bne	.L127
 915:../CX3RDKOV5640.c ****             {
 916:../CX3RDKOV5640.c ****             	switch(bRequest)
 2221              		.loc 1 916 0 is_stmt 1
 2222 06e0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2223 06e4 840053E3 		cmp	r3, #132
 2224 06e8 040000CA 		bgt	.L129
 2225 06ec 810053E3 		cmp	r3, #129
 2226 06f0 170000AA 		bge	.L130
 2227 06f4 010053E3 		cmp	r3, #1
 2228 06f8 2D00000A 		beq	.L131
 917:../CX3RDKOV5640.c ****             	{
 918:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_INFO_REQ:
 919:../CX3RDKOV5640.c ****             		glGet_Info=0x03;
 920:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 921:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 922:../CX3RDKOV5640.c **** 					{
 923:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 924:../CX3RDKOV5640.c **** 					}
 925:../CX3RDKOV5640.c **** 					break;
 926:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 927:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MAX_REQ:
 928:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_RES_REQ:
 929:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_CUR_REQ:
 930:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_DEF_REQ:
 931:../CX3RDKOV5640.c ****             		RequestOption = (bRequest & 0x0F);
 932:../CX3RDKOV5640.c **** 
 933:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service all the GE
 934:../CX3RDKOV5640.c ****             		gl16GetControl = CAMERA_GetBrightness(RequestOption);
 935:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 936:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 937:../CX3RDKOV5640.c **** 					{
 938:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 939:../CX3RDKOV5640.c **** 					}
 940:../CX3RDKOV5640.c ****             		break;
 941:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 942:../CX3RDKOV5640.c ****             		status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
 943:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 944:../CX3RDKOV5640.c **** 					{
 945:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 946:../CX3RDKOV5640.c **** 					}
 947:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service the SET re
 948:../CX3RDKOV5640.c **** 					CAMERA_SetBrightness((int8_t)gl16SetControl);
 949:../CX3RDKOV5640.c **** 					break;
 950:../CX3RDKOV5640.c ****             	}
 951:../CX3RDKOV5640.c ****             }
 2229              		.loc 1 951 0
 2230 06fc 9F0300EA 		b	.L90
 2231              	.L129:
 916:../CX3RDKOV5640.c ****             	{
 2232              		.loc 1 916 0
 2233 0700 860053E3 		cmp	r3, #134
 2234 0704 0200000A 		beq	.L132
 2235 0708 870053E3 		cmp	r3, #135
 2236 070c 1000000A 		beq	.L130
 2237              		.loc 1 951 0
 2238 0710 9A0300EA 		b	.L90
 2239              	.L132:
 919:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2240              		.loc 1 919 0
 2241 0714 DC399FE5 		ldr	r3, .L229+132
 2242 0718 0320A0E3 		mov	r2, #3
 2243 071c 0020C3E5 		strb	r2, [r3]
 920:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2244              		.loc 1 920 0
 2245 0720 0100A0E3 		mov	r0, #1
 2246 0724 CC199FE5 		ldr	r1, .L229+132
 2247 0728 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2248 072c 0C000BE5 		str	r0, [fp, #-12]
 921:../CX3RDKOV5640.c **** 					{
 2249              		.loc 1 921 0
 2250 0730 0C301BE5 		ldr	r3, [fp, #-12]
 2251 0734 000053E3 		cmp	r3, #0
 2252 0738 0400000A 		beq	.L133
 923:../CX3RDKOV5640.c **** 					}
 2253              		.loc 1 923 0
 2254 073c 0400A0E3 		mov	r0, #4
 2255 0740 BC199FE5 		ldr	r1, .L229+144
 2256 0744 0C201BE5 		ldr	r2, [fp, #-12]
 2257 0748 FEFFFFEB 		bl	CyU3PDebugPrint
 925:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 2258              		.loc 1 925 0
 2259 074c 2D0000EA 		b	.L128
 2260              	.L133:
 2261 0750 2C0000EA 		b	.L128
 2262              	.L130:
 931:../CX3RDKOV5640.c **** 
 2263              		.loc 1 931 0
 2264 0754 11305BE5 		ldrb	r3, [fp, #-17]
 2265 0758 0F3003E2 		and	r3, r3, #15
 2266 075c 0D304BE5 		strb	r3, [fp, #-13]
 934:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2267              		.loc 1 934 0
 2268 0760 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2269 0764 0300A0E1 		mov	r0, r3
 2270 0768 FEFFFFEB 		bl	CAMERA_GetBrightness
 2271 076c 0030A0E1 		mov	r3, r0
 2272 0770 0338A0E1 		mov	r3, r3, asl #16
 2273 0774 2328A0E1 		mov	r2, r3, lsr #16
 2274 0778 7C399FE5 		ldr	r3, .L229+136
 2275 077c B020C3E1 		strh	r2, [r3]	@ movhi
 935:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2276              		.loc 1 935 0
 2277 0780 0200A0E3 		mov	r0, #2
 2278 0784 70199FE5 		ldr	r1, .L229+136
 2279 0788 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2280 078c 0C000BE5 		str	r0, [fp, #-12]
 936:../CX3RDKOV5640.c **** 					{
 2281              		.loc 1 936 0
 2282 0790 0C301BE5 		ldr	r3, [fp, #-12]
 2283 0794 000053E3 		cmp	r3, #0
 2284 0798 0400000A 		beq	.L134
 938:../CX3RDKOV5640.c **** 					}
 2285              		.loc 1 938 0
 2286 079c 0400A0E3 		mov	r0, #4
 2287 07a0 5C199FE5 		ldr	r1, .L229+144
 2288 07a4 0C201BE5 		ldr	r2, [fp, #-12]
 2289 07a8 FEFFFFEB 		bl	CyU3PDebugPrint
 940:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 2290              		.loc 1 940 0
 2291 07ac 150000EA 		b	.L128
 2292              	.L134:
 2293 07b0 140000EA 		b	.L128
 2294              	.L131:
 942:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 2295              		.loc 1 942 0
 2296 07b4 1A304BE2 		sub	r3, fp, #26
 2297 07b8 1000A0E3 		mov	r0, #16
 2298 07bc 3C199FE5 		ldr	r1, .L229+140
 2299 07c0 0320A0E1 		mov	r2, r3
 2300 07c4 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2301 07c8 0C000BE5 		str	r0, [fp, #-12]
 943:../CX3RDKOV5640.c **** 					{
 2302              		.loc 1 943 0
 2303 07cc 0C301BE5 		ldr	r3, [fp, #-12]
 2304 07d0 000053E3 		cmp	r3, #0
 2305 07d4 0300000A 		beq	.L135
 945:../CX3RDKOV5640.c **** 					}
 2306              		.loc 1 945 0
 2307 07d8 0400A0E3 		mov	r0, #4
 2308 07dc 20199FE5 		ldr	r1, .L229+144
 2309 07e0 0C201BE5 		ldr	r2, [fp, #-12]
 2310 07e4 FEFFFFEB 		bl	CyU3PDebugPrint
 2311              	.L135:
 948:../CX3RDKOV5640.c **** 					break;
 2312              		.loc 1 948 0
 2313 07e8 10399FE5 		ldr	r3, .L229+140
 2314 07ec B030D3E1 		ldrh	r3, [r3]
 2315 07f0 FF3003E2 		and	r3, r3, #255
 2316 07f4 033CA0E1 		mov	r3, r3, asl #24
 2317 07f8 433CA0E1 		mov	r3, r3, asr #24
 2318 07fc 0300A0E1 		mov	r0, r3
 2319 0800 FEFFFFEB 		bl	CAMERA_SetBrightness
 949:../CX3RDKOV5640.c ****             	}
 2320              		.loc 1 949 0
 2321 0804 0000A0E1 		mov	r0, r0	@ nop
 2322              	.L128:
 2323              		.loc 1 951 0
 2324 0808 5C0300EA 		b	.L90
 2325              	.L127:
 952:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x200))/*Auto Exposure*/
 2326              		.loc 1 952 0
 2327 080c B6315BE1 		ldrh	r3, [fp, #-22]
 2328 0810 010C53E3 		cmp	r3, #256
 2329 0814 4A00001A 		bne	.L136
 2330              		.loc 1 952 0 is_stmt 0 discriminator 1
 2331 0818 B4315BE1 		ldrh	r3, [fp, #-20]
 2332 081c 020C53E3 		cmp	r3, #512
 2333 0820 4700001A 		bne	.L136
 953:../CX3RDKOV5640.c **** 			{
 954:../CX3RDKOV5640.c ****             //	CyU3PDebugPrint (4, "\n\rAuto Exposure");
 955:../CX3RDKOV5640.c **** 				switch(bRequest)
 2334              		.loc 1 955 0 is_stmt 1
 2335 0824 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2336 0828 840053E3 		cmp	r3, #132
 2337 082c 040000CA 		bgt	.L138
 2338 0830 810053E3 		cmp	r3, #129
 2339 0834 170000AA 		bge	.L139
 2340 0838 010053E3 		cmp	r3, #1
 2341 083c 2C00000A 		beq	.L140
 956:../CX3RDKOV5640.c **** 				{
 957:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
 958:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
 959:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 960:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 961:../CX3RDKOV5640.c **** 					{
 962:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 963:../CX3RDKOV5640.c **** 					}
 964:../CX3RDKOV5640.c **** 					break;
 965:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 966:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
 967:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
 968:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
 969:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
 970:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
 971:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 972:../CX3RDKOV5640.c **** 					gl8GetControl = CAMERA_GetAutoExposure(RequestOption);
 973:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 974:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 975:../CX3RDKOV5640.c **** 					{
 976:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 977:../CX3RDKOV5640.c **** 					}
 978:../CX3RDKOV5640.c **** 					break;
 979:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 980:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
 981:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 982:../CX3RDKOV5640.c **** 					{
 983:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 984:../CX3RDKOV5640.c **** 					}
 985:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
 986:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Exposure= %d",gl8SetControl);
 987:../CX3RDKOV5640.c **** 					CAMERA_SetAutoExposure(gl8SetControl);
 988:../CX3RDKOV5640.c **** 					break;
 989:../CX3RDKOV5640.c **** 				}
 990:../CX3RDKOV5640.c **** 			}
 2342              		.loc 1 990 0
 2343 0840 4E0300EA 		b	.L90
 2344              	.L138:
 955:../CX3RDKOV5640.c **** 				{
 2345              		.loc 1 955 0
 2346 0844 860053E3 		cmp	r3, #134
 2347 0848 0200000A 		beq	.L141
 2348 084c 870053E3 		cmp	r3, #135
 2349 0850 1000000A 		beq	.L139
 2350              		.loc 1 990 0
 2351 0854 490300EA 		b	.L90
 2352              	.L141:
 958:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2353              		.loc 1 958 0
 2354 0858 98389FE5 		ldr	r3, .L229+132
 2355 085c 0320A0E3 		mov	r2, #3
 2356 0860 0020C3E5 		strb	r2, [r3]
 959:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2357              		.loc 1 959 0
 2358 0864 0100A0E3 		mov	r0, #1
 2359 0868 88189FE5 		ldr	r1, .L229+132
 2360 086c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2361 0870 0C000BE5 		str	r0, [fp, #-12]
 960:../CX3RDKOV5640.c **** 					{
 2362              		.loc 1 960 0
 2363 0874 0C301BE5 		ldr	r3, [fp, #-12]
 2364 0878 000053E3 		cmp	r3, #0
 2365 087c 0400000A 		beq	.L142
 962:../CX3RDKOV5640.c **** 					}
 2366              		.loc 1 962 0
 2367 0880 0400A0E3 		mov	r0, #4
 2368 0884 78189FE5 		ldr	r1, .L229+144
 2369 0888 0C201BE5 		ldr	r2, [fp, #-12]
 2370 088c FEFFFFEB 		bl	CyU3PDebugPrint
 964:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2371              		.loc 1 964 0
 2372 0890 2A0000EA 		b	.L137
 2373              	.L142:
 2374 0894 290000EA 		b	.L137
 2375              	.L139:
 970:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2376              		.loc 1 970 0
 2377 0898 11305BE5 		ldrb	r3, [fp, #-17]
 2378 089c 0F3003E2 		and	r3, r3, #15
 2379 08a0 0D304BE5 		strb	r3, [fp, #-13]
 972:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 2380              		.loc 1 972 0
 2381 08a4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2382 08a8 0300A0E1 		mov	r0, r3
 2383 08ac FEFFFFEB 		bl	CAMERA_GetAutoExposure
 2384 08b0 0030A0E1 		mov	r3, r0
 2385 08b4 0320A0E1 		mov	r2, r3
 2386 08b8 2C389FE5 		ldr	r3, .L229+120
 2387 08bc B020C3E1 		strh	r2, [r3]	@ movhi
 973:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2388              		.loc 1 973 0
 2389 08c0 0100A0E3 		mov	r0, #1
 2390 08c4 20189FE5 		ldr	r1, .L229+120
 2391 08c8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2392 08cc 0C000BE5 		str	r0, [fp, #-12]
 974:../CX3RDKOV5640.c **** 					{
 2393              		.loc 1 974 0
 2394 08d0 0C301BE5 		ldr	r3, [fp, #-12]
 2395 08d4 000053E3 		cmp	r3, #0
 2396 08d8 0400000A 		beq	.L143
 976:../CX3RDKOV5640.c **** 					}
 2397              		.loc 1 976 0
 2398 08dc 0400A0E3 		mov	r0, #4
 2399 08e0 1C189FE5 		ldr	r1, .L229+144
 2400 08e4 0C201BE5 		ldr	r2, [fp, #-12]
 2401 08e8 FEFFFFEB 		bl	CyU3PDebugPrint
 978:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2402              		.loc 1 978 0
 2403 08ec 130000EA 		b	.L137
 2404              	.L143:
 2405 08f0 120000EA 		b	.L137
 2406              	.L140:
 980:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2407              		.loc 1 980 0
 2408 08f4 1A304BE2 		sub	r3, fp, #26
 2409 08f8 1000A0E3 		mov	r0, #16
 2410 08fc EC179FE5 		ldr	r1, .L229+124
 2411 0900 0320A0E1 		mov	r2, r3
 2412 0904 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2413 0908 0C000BE5 		str	r0, [fp, #-12]
 981:../CX3RDKOV5640.c **** 					{
 2414              		.loc 1 981 0
 2415 090c 0C301BE5 		ldr	r3, [fp, #-12]
 2416 0910 000053E3 		cmp	r3, #0
 2417 0914 0300000A 		beq	.L144
 983:../CX3RDKOV5640.c **** 					}
 2418              		.loc 1 983 0
 2419 0918 0400A0E3 		mov	r0, #4
 2420 091c E0179FE5 		ldr	r1, .L229+144
 2421 0920 0C201BE5 		ldr	r2, [fp, #-12]
 2422 0924 FEFFFFEB 		bl	CyU3PDebugPrint
 2423              	.L144:
 987:../CX3RDKOV5640.c **** 					break;
 2424              		.loc 1 987 0
 2425 0928 C0379FE5 		ldr	r3, .L229+124
 2426 092c B030D3E1 		ldrh	r3, [r3]
 2427 0930 FF3003E2 		and	r3, r3, #255
 2428 0934 0300A0E1 		mov	r0, r3
 2429 0938 FEFFFFEB 		bl	CAMERA_SetAutoExposure
 988:../CX3RDKOV5640.c **** 				}
 2430              		.loc 1 988 0
 2431 093c 0000A0E1 		mov	r0, r0	@ nop
 2432              	.L137:
 2433              		.loc 1 990 0
 2434 0940 0E0300EA 		b	.L90
 2435              	.L136:
 991:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x300))/*Contrast*/
 2436              		.loc 1 991 0
 2437 0944 B6315BE1 		ldrh	r3, [fp, #-22]
 2438 0948 020C53E3 		cmp	r3, #512
 2439 094c 4F00001A 		bne	.L145
 2440              		.loc 1 991 0 is_stmt 0 discriminator 1
 2441 0950 B4315BE1 		ldrh	r3, [fp, #-20]
 2442 0954 030C53E3 		cmp	r3, #768
 2443 0958 4C00001A 		bne	.L145
 992:../CX3RDKOV5640.c ****             {
 993:../CX3RDKOV5640.c ****             	switch(bRequest)
 2444              		.loc 1 993 0 is_stmt 1
 2445 095c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2446 0960 840053E3 		cmp	r3, #132
 2447 0964 040000CA 		bgt	.L147
 2448 0968 810053E3 		cmp	r3, #129
 2449 096c 170000AA 		bge	.L148
 2450 0970 010053E3 		cmp	r3, #1
 2451 0974 2F00000A 		beq	.L149
 994:../CX3RDKOV5640.c **** 				{
 995:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
 996:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
 997:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 998:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 999:../CX3RDKOV5640.c **** 					{
1000:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1001:../CX3RDKOV5640.c **** 					}
1002:../CX3RDKOV5640.c **** 					break;
1003:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1004:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1005:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1006:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1007:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1008:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1009:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1010:../CX3RDKOV5640.c **** 					gl16GetControl = CAMERA_GetContrast(RequestOption);
1011:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1012:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1013:../CX3RDKOV5640.c **** 					{
1014:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1015:../CX3RDKOV5640.c **** 					}
1016:../CX3RDKOV5640.c **** 					break;
1017:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1018:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1019:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1020:../CX3RDKOV5640.c **** 					{
1021:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1022:../CX3RDKOV5640.c **** 					}
1023:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1024:../CX3RDKOV5640.c **** 					CAMERA_SetContrast((int8_t)gl16SetControl);
1025:../CX3RDKOV5640.c **** 					break;
1026:../CX3RDKOV5640.c **** 				}
1027:../CX3RDKOV5640.c ****             }
 2452              		.loc 1 1027 0
 2453 0978 000300EA 		b	.L90
 2454              	.L147:
 993:../CX3RDKOV5640.c **** 				{
 2455              		.loc 1 993 0
 2456 097c 860053E3 		cmp	r3, #134
 2457 0980 0200000A 		beq	.L150
 2458 0984 870053E3 		cmp	r3, #135
 2459 0988 1000000A 		beq	.L148
 2460              		.loc 1 1027 0
 2461 098c FB0200EA 		b	.L90
 2462              	.L150:
 996:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2463              		.loc 1 996 0
 2464 0990 60379FE5 		ldr	r3, .L229+132
 2465 0994 0320A0E3 		mov	r2, #3
 2466 0998 0020C3E5 		strb	r2, [r3]
 997:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2467              		.loc 1 997 0
 2468 099c 0100A0E3 		mov	r0, #1
 2469 09a0 50179FE5 		ldr	r1, .L229+132
 2470 09a4 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2471 09a8 0C000BE5 		str	r0, [fp, #-12]
 998:../CX3RDKOV5640.c **** 					{
 2472              		.loc 1 998 0
 2473 09ac 0C301BE5 		ldr	r3, [fp, #-12]
 2474 09b0 000053E3 		cmp	r3, #0
 2475 09b4 0400000A 		beq	.L151
1000:../CX3RDKOV5640.c **** 					}
 2476              		.loc 1 1000 0
 2477 09b8 0400A0E3 		mov	r0, #4
 2478 09bc 40179FE5 		ldr	r1, .L229+144
 2479 09c0 0C201BE5 		ldr	r2, [fp, #-12]
 2480 09c4 FEFFFFEB 		bl	CyU3PDebugPrint
1002:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2481              		.loc 1 1002 0
 2482 09c8 2F0000EA 		b	.L146
 2483              	.L151:
 2484 09cc 2E0000EA 		b	.L146
 2485              	.L148:
1008:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2486              		.loc 1 1008 0
 2487 09d0 11305BE5 		ldrb	r3, [fp, #-17]
 2488 09d4 0F3003E2 		and	r3, r3, #15
 2489 09d8 0D304BE5 		strb	r3, [fp, #-13]
1010:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2490              		.loc 1 1010 0
 2491 09dc 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2492 09e0 033CA0E1 		mov	r3, r3, asl #24
 2493 09e4 433CA0E1 		mov	r3, r3, asr #24
 2494 09e8 0300A0E1 		mov	r0, r3
 2495 09ec FEFFFFEB 		bl	CAMERA_GetContrast
 2496 09f0 0030A0E1 		mov	r3, r0
 2497 09f4 0338A0E1 		mov	r3, r3, asl #16
 2498 09f8 2328A0E1 		mov	r2, r3, lsr #16
 2499 09fc F8369FE5 		ldr	r3, .L229+136
 2500 0a00 B020C3E1 		strh	r2, [r3]	@ movhi
1011:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2501              		.loc 1 1011 0
 2502 0a04 0200A0E3 		mov	r0, #2
 2503 0a08 EC169FE5 		ldr	r1, .L229+136
 2504 0a0c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2505 0a10 0C000BE5 		str	r0, [fp, #-12]
1012:../CX3RDKOV5640.c **** 					{
 2506              		.loc 1 1012 0
 2507 0a14 0C301BE5 		ldr	r3, [fp, #-12]
 2508 0a18 000053E3 		cmp	r3, #0
 2509 0a1c 0400000A 		beq	.L152
1014:../CX3RDKOV5640.c **** 					}
 2510              		.loc 1 1014 0
 2511 0a20 0400A0E3 		mov	r0, #4
 2512 0a24 D8169FE5 		ldr	r1, .L229+144
 2513 0a28 0C201BE5 		ldr	r2, [fp, #-12]
 2514 0a2c FEFFFFEB 		bl	CyU3PDebugPrint
1016:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2515              		.loc 1 1016 0
 2516 0a30 150000EA 		b	.L146
 2517              	.L152:
 2518 0a34 140000EA 		b	.L146
 2519              	.L149:
1018:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2520              		.loc 1 1018 0
 2521 0a38 1A304BE2 		sub	r3, fp, #26
 2522 0a3c 1000A0E3 		mov	r0, #16
 2523 0a40 B8169FE5 		ldr	r1, .L229+140
 2524 0a44 0320A0E1 		mov	r2, r3
 2525 0a48 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2526 0a4c 0C000BE5 		str	r0, [fp, #-12]
1019:../CX3RDKOV5640.c **** 					{
 2527              		.loc 1 1019 0
 2528 0a50 0C301BE5 		ldr	r3, [fp, #-12]
 2529 0a54 000053E3 		cmp	r3, #0
 2530 0a58 0300000A 		beq	.L153
1021:../CX3RDKOV5640.c **** 					}
 2531              		.loc 1 1021 0
 2532 0a5c 0400A0E3 		mov	r0, #4
 2533 0a60 9C169FE5 		ldr	r1, .L229+144
 2534 0a64 0C201BE5 		ldr	r2, [fp, #-12]
 2535 0a68 FEFFFFEB 		bl	CyU3PDebugPrint
 2536              	.L153:
1024:../CX3RDKOV5640.c **** 					break;
 2537              		.loc 1 1024 0
 2538 0a6c 8C369FE5 		ldr	r3, .L229+140
 2539 0a70 B030D3E1 		ldrh	r3, [r3]
 2540 0a74 FF3003E2 		and	r3, r3, #255
 2541 0a78 033CA0E1 		mov	r3, r3, asl #24
 2542 0a7c 433CA0E1 		mov	r3, r3, asr #24
 2543 0a80 0300A0E1 		mov	r0, r3
 2544 0a84 FEFFFFEB 		bl	CAMERA_SetContrast
1025:../CX3RDKOV5640.c **** 				}
 2545              		.loc 1 1025 0
 2546 0a88 0000A0E1 		mov	r0, r0	@ nop
 2547              	.L146:
 2548              		.loc 1 1027 0
 2549 0a8c BB0200EA 		b	.L90
 2550              	.L145:
1028:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x400))/*Manual Exposure*/
 2551              		.loc 1 1028 0
 2552 0a90 B6315BE1 		ldrh	r3, [fp, #-22]
 2553 0a94 010C53E3 		cmp	r3, #256
 2554 0a98 4800001A 		bne	.L154
 2555              		.loc 1 1028 0 is_stmt 0 discriminator 1
 2556 0a9c B4315BE1 		ldrh	r3, [fp, #-20]
 2557 0aa0 010B53E3 		cmp	r3, #1024
 2558 0aa4 4500001A 		bne	.L154
1029:../CX3RDKOV5640.c **** 			{
1030:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Exposure ");
1031:../CX3RDKOV5640.c **** 				switch(bRequest)
 2559              		.loc 1 1031 0 is_stmt 1
 2560 0aa8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2561 0aac 840053E3 		cmp	r3, #132
 2562 0ab0 040000CA 		bgt	.L156
 2563 0ab4 810053E3 		cmp	r3, #129
 2564 0ab8 170000AA 		bge	.L157
 2565 0abc 010053E3 		cmp	r3, #1
 2566 0ac0 2B00000A 		beq	.L158
1032:../CX3RDKOV5640.c **** 				{
1033:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1034:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1035:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1036:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1037:../CX3RDKOV5640.c **** 					{
1038:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1039:../CX3RDKOV5640.c **** 					}
1040:../CX3RDKOV5640.c **** 					break;
1041:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1042:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1043:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1044:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1045:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1046:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1047:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1048:../CX3RDKOV5640.c **** 					gl32GetControl = CAMERA_GetExposure(RequestOption);
1049:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1050:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1051:../CX3RDKOV5640.c **** 					{
1052:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1053:../CX3RDKOV5640.c **** 					}
1054:../CX3RDKOV5640.c **** 					break;
1055:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1056:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1057:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1058:../CX3RDKOV5640.c **** 					{
1059:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1060:../CX3RDKOV5640.c **** 					}
1061:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1062:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Exposure = %d", gl32SetControl);
1063:../CX3RDKOV5640.c **** 					CAMERA_SetExposure(gl32SetControl);
1064:../CX3RDKOV5640.c **** 					break;
1065:../CX3RDKOV5640.c **** 				}
1066:../CX3RDKOV5640.c **** 			}
 2567              		.loc 1 1066 0
 2568 0ac4 AD0200EA 		b	.L90
 2569              	.L156:
1031:../CX3RDKOV5640.c **** 				{
 2570              		.loc 1 1031 0
 2571 0ac8 860053E3 		cmp	r3, #134
 2572 0acc 0200000A 		beq	.L159
 2573 0ad0 870053E3 		cmp	r3, #135
 2574 0ad4 1000000A 		beq	.L157
 2575              		.loc 1 1066 0
 2576 0ad8 A80200EA 		b	.L90
 2577              	.L159:
1034:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2578              		.loc 1 1034 0
 2579 0adc 14369FE5 		ldr	r3, .L229+132
 2580 0ae0 0320A0E3 		mov	r2, #3
 2581 0ae4 0020C3E5 		strb	r2, [r3]
1035:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2582              		.loc 1 1035 0
 2583 0ae8 0100A0E3 		mov	r0, #1
 2584 0aec 04169FE5 		ldr	r1, .L229+132
 2585 0af0 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2586 0af4 0C000BE5 		str	r0, [fp, #-12]
1036:../CX3RDKOV5640.c **** 					{
 2587              		.loc 1 1036 0
 2588 0af8 0C301BE5 		ldr	r3, [fp, #-12]
 2589 0afc 000053E3 		cmp	r3, #0
 2590 0b00 0400000A 		beq	.L160
1038:../CX3RDKOV5640.c **** 					}
 2591              		.loc 1 1038 0
 2592 0b04 0400A0E3 		mov	r0, #4
 2593 0b08 F4159FE5 		ldr	r1, .L229+144
 2594 0b0c 0C201BE5 		ldr	r2, [fp, #-12]
 2595 0b10 FEFFFFEB 		bl	CyU3PDebugPrint
1040:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2596              		.loc 1 1040 0
 2597 0b14 280000EA 		b	.L155
 2598              	.L160:
 2599 0b18 270000EA 		b	.L155
 2600              	.L157:
1046:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2601              		.loc 1 1046 0
 2602 0b1c 11305BE5 		ldrb	r3, [fp, #-17]
 2603 0b20 0F3003E2 		and	r3, r3, #15
 2604 0b24 0D304BE5 		strb	r3, [fp, #-13]
1048:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2605              		.loc 1 1048 0
 2606 0b28 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2607 0b2c 0300A0E1 		mov	r0, r3
 2608 0b30 FEFFFFEB 		bl	CAMERA_GetExposure
 2609 0b34 0020A0E1 		mov	r2, r0
 2610 0b38 A0359FE5 		ldr	r3, .L229+108
 2611 0b3c 002083E5 		str	r2, [r3]
1049:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2612              		.loc 1 1049 0
 2613 0b40 0400A0E3 		mov	r0, #4
 2614 0b44 94159FE5 		ldr	r1, .L229+108
 2615 0b48 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2616 0b4c 0C000BE5 		str	r0, [fp, #-12]
1050:../CX3RDKOV5640.c **** 					{
 2617              		.loc 1 1050 0
 2618 0b50 0C301BE5 		ldr	r3, [fp, #-12]
 2619 0b54 000053E3 		cmp	r3, #0
 2620 0b58 0400000A 		beq	.L161
1052:../CX3RDKOV5640.c **** 					}
 2621              		.loc 1 1052 0
 2622 0b5c 0400A0E3 		mov	r0, #4
 2623 0b60 9C159FE5 		ldr	r1, .L229+144
 2624 0b64 0C201BE5 		ldr	r2, [fp, #-12]
 2625 0b68 FEFFFFEB 		bl	CyU3PDebugPrint
1054:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2626              		.loc 1 1054 0
 2627 0b6c 120000EA 		b	.L155
 2628              	.L161:
 2629 0b70 110000EA 		b	.L155
 2630              	.L158:
1056:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2631              		.loc 1 1056 0
 2632 0b74 1A304BE2 		sub	r3, fp, #26
 2633 0b78 1000A0E3 		mov	r0, #16
 2634 0b7c 60159FE5 		ldr	r1, .L229+112
 2635 0b80 0320A0E1 		mov	r2, r3
 2636 0b84 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2637 0b88 0C000BE5 		str	r0, [fp, #-12]
1057:../CX3RDKOV5640.c **** 					{
 2638              		.loc 1 1057 0
 2639 0b8c 0C301BE5 		ldr	r3, [fp, #-12]
 2640 0b90 000053E3 		cmp	r3, #0
 2641 0b94 0300000A 		beq	.L162
1059:../CX3RDKOV5640.c **** 					}
 2642              		.loc 1 1059 0
 2643 0b98 0400A0E3 		mov	r0, #4
 2644 0b9c 60159FE5 		ldr	r1, .L229+144
 2645 0ba0 0C201BE5 		ldr	r2, [fp, #-12]
 2646 0ba4 FEFFFFEB 		bl	CyU3PDebugPrint
 2647              	.L162:
1063:../CX3RDKOV5640.c **** 					break;
 2648              		.loc 1 1063 0
 2649 0ba8 34359FE5 		ldr	r3, .L229+112
 2650 0bac 003093E5 		ldr	r3, [r3]
 2651 0bb0 0300A0E1 		mov	r0, r3
 2652 0bb4 FEFFFFEB 		bl	CAMERA_SetExposure
1064:../CX3RDKOV5640.c **** 				}
 2653              		.loc 1 1064 0
 2654 0bb8 0000A0E1 		mov	r0, r0	@ nop
 2655              	.L155:
 2656              		.loc 1 1066 0
 2657 0bbc 6F0200EA 		b	.L90
 2658              	.L154:
1067:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x600))/*Hue*/
 2659              		.loc 1 1067 0
 2660 0bc0 B6315BE1 		ldrh	r3, [fp, #-22]
 2661 0bc4 020C53E3 		cmp	r3, #512
 2662 0bc8 4B00001A 		bne	.L163
 2663              		.loc 1 1067 0 is_stmt 0 discriminator 1
 2664 0bcc B4315BE1 		ldrh	r3, [fp, #-20]
 2665 0bd0 060C53E3 		cmp	r3, #1536
 2666 0bd4 4800001A 		bne	.L163
1068:../CX3RDKOV5640.c **** 			{
1069:../CX3RDKOV5640.c **** 				switch(bRequest)
 2667              		.loc 1 1069 0 is_stmt 1
 2668 0bd8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2669 0bdc 840053E3 		cmp	r3, #132
 2670 0be0 040000CA 		bgt	.L165
 2671 0be4 810053E3 		cmp	r3, #129
 2672 0be8 170000AA 		bge	.L166
 2673 0bec 010053E3 		cmp	r3, #1
 2674 0bf0 2B00000A 		beq	.L167
1070:../CX3RDKOV5640.c **** 				{
1071:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1072:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1073:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1074:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1075:../CX3RDKOV5640.c **** 					{
1076:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1077:../CX3RDKOV5640.c **** 					}
1078:../CX3RDKOV5640.c **** 					break;
1079:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1080:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1081:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1082:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1083:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1084:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1085:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1086:../CX3RDKOV5640.c **** 					gl32GetControl = (int32_t) CAMERA_GetHue(RequestOption);
1087:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1088:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1089:../CX3RDKOV5640.c **** 					{
1090:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1091:../CX3RDKOV5640.c **** 					}
1092:../CX3RDKOV5640.c **** 					break;
1093:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1094:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1095:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1096:../CX3RDKOV5640.c **** 					{
1097:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1098:../CX3RDKOV5640.c **** 					}
1099:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1100:../CX3RDKOV5640.c **** 					CAMERA_SetHue((int8_t)gl32SetControl);
1101:../CX3RDKOV5640.c **** 					break;
1102:../CX3RDKOV5640.c **** 				}
1103:../CX3RDKOV5640.c **** 			}
 2675              		.loc 1 1103 0
 2676 0bf4 610200EA 		b	.L90
 2677              	.L165:
1069:../CX3RDKOV5640.c **** 				{
 2678              		.loc 1 1069 0
 2679 0bf8 860053E3 		cmp	r3, #134
 2680 0bfc 0200000A 		beq	.L168
 2681 0c00 870053E3 		cmp	r3, #135
 2682 0c04 1000000A 		beq	.L166
 2683              		.loc 1 1103 0
 2684 0c08 5C0200EA 		b	.L90
 2685              	.L168:
1072:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2686              		.loc 1 1072 0
 2687 0c0c E4349FE5 		ldr	r3, .L229+132
 2688 0c10 0320A0E3 		mov	r2, #3
 2689 0c14 0020C3E5 		strb	r2, [r3]
1073:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2690              		.loc 1 1073 0
 2691 0c18 0100A0E3 		mov	r0, #1
 2692 0c1c D4149FE5 		ldr	r1, .L229+132
 2693 0c20 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2694 0c24 0C000BE5 		str	r0, [fp, #-12]
1074:../CX3RDKOV5640.c **** 					{
 2695              		.loc 1 1074 0
 2696 0c28 0C301BE5 		ldr	r3, [fp, #-12]
 2697 0c2c 000053E3 		cmp	r3, #0
 2698 0c30 0400000A 		beq	.L169
1076:../CX3RDKOV5640.c **** 					}
 2699              		.loc 1 1076 0
 2700 0c34 0400A0E3 		mov	r0, #4
 2701 0c38 C4149FE5 		ldr	r1, .L229+144
 2702 0c3c 0C201BE5 		ldr	r2, [fp, #-12]
 2703 0c40 FEFFFFEB 		bl	CyU3PDebugPrint
1078:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2704              		.loc 1 1078 0
 2705 0c44 2B0000EA 		b	.L164
 2706              	.L169:
 2707 0c48 2A0000EA 		b	.L164
 2708              	.L166:
1084:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2709              		.loc 1 1084 0
 2710 0c4c 11305BE5 		ldrb	r3, [fp, #-17]
 2711 0c50 0F3003E2 		and	r3, r3, #15
 2712 0c54 0D304BE5 		strb	r3, [fp, #-13]
1086:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2713              		.loc 1 1086 0
 2714 0c58 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2715 0c5c 0300A0E1 		mov	r0, r3
 2716 0c60 FEFFFFEB 		bl	CAMERA_GetHue
 2717 0c64 0020A0E1 		mov	r2, r0
 2718 0c68 70349FE5 		ldr	r3, .L229+108
 2719 0c6c 002083E5 		str	r2, [r3]
1087:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2720              		.loc 1 1087 0
 2721 0c70 0400A0E3 		mov	r0, #4
 2722 0c74 64149FE5 		ldr	r1, .L229+108
 2723 0c78 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2724 0c7c 0C000BE5 		str	r0, [fp, #-12]
1088:../CX3RDKOV5640.c **** 					{
 2725              		.loc 1 1088 0
 2726 0c80 0C301BE5 		ldr	r3, [fp, #-12]
 2727 0c84 000053E3 		cmp	r3, #0
 2728 0c88 0400000A 		beq	.L170
1090:../CX3RDKOV5640.c **** 					}
 2729              		.loc 1 1090 0
 2730 0c8c 0400A0E3 		mov	r0, #4
 2731 0c90 6C149FE5 		ldr	r1, .L229+144
 2732 0c94 0C201BE5 		ldr	r2, [fp, #-12]
 2733 0c98 FEFFFFEB 		bl	CyU3PDebugPrint
1092:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2734              		.loc 1 1092 0
 2735 0c9c 150000EA 		b	.L164
 2736              	.L170:
 2737 0ca0 140000EA 		b	.L164
 2738              	.L167:
1094:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2739              		.loc 1 1094 0
 2740 0ca4 1A304BE2 		sub	r3, fp, #26
 2741 0ca8 1000A0E3 		mov	r0, #16
 2742 0cac 30149FE5 		ldr	r1, .L229+112
 2743 0cb0 0320A0E1 		mov	r2, r3
 2744 0cb4 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2745 0cb8 0C000BE5 		str	r0, [fp, #-12]
1095:../CX3RDKOV5640.c **** 					{
 2746              		.loc 1 1095 0
 2747 0cbc 0C301BE5 		ldr	r3, [fp, #-12]
 2748 0cc0 000053E3 		cmp	r3, #0
 2749 0cc4 0300000A 		beq	.L171
1097:../CX3RDKOV5640.c **** 					}
 2750              		.loc 1 1097 0
 2751 0cc8 0400A0E3 		mov	r0, #4
 2752 0ccc 30149FE5 		ldr	r1, .L229+144
 2753 0cd0 0C201BE5 		ldr	r2, [fp, #-12]
 2754 0cd4 FEFFFFEB 		bl	CyU3PDebugPrint
 2755              	.L171:
1100:../CX3RDKOV5640.c **** 					break;
 2756              		.loc 1 1100 0
 2757 0cd8 04349FE5 		ldr	r3, .L229+112
 2758 0cdc 003093E5 		ldr	r3, [r3]
 2759 0ce0 FF3003E2 		and	r3, r3, #255
 2760 0ce4 033CA0E1 		mov	r3, r3, asl #24
 2761 0ce8 433CA0E1 		mov	r3, r3, asr #24
 2762 0cec 0300A0E1 		mov	r0, r3
 2763 0cf0 FEFFFFEB 		bl	CAMERA_SetHue
1101:../CX3RDKOV5640.c **** 				}
 2764              		.loc 1 1101 0
 2765 0cf4 0000A0E1 		mov	r0, r0	@ nop
 2766              	.L164:
 2767              		.loc 1 1103 0
 2768 0cf8 200200EA 		b	.L90
 2769              	.L163:
1104:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x600))/*Manual Focus*/
 2770              		.loc 1 1104 0
 2771 0cfc B6315BE1 		ldrh	r3, [fp, #-22]
 2772 0d00 010C53E3 		cmp	r3, #256
 2773 0d04 4F00001A 		bne	.L172
 2774              		.loc 1 1104 0 is_stmt 0 discriminator 1
 2775 0d08 B4315BE1 		ldrh	r3, [fp, #-20]
 2776 0d0c 060C53E3 		cmp	r3, #1536
 2777 0d10 4C00001A 		bne	.L172
1105:../CX3RDKOV5640.c **** 			{
1106:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Focus ");
1107:../CX3RDKOV5640.c **** 				switch(bRequest)
 2778              		.loc 1 1107 0 is_stmt 1
 2779 0d14 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2780 0d18 840053E3 		cmp	r3, #132
 2781 0d1c 040000CA 		bgt	.L174
 2782 0d20 810053E3 		cmp	r3, #129
 2783 0d24 170000AA 		bge	.L175
 2784 0d28 010053E3 		cmp	r3, #1
 2785 0d2c 2D00000A 		beq	.L176
1108:../CX3RDKOV5640.c **** 				{
1109:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1110:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1111:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1112:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1113:../CX3RDKOV5640.c **** 					{
1114:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1115:../CX3RDKOV5640.c **** 					}
1116:../CX3RDKOV5640.c **** 					break;
1117:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1118:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1119:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1120:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1121:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1122:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1123:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1124:../CX3RDKOV5640.c **** 					gl16GetControl = CAMERA_GetManualfocus(RequestOption);
1125:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1126:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1127:../CX3RDKOV5640.c **** 					{
1128:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1129:../CX3RDKOV5640.c **** 					}
1130:../CX3RDKOV5640.c **** 					break;
1131:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1132:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1133:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1134:../CX3RDKOV5640.c **** 					{
1135:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1136:../CX3RDKOV5640.c **** 					}
1137:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1138:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Focus= %d",gl16SetControl);
1139:../CX3RDKOV5640.c **** 					CAMERA_SetManualfocus((uint16_t)gl16SetControl);
1140:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
1141:../CX3RDKOV5640.c **** 					break;
1142:../CX3RDKOV5640.c **** 				}
1143:../CX3RDKOV5640.c **** 			}
 2786              		.loc 1 1143 0
 2787 0d30 120200EA 		b	.L90
 2788              	.L174:
1107:../CX3RDKOV5640.c **** 				{
 2789              		.loc 1 1107 0
 2790 0d34 860053E3 		cmp	r3, #134
 2791 0d38 0200000A 		beq	.L177
 2792 0d3c 870053E3 		cmp	r3, #135
 2793 0d40 1000000A 		beq	.L175
 2794              		.loc 1 1143 0
 2795 0d44 0D0200EA 		b	.L90
 2796              	.L177:
1110:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2797              		.loc 1 1110 0
 2798 0d48 A8339FE5 		ldr	r3, .L229+132
 2799 0d4c 0320A0E3 		mov	r2, #3
 2800 0d50 0020C3E5 		strb	r2, [r3]
1111:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2801              		.loc 1 1111 0
 2802 0d54 0100A0E3 		mov	r0, #1
 2803 0d58 98139FE5 		ldr	r1, .L229+132
 2804 0d5c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2805 0d60 0C000BE5 		str	r0, [fp, #-12]
1112:../CX3RDKOV5640.c **** 					{
 2806              		.loc 1 1112 0
 2807 0d64 0C301BE5 		ldr	r3, [fp, #-12]
 2808 0d68 000053E3 		cmp	r3, #0
 2809 0d6c 0400000A 		beq	.L178
1114:../CX3RDKOV5640.c **** 					}
 2810              		.loc 1 1114 0
 2811 0d70 0400A0E3 		mov	r0, #4
 2812 0d74 88139FE5 		ldr	r1, .L229+144
 2813 0d78 0C201BE5 		ldr	r2, [fp, #-12]
 2814 0d7c FEFFFFEB 		bl	CyU3PDebugPrint
1116:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2815              		.loc 1 1116 0
 2816 0d80 2F0000EA 		b	.L173
 2817              	.L178:
 2818 0d84 2E0000EA 		b	.L173
 2819              	.L175:
1123:../CX3RDKOV5640.c **** 					gl16GetControl = CAMERA_GetManualfocus(RequestOption);
 2820              		.loc 1 1123 0
 2821 0d88 11305BE5 		ldrb	r3, [fp, #-17]
 2822 0d8c 0F3003E2 		and	r3, r3, #15
 2823 0d90 0D304BE5 		strb	r3, [fp, #-13]
1124:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2824              		.loc 1 1124 0
 2825 0d94 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2826 0d98 0300A0E1 		mov	r0, r3
 2827 0d9c FEFFFFEB 		bl	CAMERA_GetManualfocus
 2828 0da0 0030A0E1 		mov	r3, r0
 2829 0da4 0338A0E1 		mov	r3, r3, asl #16
 2830 0da8 2328A0E1 		mov	r2, r3, lsr #16
 2831 0dac 48339FE5 		ldr	r3, .L229+136
 2832 0db0 B020C3E1 		strh	r2, [r3]	@ movhi
1125:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2833              		.loc 1 1125 0
 2834 0db4 0200A0E3 		mov	r0, #2
 2835 0db8 3C139FE5 		ldr	r1, .L229+136
 2836 0dbc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2837 0dc0 0C000BE5 		str	r0, [fp, #-12]
1126:../CX3RDKOV5640.c **** 					{
 2838              		.loc 1 1126 0
 2839 0dc4 0C301BE5 		ldr	r3, [fp, #-12]
 2840 0dc8 000053E3 		cmp	r3, #0
 2841 0dcc 0400000A 		beq	.L179
1128:../CX3RDKOV5640.c **** 					}
 2842              		.loc 1 1128 0
 2843 0dd0 0400A0E3 		mov	r0, #4
 2844 0dd4 28139FE5 		ldr	r1, .L229+144
 2845 0dd8 0C201BE5 		ldr	r2, [fp, #-12]
 2846 0ddc FEFFFFEB 		bl	CyU3PDebugPrint
1130:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2847              		.loc 1 1130 0
 2848 0de0 170000EA 		b	.L173
 2849              	.L179:
 2850 0de4 160000EA 		b	.L173
 2851              	.L176:
1132:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2852              		.loc 1 1132 0
 2853 0de8 1A304BE2 		sub	r3, fp, #26
 2854 0dec 1000A0E3 		mov	r0, #16
 2855 0df0 08139FE5 		ldr	r1, .L229+140
 2856 0df4 0320A0E1 		mov	r2, r3
 2857 0df8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2858 0dfc 0C000BE5 		str	r0, [fp, #-12]
1133:../CX3RDKOV5640.c **** 					{
 2859              		.loc 1 1133 0
 2860 0e00 0C301BE5 		ldr	r3, [fp, #-12]
 2861 0e04 000053E3 		cmp	r3, #0
 2862 0e08 0300000A 		beq	.L180
1135:../CX3RDKOV5640.c **** 					}
 2863              		.loc 1 1135 0
 2864 0e0c 0400A0E3 		mov	r0, #4
 2865 0e10 EC129FE5 		ldr	r1, .L229+144
 2866 0e14 0C201BE5 		ldr	r2, [fp, #-12]
 2867 0e18 FEFFFFEB 		bl	CyU3PDebugPrint
 2868              	.L180:
1139:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
 2869              		.loc 1 1139 0
 2870 0e1c DC329FE5 		ldr	r3, .L229+140
 2871 0e20 B030D3E1 		ldrh	r3, [r3]
 2872 0e24 0338A0E1 		mov	r3, r3, asl #16
 2873 0e28 2338A0E1 		mov	r3, r3, lsr #16
 2874 0e2c 0300A0E1 		mov	r0, r3
 2875 0e30 FEFFFFEB 		bl	CAMERA_SetManualfocus
1140:../CX3RDKOV5640.c **** 					break;
 2876              		.loc 1 1140 0
 2877 0e34 B8329FE5 		ldr	r3, .L229+128
 2878 0e38 0020A0E3 		mov	r2, #0
 2879 0e3c 0020C3E5 		strb	r2, [r3]
1141:../CX3RDKOV5640.c **** 				}
 2880              		.loc 1 1141 0
 2881 0e40 0000A0E1 		mov	r0, r0	@ nop
 2882              	.L173:
 2883              		.loc 1 1143 0
 2884 0e44 CD0100EA 		b	.L90
 2885              	.L172:
1144:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x700))/*Saturation*/
 2886              		.loc 1 1144 0
 2887 0e48 B6315BE1 		ldrh	r3, [fp, #-22]
 2888 0e4c 020C53E3 		cmp	r3, #512
 2889 0e50 4C00001A 		bne	.L181
 2890              		.loc 1 1144 0 is_stmt 0 discriminator 1
 2891 0e54 B4315BE1 		ldrh	r3, [fp, #-20]
 2892 0e58 070C53E3 		cmp	r3, #1792
 2893 0e5c 4900001A 		bne	.L181
1145:../CX3RDKOV5640.c **** 			{
1146:../CX3RDKOV5640.c **** 				switch(bRequest)
 2894              		.loc 1 1146 0 is_stmt 1
 2895 0e60 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2896 0e64 840053E3 		cmp	r3, #132
 2897 0e68 040000CA 		bgt	.L183
 2898 0e6c 810053E3 		cmp	r3, #129
 2899 0e70 170000AA 		bge	.L184
 2900 0e74 010053E3 		cmp	r3, #1
 2901 0e78 2D00000A 		beq	.L185
1147:../CX3RDKOV5640.c **** 				{
1148:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1149:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1150:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1151:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1152:../CX3RDKOV5640.c **** 					{
1153:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1154:../CX3RDKOV5640.c **** 					}
1155:../CX3RDKOV5640.c **** 					break;
1156:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1157:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1158:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1159:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1160:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1161:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1162:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1163:../CX3RDKOV5640.c **** 					gl16GetControl = CAMERA_GetSaturation(RequestOption);
1164:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1165:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1166:../CX3RDKOV5640.c **** 					{
1167:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1168:../CX3RDKOV5640.c **** 					}
1169:../CX3RDKOV5640.c **** 					break;
1170:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1171:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1172:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1173:../CX3RDKOV5640.c **** 					{
1174:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1175:../CX3RDKOV5640.c **** 					}
1176:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1177:../CX3RDKOV5640.c **** 					CAMERA_SetSaturation((uint32_t)gl16SetControl);
1178:../CX3RDKOV5640.c **** 					break;
1179:../CX3RDKOV5640.c **** 				}
1180:../CX3RDKOV5640.c **** 			}
 2902              		.loc 1 1180 0
 2903 0e7c BF0100EA 		b	.L90
 2904              	.L183:
1146:../CX3RDKOV5640.c **** 				{
 2905              		.loc 1 1146 0
 2906 0e80 860053E3 		cmp	r3, #134
 2907 0e84 0200000A 		beq	.L186
 2908 0e88 870053E3 		cmp	r3, #135
 2909 0e8c 1000000A 		beq	.L184
 2910              		.loc 1 1180 0
 2911 0e90 BA0100EA 		b	.L90
 2912              	.L186:
1149:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2913              		.loc 1 1149 0
 2914 0e94 5C329FE5 		ldr	r3, .L229+132
 2915 0e98 0320A0E3 		mov	r2, #3
 2916 0e9c 0020C3E5 		strb	r2, [r3]
1150:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2917              		.loc 1 1150 0
 2918 0ea0 0100A0E3 		mov	r0, #1
 2919 0ea4 4C129FE5 		ldr	r1, .L229+132
 2920 0ea8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2921 0eac 0C000BE5 		str	r0, [fp, #-12]
1151:../CX3RDKOV5640.c **** 					{
 2922              		.loc 1 1151 0
 2923 0eb0 0C301BE5 		ldr	r3, [fp, #-12]
 2924 0eb4 000053E3 		cmp	r3, #0
 2925 0eb8 0400000A 		beq	.L187
1153:../CX3RDKOV5640.c **** 					}
 2926              		.loc 1 1153 0
 2927 0ebc 0400A0E3 		mov	r0, #4
 2928 0ec0 3C129FE5 		ldr	r1, .L229+144
 2929 0ec4 0C201BE5 		ldr	r2, [fp, #-12]
 2930 0ec8 FEFFFFEB 		bl	CyU3PDebugPrint
1155:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2931              		.loc 1 1155 0
 2932 0ecc 2C0000EA 		b	.L182
 2933              	.L187:
 2934 0ed0 2B0000EA 		b	.L182
 2935              	.L184:
1161:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2936              		.loc 1 1161 0
 2937 0ed4 11305BE5 		ldrb	r3, [fp, #-17]
 2938 0ed8 0F3003E2 		and	r3, r3, #15
 2939 0edc 0D304BE5 		strb	r3, [fp, #-13]
1163:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2940              		.loc 1 1163 0
 2941 0ee0 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2942 0ee4 0300A0E1 		mov	r0, r3
 2943 0ee8 FEFFFFEB 		bl	CAMERA_GetSaturation
 2944 0eec 0030A0E1 		mov	r3, r0
 2945 0ef0 0338A0E1 		mov	r3, r3, asl #16
 2946 0ef4 2328A0E1 		mov	r2, r3, lsr #16
 2947 0ef8 FC319FE5 		ldr	r3, .L229+136
 2948 0efc B020C3E1 		strh	r2, [r3]	@ movhi
1164:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2949              		.loc 1 1164 0
 2950 0f00 0200A0E3 		mov	r0, #2
 2951 0f04 F0119FE5 		ldr	r1, .L229+136
 2952 0f08 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2953 0f0c 0C000BE5 		str	r0, [fp, #-12]
1165:../CX3RDKOV5640.c **** 					{
 2954              		.loc 1 1165 0
 2955 0f10 0C301BE5 		ldr	r3, [fp, #-12]
 2956 0f14 000053E3 		cmp	r3, #0
 2957 0f18 0400000A 		beq	.L188
1167:../CX3RDKOV5640.c **** 					}
 2958              		.loc 1 1167 0
 2959 0f1c 0400A0E3 		mov	r0, #4
 2960 0f20 DC119FE5 		ldr	r1, .L229+144
 2961 0f24 0C201BE5 		ldr	r2, [fp, #-12]
 2962 0f28 FEFFFFEB 		bl	CyU3PDebugPrint
1169:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2963              		.loc 1 1169 0
 2964 0f2c 140000EA 		b	.L182
 2965              	.L188:
 2966 0f30 130000EA 		b	.L182
 2967              	.L185:
1171:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2968              		.loc 1 1171 0
 2969 0f34 1A304BE2 		sub	r3, fp, #26
 2970 0f38 1000A0E3 		mov	r0, #16
 2971 0f3c BC119FE5 		ldr	r1, .L229+140
 2972 0f40 0320A0E1 		mov	r2, r3
 2973 0f44 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2974 0f48 0C000BE5 		str	r0, [fp, #-12]
1172:../CX3RDKOV5640.c **** 					{
 2975              		.loc 1 1172 0
 2976 0f4c 0C301BE5 		ldr	r3, [fp, #-12]
 2977 0f50 000053E3 		cmp	r3, #0
 2978 0f54 0300000A 		beq	.L189
1174:../CX3RDKOV5640.c **** 					}
 2979              		.loc 1 1174 0
 2980 0f58 0400A0E3 		mov	r0, #4
 2981 0f5c A0119FE5 		ldr	r1, .L229+144
 2982 0f60 0C201BE5 		ldr	r2, [fp, #-12]
 2983 0f64 FEFFFFEB 		bl	CyU3PDebugPrint
 2984              	.L189:
1177:../CX3RDKOV5640.c **** 					break;
 2985              		.loc 1 1177 0
 2986 0f68 90319FE5 		ldr	r3, .L229+140
 2987 0f6c B030D3E1 		ldrh	r3, [r3]
 2988 0f70 0338A0E1 		mov	r3, r3, asl #16
 2989 0f74 4338A0E1 		mov	r3, r3, asr #16
 2990 0f78 0300A0E1 		mov	r0, r3
 2991 0f7c FEFFFFEB 		bl	CAMERA_SetSaturation
1178:../CX3RDKOV5640.c **** 				}
 2992              		.loc 1 1178 0
 2993 0f80 0000A0E1 		mov	r0, r0	@ nop
 2994              	.L182:
 2995              		.loc 1 1180 0
 2996 0f84 7D0100EA 		b	.L90
 2997              	.L181:
1181:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x800))/*Sharpness*/
 2998              		.loc 1 1181 0
 2999 0f88 B6315BE1 		ldrh	r3, [fp, #-22]
 3000 0f8c 020C53E3 		cmp	r3, #512
 3001 0f90 7000001A 		bne	.L190
 3002              		.loc 1 1181 0 is_stmt 0 discriminator 1
 3003 0f94 B4315BE1 		ldrh	r3, [fp, #-20]
 3004 0f98 020B53E3 		cmp	r3, #2048
 3005 0f9c 6D00001A 		bne	.L190
1182:../CX3RDKOV5640.c **** 			{
1183:../CX3RDKOV5640.c **** 				switch(bRequest)
 3006              		.loc 1 1183 0 is_stmt 1
 3007 0fa0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 3008 0fa4 840053E3 		cmp	r3, #132
 3009 0fa8 040000CA 		bgt	.L192
 3010 0fac 810053E3 		cmp	r3, #129
 3011 0fb0 170000AA 		bge	.L193
 3012 0fb4 010053E3 		cmp	r3, #1
 3013 0fb8 5200000A 		beq	.L194
1184:../CX3RDKOV5640.c **** 				{
1185:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1186:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1187:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1188:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1189:../CX3RDKOV5640.c **** 					{
1190:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1191:../CX3RDKOV5640.c **** 					}
1192:../CX3RDKOV5640.c **** 					break;
1193:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1194:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1195:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1196:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1197:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1198:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1199:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1200:../CX3RDKOV5640.c **** 					gl16GetControl = CAMERA_GetSharpness(RequestOption);
1201:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1202:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1203:../CX3RDKOV5640.c **** 					{
1204:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1205:../CX3RDKOV5640.c **** 					}
1206:../CX3RDKOV5640.c **** 					break;
1207:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1208:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1209:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1210:../CX3RDKOV5640.c **** 					{
1211:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1212:../CX3RDKOV5640.c **** 					}
1213:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1214:../CX3RDKOV5640.c **** 					CAMERA_SetSharpness((uint8_t)gl16SetControl);
1215:../CX3RDKOV5640.c **** 					break;
1216:../CX3RDKOV5640.c **** 				}
1217:../CX3RDKOV5640.c **** 			}
 3014              		.loc 1 1217 0
 3015 0fbc 6F0100EA 		b	.L90
 3016              	.L192:
1183:../CX3RDKOV5640.c **** 				{
 3017              		.loc 1 1183 0
 3018 0fc0 860053E3 		cmp	r3, #134
 3019 0fc4 0200000A 		beq	.L195
 3020 0fc8 870053E3 		cmp	r3, #135
 3021 0fcc 1000000A 		beq	.L193
 3022              		.loc 1 1217 0
 3023 0fd0 6A0100EA 		b	.L90
 3024              	.L195:
1186:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3025              		.loc 1 1186 0
 3026 0fd4 1C319FE5 		ldr	r3, .L229+132
 3027 0fd8 0320A0E3 		mov	r2, #3
 3028 0fdc 0020C3E5 		strb	r2, [r3]
1187:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3029              		.loc 1 1187 0
 3030 0fe0 0100A0E3 		mov	r0, #1
 3031 0fe4 0C119FE5 		ldr	r1, .L229+132
 3032 0fe8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3033 0fec 0C000BE5 		str	r0, [fp, #-12]
1188:../CX3RDKOV5640.c **** 					{
 3034              		.loc 1 1188 0
 3035 0ff0 0C301BE5 		ldr	r3, [fp, #-12]
 3036 0ff4 000053E3 		cmp	r3, #0
 3037 0ff8 0400000A 		beq	.L196
1190:../CX3RDKOV5640.c **** 					}
 3038              		.loc 1 1190 0
 3039 0ffc 0400A0E3 		mov	r0, #4
 3040 1000 FC109FE5 		ldr	r1, .L229+144
 3041 1004 0C201BE5 		ldr	r2, [fp, #-12]
 3042 1008 FEFFFFEB 		bl	CyU3PDebugPrint
1192:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3043              		.loc 1 1192 0
 3044 100c 500000EA 		b	.L191
 3045              	.L196:
 3046 1010 4F0000EA 		b	.L191
 3047              	.L193:
1198:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3048              		.loc 1 1198 0
 3049 1014 11305BE5 		ldrb	r3, [fp, #-17]
 3050 1018 0F3003E2 		and	r3, r3, #15
 3051 101c 0D304BE5 		strb	r3, [fp, #-13]
1200:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3052              		.loc 1 1200 0
 3053 1020 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 3054 1024 0300A0E1 		mov	r0, r3
 3055 1028 FEFFFFEB 		bl	CAMERA_GetSharpness
 3056 102c 0030A0E1 		mov	r3, r0
 3057 1030 0338A0E1 		mov	r3, r3, asl #16
 3058 1034 2328A0E1 		mov	r2, r3, lsr #16
 3059 1038 BC309FE5 		ldr	r3, .L229+136
 3060 103c B020C3E1 		strh	r2, [r3]	@ movhi
1201:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3061              		.loc 1 1201 0
 3062 1040 0200A0E3 		mov	r0, #2
 3063 1044 B0109FE5 		ldr	r1, .L229+136
 3064 1048 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3065 104c 0C000BE5 		str	r0, [fp, #-12]
1202:../CX3RDKOV5640.c **** 					{
 3066              		.loc 1 1202 0
 3067 1050 0C301BE5 		ldr	r3, [fp, #-12]
 3068 1054 000053E3 		cmp	r3, #0
 3069 1058 0400000A 		beq	.L197
1204:../CX3RDKOV5640.c **** 					}
 3070              		.loc 1 1204 0
 3071 105c 0400A0E3 		mov	r0, #4
 3072 1060 9C109FE5 		ldr	r1, .L229+144
 3073 1064 0C201BE5 		ldr	r2, [fp, #-12]
 3074 1068 FEFFFFEB 		bl	CyU3PDebugPrint
1206:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3075              		.loc 1 1206 0
 3076 106c 380000EA 		b	.L191
 3077              	.L197:
 3078 1070 370000EA 		b	.L191
 3079              	.L230:
 3080              		.align	2
 3081              	.L229:
 3082 1074 A4020000 		.word	.LC21
 3083 1078 00000000 		.word	glIsApplnActive
 3084 107c 00000000 		.word	glIsStreamingStarted
 3085 1080 00000000 		.word	glPreviewStarted
 3086 1084 00000000 		.word	glIsClearFeature
 3087 1088 00000000 		.word	glcommitcount
 3088 108c 00000000 		.word	glIsConfigured
 3089 1090 00000000 		.word	glCurrentFrameIndex
 3090 1094 00000000 		.word	glProbeCtrl
 3091 1098 00000000 		.word	gl5MpProbeCtrl
 3092 109c 00000000 		.word	gl720pProbeCtrl
 3093 10a0 00000000 		.word	glVga60ProbeCtrl
 3094 10a4 00000000 		.word	gl1080pProbeCtrl
 3095 10a8 00000000 		.word	glVga30ProbeCtrl
 3096 10ac F4020000 		.word	.LC22
 3097 10b0 10030000 		.word	.LC23
 3098 10b4 00000000 		.word	glStillProbeCtrl
 3099 10b8 00000000 		.word	glCommitCtrl
 3100 10bc 3C030000 		.word	.LC24
 3101 10c0 68030000 		.word	.LC25
 3102 10c4 00000000 		.word	glcheckframe
 3103 10c8 00000000 		.word	glFrameIndexToSet
 3104 10cc 00000000 		.word	glStillCommitCtrl
 3105 10d0 00000000 		.word	glCurrentStillFrameIndex
 3106 10d4 00000000 		.word	glStillTriggerCtrl
 3107 10d8 00000000 		.word	glStillSkip
 3108 10dc 00000000 		.word	glStillCaptureStart
 3109 10e0 00000000 		.word	gl32GetControl
 3110 10e4 00000000 		.word	gl32SetControl
 3111 10e8 AC030000 		.word	.LC27
 3112 10ec 00000000 		.word	gl8GetControl
 3113 10f0 00000000 		.word	gl8SetControl
 3114 10f4 00000000 		.word	g_IsAutoFocus
 3115 10f8 00000000 		.word	glGet_Info
 3116 10fc 00000000 		.word	gl16GetControl
 3117 1100 00000000 		.word	gl16SetControl
 3118 1104 8C030000 		.word	.LC26
 3119              	.L194:
1208:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3120              		.loc 1 1208 0
 3121 1108 1A304BE2 		sub	r3, fp, #26
 3122 110c 1000A0E3 		mov	r0, #16
 3123 1110 18101FE5 		ldr	r1, .L229+140
 3124 1114 0320A0E1 		mov	r2, r3
 3125 1118 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3126 111c 0C000BE5 		str	r0, [fp, #-12]
1209:../CX3RDKOV5640.c **** 					{
 3127              		.loc 1 1209 0
 3128 1120 0C301BE5 		ldr	r3, [fp, #-12]
 3129 1124 000053E3 		cmp	r3, #0
 3130 1128 0300000A 		beq	.L198
1211:../CX3RDKOV5640.c **** 					}
 3131              		.loc 1 1211 0
 3132 112c 0400A0E3 		mov	r0, #4
 3133 1130 34101FE5 		ldr	r1, .L229+144
 3134 1134 0C201BE5 		ldr	r2, [fp, #-12]
 3135 1138 FEFFFFEB 		bl	CyU3PDebugPrint
 3136              	.L198:
1214:../CX3RDKOV5640.c **** 					break;
 3137              		.loc 1 1214 0
 3138 113c 44301FE5 		ldr	r3, .L229+140
 3139 1140 B030D3E1 		ldrh	r3, [r3]
 3140 1144 FF3003E2 		and	r3, r3, #255
 3141 1148 0300A0E1 		mov	r0, r3
 3142 114c FEFFFFEB 		bl	CAMERA_SetSharpness
1215:../CX3RDKOV5640.c **** 				}
 3143              		.loc 1 1215 0
 3144 1150 0000A0E1 		mov	r0, r0	@ nop
 3145              	.L191:
 3146              		.loc 1 1217 0
 3147 1154 090100EA 		b	.L90
 3148              	.L190:
1218:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x800))/*Auto Focus*/
 3149              		.loc 1 1218 0
 3150 1158 B6315BE1 		ldrh	r3, [fp, #-22]
 3151 115c 010C53E3 		cmp	r3, #256
 3152 1160 5000001A 		bne	.L199
 3153              		.loc 1 1218 0 is_stmt 0 discriminator 1
 3154 1164 B4315BE1 		ldrh	r3, [fp, #-20]
 3155 1168 020B53E3 		cmp	r3, #2048
 3156 116c 4D00001A 		bne	.L199
1219:../CX3RDKOV5640.c **** 			{
1220:../CX3RDKOV5640.c ****             	CyU3PDebugPrint (4, "\n\rAuto Focus");
 3157              		.loc 1 1220 0 is_stmt 1
 3158 1170 0400A0E3 		mov	r0, #4
 3159 1174 94101FE5 		ldr	r1, .L229+116
 3160 1178 FEFFFFEB 		bl	CyU3PDebugPrint
1221:../CX3RDKOV5640.c **** 				switch(bRequest)
 3161              		.loc 1 1221 0
 3162 117c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 3163 1180 840053E3 		cmp	r3, #132
 3164 1184 040000CA 		bgt	.L201
 3165 1188 810053E3 		cmp	r3, #129
 3166 118c 170000AA 		bge	.L202
 3167 1190 010053E3 		cmp	r3, #1
 3168 1194 2C00000A 		beq	.L203
1222:../CX3RDKOV5640.c **** 				{
1223:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1224:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1225:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1226:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1227:../CX3RDKOV5640.c **** 					{
1228:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1229:../CX3RDKOV5640.c **** 					}
1230:../CX3RDKOV5640.c **** 					break;
1231:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1232:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1233:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1234:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1235:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1236:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1237:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1238:../CX3RDKOV5640.c **** 					gl8GetControl = CAMERA_GetAutofocus(RequestOption);
1239:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
1240:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1241:../CX3RDKOV5640.c **** 					{
1242:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1243:../CX3RDKOV5640.c **** 					}
1244:../CX3RDKOV5640.c **** 					break;
1245:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1246:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
1247:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1248:../CX3RDKOV5640.c **** 					{
1249:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1250:../CX3RDKOV5640.c **** 					}
1251:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1252:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Focus =%d",gl8SetControl);
1253:../CX3RDKOV5640.c **** 					CAMERA_SetAutofocus((uint8_t)gl8SetControl);
1254:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
1255:../CX3RDKOV5640.c **** 					break;
1256:../CX3RDKOV5640.c **** 				}
1257:../CX3RDKOV5640.c **** 			}
 3169              		.loc 1 1257 0
 3170 1198 F80000EA 		b	.L90
 3171              	.L201:
1221:../CX3RDKOV5640.c **** 				switch(bRequest)
 3172              		.loc 1 1221 0
 3173 119c 860053E3 		cmp	r3, #134
 3174 11a0 0200000A 		beq	.L204
 3175 11a4 870053E3 		cmp	r3, #135
 3176 11a8 1000000A 		beq	.L202
 3177              		.loc 1 1257 0
 3178 11ac F30000EA 		b	.L90
 3179              	.L204:
1224:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3180              		.loc 1 1224 0
 3181 11b0 C0301FE5 		ldr	r3, .L229+132
 3182 11b4 0320A0E3 		mov	r2, #3
 3183 11b8 0020C3E5 		strb	r2, [r3]
1225:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3184              		.loc 1 1225 0
 3185 11bc 0100A0E3 		mov	r0, #1
 3186 11c0 D0101FE5 		ldr	r1, .L229+132
 3187 11c4 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3188 11c8 0C000BE5 		str	r0, [fp, #-12]
1226:../CX3RDKOV5640.c **** 					{
 3189              		.loc 1 1226 0
 3190 11cc 0C301BE5 		ldr	r3, [fp, #-12]
 3191 11d0 000053E3 		cmp	r3, #0
 3192 11d4 0400000A 		beq	.L205
1228:../CX3RDKOV5640.c **** 					}
 3193              		.loc 1 1228 0
 3194 11d8 0400A0E3 		mov	r0, #4
 3195 11dc E0101FE5 		ldr	r1, .L229+144
 3196 11e0 0C201BE5 		ldr	r2, [fp, #-12]
 3197 11e4 FEFFFFEB 		bl	CyU3PDebugPrint
1230:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3198              		.loc 1 1230 0
 3199 11e8 2D0000EA 		b	.L200
 3200              	.L205:
 3201 11ec 2C0000EA 		b	.L200
 3202              	.L202:
1236:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3203              		.loc 1 1236 0
 3204 11f0 11305BE5 		ldrb	r3, [fp, #-17]
 3205 11f4 0F3003E2 		and	r3, r3, #15
 3206 11f8 0D304BE5 		strb	r3, [fp, #-13]
1238:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
 3207              		.loc 1 1238 0
 3208 11fc 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 3209 1200 0300A0E1 		mov	r0, r3
 3210 1204 FEFFFFEB 		bl	CAMERA_GetAutofocus
 3211 1208 0030A0E1 		mov	r3, r0
 3212 120c 0320A0E1 		mov	r2, r3
 3213 1210 2C311FE5 		ldr	r3, .L229+120
 3214 1214 B020C3E1 		strh	r2, [r3]	@ movhi
1239:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3215              		.loc 1 1239 0
 3216 1218 0200A0E3 		mov	r0, #2
 3217 121c 38111FE5 		ldr	r1, .L229+120
 3218 1220 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3219 1224 0C000BE5 		str	r0, [fp, #-12]
1240:../CX3RDKOV5640.c **** 					{
 3220              		.loc 1 1240 0
 3221 1228 0C301BE5 		ldr	r3, [fp, #-12]
 3222 122c 000053E3 		cmp	r3, #0
 3223 1230 0400000A 		beq	.L206
1242:../CX3RDKOV5640.c **** 					}
 3224              		.loc 1 1242 0
 3225 1234 0400A0E3 		mov	r0, #4
 3226 1238 3C111FE5 		ldr	r1, .L229+144
 3227 123c 0C201BE5 		ldr	r2, [fp, #-12]
 3228 1240 FEFFFFEB 		bl	CyU3PDebugPrint
1244:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3229              		.loc 1 1244 0
 3230 1244 160000EA 		b	.L200
 3231              	.L206:
 3232 1248 150000EA 		b	.L200
 3233              	.L203:
1246:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3234              		.loc 1 1246 0
 3235 124c 1A304BE2 		sub	r3, fp, #26
 3236 1250 1000A0E3 		mov	r0, #16
 3237 1254 6C111FE5 		ldr	r1, .L229+124
 3238 1258 0320A0E1 		mov	r2, r3
 3239 125c FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3240 1260 0C000BE5 		str	r0, [fp, #-12]
1247:../CX3RDKOV5640.c **** 					{
 3241              		.loc 1 1247 0
 3242 1264 0C301BE5 		ldr	r3, [fp, #-12]
 3243 1268 000053E3 		cmp	r3, #0
 3244 126c 0300000A 		beq	.L207
1249:../CX3RDKOV5640.c **** 					}
 3245              		.loc 1 1249 0
 3246 1270 0400A0E3 		mov	r0, #4
 3247 1274 78111FE5 		ldr	r1, .L229+144
 3248 1278 0C201BE5 		ldr	r2, [fp, #-12]
 3249 127c FEFFFFEB 		bl	CyU3PDebugPrint
 3250              	.L207:
1253:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
 3251              		.loc 1 1253 0
 3252 1280 98311FE5 		ldr	r3, .L229+124
 3253 1284 B030D3E1 		ldrh	r3, [r3]
 3254 1288 FF3003E2 		and	r3, r3, #255
 3255 128c 0300A0E1 		mov	r0, r3
 3256 1290 FEFFFFEB 		bl	CAMERA_SetAutofocus
1254:../CX3RDKOV5640.c **** 					break;
 3257              		.loc 1 1254 0
 3258 1294 A8311FE5 		ldr	r3, .L229+128
 3259 1298 0120A0E3 		mov	r2, #1
 3260 129c 0020C3E5 		strb	r2, [r3]
1255:../CX3RDKOV5640.c **** 				}
 3261              		.loc 1 1255 0
 3262 12a0 0000A0E1 		mov	r0, r0	@ nop
 3263              	.L200:
 3264              		.loc 1 1257 0
 3265 12a4 B50000EA 		b	.L90
 3266              	.L199:
1258:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xA00))/*White Balance manual*/
 3267              		.loc 1 1258 0
 3268 12a8 B6315BE1 		ldrh	r3, [fp, #-22]
 3269 12ac 020C53E3 		cmp	r3, #512
 3270 12b0 4A00001A 		bne	.L208
 3271              		.loc 1 1258 0 is_stmt 0 discriminator 1
 3272 12b4 B4315BE1 		ldrh	r3, [fp, #-20]
 3273 12b8 0A0C53E3 		cmp	r3, #2560
 3274 12bc 4700001A 		bne	.L208
1259:../CX3RDKOV5640.c **** 			{
1260:../CX3RDKOV5640.c **** 				switch(bRequest)
 3275              		.loc 1 1260 0 is_stmt 1
 3276 12c0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 3277 12c4 840053E3 		cmp	r3, #132
 3278 12c8 040000CA 		bgt	.L210
 3279 12cc 810053E3 		cmp	r3, #129
 3280 12d0 170000AA 		bge	.L211
 3281 12d4 010053E3 		cmp	r3, #1
 3282 12d8 2C00000A 		beq	.L212
1261:../CX3RDKOV5640.c **** 				{
1262:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1263:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1264:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1265:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1266:../CX3RDKOV5640.c **** 					{
1267:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1268:../CX3RDKOV5640.c **** 					}
1269:../CX3RDKOV5640.c **** 					break;
1270:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1271:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1272:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1273:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1274:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1275:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1276:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1277:../CX3RDKOV5640.c **** 					gl16GetControl = CAMERA_GetWhiteBalance(RequestOption);
1278:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1279:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1280:../CX3RDKOV5640.c **** 					{
1281:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1282:../CX3RDKOV5640.c **** 					}
1283:../CX3RDKOV5640.c **** 					break;
1284:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1285:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1286:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1287:../CX3RDKOV5640.c **** 					{
1288:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1289:../CX3RDKOV5640.c **** 					}
1290:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1291:../CX3RDKOV5640.c **** 					CAMERA_SetWhiteBalance((uint8_t)gl16SetControl);
1292:../CX3RDKOV5640.c **** 					break;
1293:../CX3RDKOV5640.c **** 				}
1294:../CX3RDKOV5640.c **** 			}
 3283              		.loc 1 1294 0
 3284 12dc A70000EA 		b	.L90
 3285              	.L210:
1260:../CX3RDKOV5640.c **** 				{
 3286              		.loc 1 1260 0
 3287 12e0 860053E3 		cmp	r3, #134
 3288 12e4 0200000A 		beq	.L213
 3289 12e8 870053E3 		cmp	r3, #135
 3290 12ec 1000000A 		beq	.L211
 3291              		.loc 1 1294 0
 3292 12f0 A20000EA 		b	.L90
 3293              	.L213:
1263:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3294              		.loc 1 1263 0
 3295 12f4 04321FE5 		ldr	r3, .L229+132
 3296 12f8 0320A0E3 		mov	r2, #3
 3297 12fc 0020C3E5 		strb	r2, [r3]
1264:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3298              		.loc 1 1264 0
 3299 1300 0100A0E3 		mov	r0, #1
 3300 1304 14121FE5 		ldr	r1, .L229+132
 3301 1308 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3302 130c 0C000BE5 		str	r0, [fp, #-12]
1265:../CX3RDKOV5640.c **** 					{
 3303              		.loc 1 1265 0
 3304 1310 0C301BE5 		ldr	r3, [fp, #-12]
 3305 1314 000053E3 		cmp	r3, #0
 3306 1318 0400000A 		beq	.L214
1267:../CX3RDKOV5640.c **** 					}
 3307              		.loc 1 1267 0
 3308 131c 0400A0E3 		mov	r0, #4
 3309 1320 24121FE5 		ldr	r1, .L229+144
 3310 1324 0C201BE5 		ldr	r2, [fp, #-12]
 3311 1328 FEFFFFEB 		bl	CyU3PDebugPrint
1269:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3312              		.loc 1 1269 0
 3313 132c 2A0000EA 		b	.L209
 3314              	.L214:
 3315 1330 290000EA 		b	.L209
 3316              	.L211:
1275:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3317              		.loc 1 1275 0
 3318 1334 11305BE5 		ldrb	r3, [fp, #-17]
 3319 1338 0F3003E2 		and	r3, r3, #15
 3320 133c 0D304BE5 		strb	r3, [fp, #-13]
1277:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3321              		.loc 1 1277 0
 3322 1340 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 3323 1344 0300A0E1 		mov	r0, r3
 3324 1348 FEFFFFEB 		bl	CAMERA_GetWhiteBalance
 3325 134c 0030A0E1 		mov	r3, r0
 3326 1350 0320A0E1 		mov	r2, r3
 3327 1354 60321FE5 		ldr	r3, .L229+136
 3328 1358 B020C3E1 		strh	r2, [r3]	@ movhi
1278:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3329              		.loc 1 1278 0
 3330 135c 0200A0E3 		mov	r0, #2
 3331 1360 6C121FE5 		ldr	r1, .L229+136
 3332 1364 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3333 1368 0C000BE5 		str	r0, [fp, #-12]
1279:../CX3RDKOV5640.c **** 					{
 3334              		.loc 1 1279 0
 3335 136c 0C301BE5 		ldr	r3, [fp, #-12]
 3336 1370 000053E3 		cmp	r3, #0
 3337 1374 0400000A 		beq	.L215
1281:../CX3RDKOV5640.c **** 					}
 3338              		.loc 1 1281 0
 3339 1378 0400A0E3 		mov	r0, #4
 3340 137c 80121FE5 		ldr	r1, .L229+144
 3341 1380 0C201BE5 		ldr	r2, [fp, #-12]
 3342 1384 FEFFFFEB 		bl	CyU3PDebugPrint
1283:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3343              		.loc 1 1283 0
 3344 1388 130000EA 		b	.L209
 3345              	.L215:
 3346 138c 120000EA 		b	.L209
 3347              	.L212:
1285:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3348              		.loc 1 1285 0
 3349 1390 1A304BE2 		sub	r3, fp, #26
 3350 1394 1000A0E3 		mov	r0, #16
 3351 1398 A0121FE5 		ldr	r1, .L229+140
 3352 139c 0320A0E1 		mov	r2, r3
 3353 13a0 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3354 13a4 0C000BE5 		str	r0, [fp, #-12]
1286:../CX3RDKOV5640.c **** 					{
 3355              		.loc 1 1286 0
 3356 13a8 0C301BE5 		ldr	r3, [fp, #-12]
 3357 13ac 000053E3 		cmp	r3, #0
 3358 13b0 0300000A 		beq	.L216
1288:../CX3RDKOV5640.c **** 					}
 3359              		.loc 1 1288 0
 3360 13b4 0400A0E3 		mov	r0, #4
 3361 13b8 BC121FE5 		ldr	r1, .L229+144
 3362 13bc 0C201BE5 		ldr	r2, [fp, #-12]
 3363 13c0 FEFFFFEB 		bl	CyU3PDebugPrint
 3364              	.L216:
1291:../CX3RDKOV5640.c **** 					break;
 3365              		.loc 1 1291 0
 3366 13c4 CC321FE5 		ldr	r3, .L229+140
 3367 13c8 B030D3E1 		ldrh	r3, [r3]
 3368 13cc FF3003E2 		and	r3, r3, #255
 3369 13d0 0300A0E1 		mov	r0, r3
 3370 13d4 FEFFFFEB 		bl	CAMERA_SetWhiteBalance
1292:../CX3RDKOV5640.c **** 				}
 3371              		.loc 1 1292 0
 3372 13d8 0000A0E1 		mov	r0, r0	@ nop
 3373              	.L209:
 3374              		.loc 1 1294 0
 3375 13dc 670000EA 		b	.L90
 3376              	.L208:
1295:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xB00))/*White Balance Auto*/
 3377              		.loc 1 1295 0
 3378 13e0 B6315BE1 		ldrh	r3, [fp, #-22]
 3379 13e4 020C53E3 		cmp	r3, #512
 3380 13e8 4A00001A 		bne	.L217
 3381              		.loc 1 1295 0 is_stmt 0 discriminator 1
 3382 13ec B4315BE1 		ldrh	r3, [fp, #-20]
 3383 13f0 0B0C53E3 		cmp	r3, #2816
 3384 13f4 4700001A 		bne	.L217
1296:../CX3RDKOV5640.c **** 			{
1297:../CX3RDKOV5640.c **** 				switch(bRequest)
 3385              		.loc 1 1297 0 is_stmt 1
 3386 13f8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 3387 13fc 840053E3 		cmp	r3, #132
 3388 1400 040000CA 		bgt	.L219
 3389 1404 810053E3 		cmp	r3, #129
 3390 1408 170000AA 		bge	.L220
 3391 140c 010053E3 		cmp	r3, #1
 3392 1410 2C00000A 		beq	.L221
1298:../CX3RDKOV5640.c **** 				{
1299:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1300:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1301:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1302:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1303:../CX3RDKOV5640.c **** 					{
1304:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1305:../CX3RDKOV5640.c **** 					}
1306:../CX3RDKOV5640.c **** 					break;
1307:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1308:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1309:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1310:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1311:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1312:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1313:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1314:../CX3RDKOV5640.c **** 					gl16GetControl = CAMERA_GetAutoWhiteBalance(RequestOption);
1315:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1316:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1317:../CX3RDKOV5640.c **** 					{
1318:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1319:../CX3RDKOV5640.c **** 					}
1320:../CX3RDKOV5640.c **** 					break;
1321:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1322:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1323:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1324:../CX3RDKOV5640.c **** 					{
1325:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1326:../CX3RDKOV5640.c **** 					}
1327:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1328:../CX3RDKOV5640.c **** 					CAMERA_SetAutoWhiteBalance((uint8_t)gl16SetControl);
1329:../CX3RDKOV5640.c **** 					break;
1330:../CX3RDKOV5640.c **** 				}
1331:../CX3RDKOV5640.c **** 			}
 3393              		.loc 1 1331 0
 3394 1414 590000EA 		b	.L90
 3395              	.L219:
1297:../CX3RDKOV5640.c **** 				{
 3396              		.loc 1 1297 0
 3397 1418 860053E3 		cmp	r3, #134
 3398 141c 0200000A 		beq	.L222
 3399 1420 870053E3 		cmp	r3, #135
 3400 1424 1000000A 		beq	.L220
 3401              		.loc 1 1331 0
 3402 1428 540000EA 		b	.L90
 3403              	.L222:
1300:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3404              		.loc 1 1300 0
 3405 142c 3C331FE5 		ldr	r3, .L229+132
 3406 1430 0320A0E3 		mov	r2, #3
 3407 1434 0020C3E5 		strb	r2, [r3]
1301:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3408              		.loc 1 1301 0
 3409 1438 0100A0E3 		mov	r0, #1
 3410 143c 4C131FE5 		ldr	r1, .L229+132
 3411 1440 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3412 1444 0C000BE5 		str	r0, [fp, #-12]
1302:../CX3RDKOV5640.c **** 					{
 3413              		.loc 1 1302 0
 3414 1448 0C301BE5 		ldr	r3, [fp, #-12]
 3415 144c 000053E3 		cmp	r3, #0
 3416 1450 0400000A 		beq	.L223
1304:../CX3RDKOV5640.c **** 					}
 3417              		.loc 1 1304 0
 3418 1454 0400A0E3 		mov	r0, #4
 3419 1458 5C131FE5 		ldr	r1, .L229+144
 3420 145c 0C201BE5 		ldr	r2, [fp, #-12]
 3421 1460 FEFFFFEB 		bl	CyU3PDebugPrint
1306:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3422              		.loc 1 1306 0
 3423 1464 2A0000EA 		b	.L218
 3424              	.L223:
 3425 1468 290000EA 		b	.L218
 3426              	.L220:
1312:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3427              		.loc 1 1312 0
 3428 146c 11305BE5 		ldrb	r3, [fp, #-17]
 3429 1470 0F3003E2 		and	r3, r3, #15
 3430 1474 0D304BE5 		strb	r3, [fp, #-13]
1314:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3431              		.loc 1 1314 0
 3432 1478 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 3433 147c 0300A0E1 		mov	r0, r3
 3434 1480 FEFFFFEB 		bl	CAMERA_GetAutoWhiteBalance
 3435 1484 0030A0E1 		mov	r3, r0
 3436 1488 0320A0E1 		mov	r2, r3
 3437 148c 98331FE5 		ldr	r3, .L229+136
 3438 1490 B020C3E1 		strh	r2, [r3]	@ movhi
1315:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3439              		.loc 1 1315 0
 3440 1494 0200A0E3 		mov	r0, #2
 3441 1498 A4131FE5 		ldr	r1, .L229+136
 3442 149c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3443 14a0 0C000BE5 		str	r0, [fp, #-12]
1316:../CX3RDKOV5640.c **** 					{
 3444              		.loc 1 1316 0
 3445 14a4 0C301BE5 		ldr	r3, [fp, #-12]
 3446 14a8 000053E3 		cmp	r3, #0
 3447 14ac 0400000A 		beq	.L224
1318:../CX3RDKOV5640.c **** 					}
 3448              		.loc 1 1318 0
 3449 14b0 0400A0E3 		mov	r0, #4
 3450 14b4 B8131FE5 		ldr	r1, .L229+144
 3451 14b8 0C201BE5 		ldr	r2, [fp, #-12]
 3452 14bc FEFFFFEB 		bl	CyU3PDebugPrint
1320:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3453              		.loc 1 1320 0
 3454 14c0 130000EA 		b	.L218
 3455              	.L224:
 3456 14c4 120000EA 		b	.L218
 3457              	.L221:
1322:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3458              		.loc 1 1322 0
 3459 14c8 1A304BE2 		sub	r3, fp, #26
 3460 14cc 1000A0E3 		mov	r0, #16
 3461 14d0 D8131FE5 		ldr	r1, .L229+140
 3462 14d4 0320A0E1 		mov	r2, r3
 3463 14d8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3464 14dc 0C000BE5 		str	r0, [fp, #-12]
1323:../CX3RDKOV5640.c **** 					{
 3465              		.loc 1 1323 0
 3466 14e0 0C301BE5 		ldr	r3, [fp, #-12]
 3467 14e4 000053E3 		cmp	r3, #0
 3468 14e8 0300000A 		beq	.L225
1325:../CX3RDKOV5640.c **** 					}
 3469              		.loc 1 1325 0
 3470 14ec 0400A0E3 		mov	r0, #4
 3471 14f0 F4131FE5 		ldr	r1, .L229+144
 3472 14f4 0C201BE5 		ldr	r2, [fp, #-12]
 3473 14f8 FEFFFFEB 		bl	CyU3PDebugPrint
 3474              	.L225:
1328:../CX3RDKOV5640.c **** 					break;
 3475              		.loc 1 1328 0
 3476 14fc 04341FE5 		ldr	r3, .L229+140
 3477 1500 B030D3E1 		ldrh	r3, [r3]
 3478 1504 FF3003E2 		and	r3, r3, #255
 3479 1508 0300A0E1 		mov	r0, r3
 3480 150c FEFFFFEB 		bl	CAMERA_SetAutoWhiteBalance
1329:../CX3RDKOV5640.c **** 				}
 3481              		.loc 1 1329 0
 3482 1510 0000A0E1 		mov	r0, r0	@ nop
 3483              	.L218:
 3484              		.loc 1 1331 0
 3485 1514 190000EA 		b	.L90
 3486              	.L217:
1332:../CX3RDKOV5640.c ****             else if((wValue == ES_UVC_VC_REQUEST_ERROR_CODE_CONTROL) && (wIndex == 0x00))
 3487              		.loc 1 1332 0
 3488 1518 B4315BE1 		ldrh	r3, [fp, #-20]
 3489 151c 020C53E3 		cmp	r3, #512
 3490 1520 1200001A 		bne	.L226
 3491              		.loc 1 1332 0 is_stmt 0 discriminator 1
 3492 1524 B6315BE1 		ldrh	r3, [fp, #-22]
 3493 1528 000053E3 		cmp	r3, #0
 3494 152c 0F00001A 		bne	.L226
1333:../CX3RDKOV5640.c ****             {
1334:../CX3RDKOV5640.c ****                 temp = ES_UVC_ERROR_INVALID_CONTROL;
 3495              		.loc 1 1334 0 is_stmt 1
 3496 1530 0630A0E3 		mov	r3, #6
 3497 1534 1D304BE5 		strb	r3, [fp, #-29]
1335:../CX3RDKOV5640.c ****                 status = CyU3PUsbSendEP0Data(0x01, &temp);
 3498              		.loc 1 1335 0
 3499 1538 1D304BE2 		sub	r3, fp, #29
 3500 153c 0100A0E3 		mov	r0, #1
 3501 1540 0310A0E1 		mov	r1, r3
 3502 1544 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3503 1548 0C000BE5 		str	r0, [fp, #-12]
1336:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3504              		.loc 1 1336 0
 3505 154c 0C301BE5 		ldr	r3, [fp, #-12]
 3506 1550 000053E3 		cmp	r3, #0
 3507 1554 0400000A 		beq	.L227
1337:../CX3RDKOV5640.c ****                 {
1338:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 3508              		.loc 1 1338 0
 3509 1558 0400A0E3 		mov	r0, #4
 3510 155c 60141FE5 		ldr	r1, .L229+144
 3511 1560 0C201BE5 		ldr	r2, [fp, #-12]
 3512 1564 FEFFFFEB 		bl	CyU3PDebugPrint
1336:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3513              		.loc 1 1336 0
 3514 1568 040000EA 		b	.L90
 3515              	.L227:
1336:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3516              		.loc 1 1336 0 is_stmt 0 discriminator 1
 3517 156c 030000EA 		b	.L90
 3518              	.L226:
1339:../CX3RDKOV5640.c ****                 }
1340:../CX3RDKOV5640.c ****             }
1341:../CX3RDKOV5640.c ****             else
1342:../CX3RDKOV5640.c ****                 CyU3PUsbStall(0,CyTrue, CyTrue);
 3519              		.loc 1 1342 0 is_stmt 1
 3520 1570 0000A0E3 		mov	r0, #0
 3521 1574 0110A0E3 		mov	r1, #1
 3522 1578 0120A0E3 		mov	r2, #1
 3523 157c FEFFFFEB 		bl	CyU3PUsbStall
 3524              	.L90:
1343:../CX3RDKOV5640.c ****         }
1344:../CX3RDKOV5640.c ****     }
1345:../CX3RDKOV5640.c ****     return isHandled;
 3525              		.loc 1 1345 0
 3526 1580 08301BE5 		ldr	r3, [fp, #-8]
 3527              	.L228:
1346:../CX3RDKOV5640.c **** }
 3528              		.loc 1 1346 0
 3529 1584 0300A0E1 		mov	r0, r3
 3530 1588 04D04BE2 		sub	sp, fp, #4
 3531              		@ sp needed
 3532 158c 0088BDE8 		ldmfd	sp!, {fp, pc}
 3533              		.cfi_endproc
 3534              	.LFE10:
 3536              		.section	.rodata
 3537 03b9 000000   		.align	2
 3538              	.LC28:
 3539 03bc 0A0D6573 		.ascii	"\012\015esUVCUvcApplnInit\000"
 3539      55564355 
 3539      76634170 
 3539      706C6E49 
 3539      6E697400 
 3540              		.align	2
 3541              	.LC29:
 3542 03d0 0A0D4170 		.ascii	"\012\015AppInit:I2CInit Err = 0x%x.\000"
 3542      70496E69 
 3542      743A4932 
 3542      43496E69 
 3542      74204572 
 3543 03ee 0000     		.align	2
 3544              	.LC30:
 3545 03f0 0A0D4170 		.ascii	"\012\015AppInit:GPIOInit Err = 0x%x\000"
 3545      70496E69 
 3545      743A4750 
 3545      494F496E 
 3545      69742045 
 3546 040e 0000     		.align	2
 3547              	.LC31:
 3548 0410 0A0D4170 		.ascii	"\012\015AppInit:PIBInit Err = 0x%x\000"
 3548      70496E69 
 3548      743A5049 
 3548      42496E69 
 3548      74204572 
 3549 042d 000000   		.align	2
 3550              	.LC32:
 3551 0430 0A0D4170 		.ascii	"\012\015AppInit:UsbStart Err = 0x%x\000"
 3551      70496E69 
 3551      743A5573 
 3551      62537461 
 3551      72742045 
 3552 044e 0000     		.align	2
 3553              	.LC33:
 3554 0450 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_Device_Dscr Err = 0x%x\000"
 3554      70496E69 
 3554      743A5365 
 3554      745F5353 
 3554      5F446576 
 3555              		.align	2
 3556              	.LC34:
 3557 0478 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_Device_Dscr Err = 0x%x\000"
 3557      70496E69 
 3557      743A5365 
 3557      745F4853 
 3557      5F446576 
 3558              		.align	2
 3559              	.LC35:
 3560 04a0 0A0D4170 		.ascii	"\012\015AppInit:Set_BOS_Dscr Err = 0x%x\000"
 3560      70496E69 
 3560      743A5365 
 3560      745F424F 
 3560      535F4473 
 3561 04c2 0000     		.align	2
 3562              	.LC36:
 3563 04c4 0A0D4170 		.ascii	"\012\015AppInit:Set_DEVQUAL_Dscr Err = 0x%x\000"
 3563      70496E69 
 3563      743A5365 
 3563      745F4445 
 3563      56515541 
 3564 04ea 0000     		.align	2
 3565              	.LC37:
 3566 04ec 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_CFG_Dscr Err = 0x%x\000"
 3566      70496E69 
 3566      743A5365 
 3566      745F5353 
 3566      5F434647 
 3567 0511 000000   		.align	2
 3568              	.LC38:
 3569 0514 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_CFG_Dscr Err = 0x%x\000"
 3569      70496E69 
 3569      743A5365 
 3569      745F4853 
 3569      5F434647 
 3570 0539 000000   		.align	2
 3571              	.LC39:
 3572 053c 0A0D4170 		.ascii	"\012\015AppInit:Set_FS_CFG_Dscr Err = 0x%x\000"
 3572      70496E69 
 3572      743A5365 
 3572      745F4653 
 3572      5F434647 
 3573 0561 000000   		.align	2
 3574              	.LC40:
 3575 0564 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr0 Err = 0x%x\000"
 3575      70496E69 
 3575      743A5365 
 3575      745F5354 
 3575      524E475F 
 3576 0589 000000   		.align	2
 3577              	.LC41:
 3578 058c 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr1 Err = 0x%x\000"
 3578      70496E69 
 3578      743A5365 
 3578      745F5354 
 3578      524E475F 
 3579 05b1 000000   		.align	2
 3580              	.LC42:
 3581 05b4 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr2 Err = 0x%x\000"
 3581      70496E69 
 3581      743A5365 
 3581      745F5354 
 3581      524E475F 
 3582 05d9 000000   		.align	2
 3583              	.LC43:
 3584 05dc 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr3 Err = 0x%x\000"
 3584      70496E69 
 3584      743A5365 
 3584      745F5354 
 3584      524E475F 
 3585 0601 000000   		.align	2
 3586              	.LC44:
 3587 0604 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr4 Err = 0x%x\000"
 3587      70496E69 
 3587      743A5365 
 3587      745F5354 
 3587      524E475F 
 3588 0629 000000   		.align	2
 3589              	.LC45:
 3590 062c 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr5 Err = 0x%x\000"
 3590      70496E69 
 3590      743A5365 
 3590      745F5354 
 3590      524E475F 
 3591 0651 000000   		.align	2
 3592              	.LC46:
 3593 0654 0A0D4170 		.ascii	"\012\015AppInit:ConnectState Err = 0x%x\000"
 3593      70496E69 
 3593      743A436F 
 3593      6E6E6563 
 3593      74537461 
 3594 0676 0000     		.align	2
 3595              	.LC47:
 3596 0678 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x\000"
 3596      70496E69 
 3596      743A4379 
 3596      55335053 
 3596      65744570 
 3597 06a5 000000   		.align	2
 3598              	.LC48:
 3599 06a8 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig BulkEp Err = 0x%x\000"
 3599      70496E69 
 3599      743A4379 
 3599      55335053 
 3599      65744570 
 3600 06d5 000000   		.align	2
 3601              	.LC49:
 3602 06d8 0A0D4170 		.ascii	"\012\015AppInit:DmaMultiChannelCreate Err = 0x%x\000"
 3602      70496E69 
 3602      743A446D 
 3602      614D756C 
 3602      74694368 
 3603 0703 00       		.align	2
 3604              	.LC50:
 3605 0704 0A0D4170 		.ascii	"\012\015AppInit:MultiChannelReset Err = 0x%x\000"
 3605      70496E69 
 3605      743A4D75 
 3605      6C746943 
 3605      68616E6E 
 3606 072b 00       		.align	2
 3607              	.LC51:
 3608 072c 0A0D4170 		.ascii	"\012\015AppInit:MipicsiGpifLoad Err = 0x%x\000"
 3608      70496E69 
 3608      743A4D69 
 3608      70696373 
 3608      69477069 
 3609 0751 000000   		.align	2
 3610              	.LC52:
 3611 0754 0A0D4170 		.ascii	"\012\015AppInit:GpifSMStart Err = 0x%x\000"
 3611      70496E69 
 3611      743A4770 
 3611      6966534D 
 3611      53746172 
 3612 0775 000000   		.align	2
 3613              	.LC53:
 3614 0778 0A0D4170 		.ascii	"\012\015AppInit:MipicsiInit Err = 0x%x\000"
 3614      70496E69 
 3614      743A4D69 
 3614      70696373 
 3614      69496E69 
 3615 0799 000000   		.align	2
 3616              	.LC54:
 3617 079c 0A0D4170 		.ascii	"\012\015AppInit:MipicsiSetIntfParams Err = 0x%x\000"
 3617      70496E69 
 3617      743A4D69 
 3617      70696373 
 3617      69536574 
 3618 07c6 0000     		.align	2
 3619              	.LC55:
 3620 07c8 0A0D4669 		.ascii	"\012\015Firmware Version: %d.%d.%d.%d\000"
 3620      726D7761 
 3620      72652056 
 3620      65727369 
 3620      6F6E3A20 
 3621              		.section	.text.esUVCUvcApplnInit,"ax",%progbits
 3622              		.align	2
 3623              		.global	esUVCUvcApplnInit
 3625              	esUVCUvcApplnInit:
 3626              	.LFB11:
1347:../CX3RDKOV5640.c **** 
1348:../CX3RDKOV5640.c **** 
1349:../CX3RDKOV5640.c **** /* This function initializes the USB Module, creates event group,
1350:../CX3RDKOV5640.c ****    sets the enumeration descriptors, configures the Endpoints and
1351:../CX3RDKOV5640.c ****    configures the DMA module for the UVC Application */
1352:../CX3RDKOV5640.c ****     void
1353:../CX3RDKOV5640.c **** esUVCUvcApplnInit (void)
1354:../CX3RDKOV5640.c **** {
 3627              		.loc 1 1354 0
 3628              		.cfi_startproc
 3629              		@ args = 0, pretend = 0, frame = 56
 3630              		@ frame_needed = 1, uses_anonymous_args = 0
 3631 0000 00482DE9 		stmfd	sp!, {fp, lr}
 3632              	.LCFI22:
 3633              		.cfi_def_cfa_offset 8
 3634              		.cfi_offset 11, -8
 3635              		.cfi_offset 14, -4
 3636 0004 04B08DE2 		add	fp, sp, #4
 3637              	.LCFI23:
 3638              		.cfi_def_cfa 11, 4
 3639 0008 48D04DE2 		sub	sp, sp, #72
1355:../CX3RDKOV5640.c ****     CyU3PEpConfig_t endPointConfig;
1356:../CX3RDKOV5640.c ****     CyU3PDmaMultiChannelConfig_t dmaCfg;
1357:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 3640              		.loc 1 1357 0
 3641 000c 0030A0E3 		mov	r3, #0
 3642 0010 08300BE5 		str	r3, [fp, #-8]
1358:../CX3RDKOV5640.c **** 
1359:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\resUVCUvcApplnInit");
 3643              		.loc 1 1359 0
 3644 0014 0400A0E3 		mov	r0, #4
 3645 0018 9C179FE5 		ldr	r1, .L263
 3646 001c FEFFFFEB 		bl	CyU3PDebugPrint
1360:../CX3RDKOV5640.c **** 
1361:../CX3RDKOV5640.c **** 
1362:../CX3RDKOV5640.c ****     /* Initialize the I2C interface for Mipi Block Usage and Camera. */
1363:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeI2c (CY_U3P_MIPICSI_I2C_400KHZ);
 3647              		.loc 1 1363 0
 3648 0020 0100A0E3 		mov	r0, #1
 3649 0024 FEFFFFEB 		bl	CyU3PMipicsiInitializeI2c
 3650 0028 08000BE5 		str	r0, [fp, #-8]
1364:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3651              		.loc 1 1364 0
 3652 002c 08301BE5 		ldr	r3, [fp, #-8]
 3653 0030 000053E3 		cmp	r3, #0
 3654 0034 0500000A 		beq	.L232
1365:../CX3RDKOV5640.c ****     {
1366:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:I2CInit Err = 0x%x.",status);
 3655              		.loc 1 1366 0
 3656 0038 0400A0E3 		mov	r0, #4
 3657 003c 7C179FE5 		ldr	r1, .L263+4
 3658 0040 08201BE5 		ldr	r2, [fp, #-8]
 3659 0044 FEFFFFEB 		bl	CyU3PDebugPrint
1367:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3660              		.loc 1 1367 0
 3661 0048 08001BE5 		ldr	r0, [fp, #-8]
 3662 004c FEFFFFEB 		bl	esUVCAppErrorHandler
 3663              	.L232:
1368:../CX3RDKOV5640.c ****     }
1369:../CX3RDKOV5640.c **** 
1370:../CX3RDKOV5640.c ****     /* Initialize GPIO module. */
1371:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeGPIO ();
 3664              		.loc 1 1371 0
 3665 0050 FEFFFFEB 		bl	CyU3PMipicsiInitializeGPIO
 3666 0054 08000BE5 		str	r0, [fp, #-8]
1372:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3667              		.loc 1 1372 0
 3668 0058 08301BE5 		ldr	r3, [fp, #-8]
 3669 005c 000053E3 		cmp	r3, #0
 3670 0060 0500000A 		beq	.L233
1373:../CX3RDKOV5640.c ****     {
1374:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GPIOInit Err = 0x%x",status);
 3671              		.loc 1 1374 0
 3672 0064 0400A0E3 		mov	r0, #4
 3673 0068 54179FE5 		ldr	r1, .L263+8
 3674 006c 08201BE5 		ldr	r2, [fp, #-8]
 3675 0070 FEFFFFEB 		bl	CyU3PDebugPrint
1375:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3676              		.loc 1 1375 0
 3677 0074 08001BE5 		ldr	r0, [fp, #-8]
 3678 0078 FEFFFFEB 		bl	esUVCAppErrorHandler
 3679              	.L233:
1376:../CX3RDKOV5640.c ****     }
1377:../CX3RDKOV5640.c **** 
1378:../CX3RDKOV5640.c ****     /* Initialize the PIB block */
1379:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializePIB ();
 3680              		.loc 1 1379 0
 3681 007c FEFFFFEB 		bl	CyU3PMipicsiInitializePIB
 3682 0080 08000BE5 		str	r0, [fp, #-8]
1380:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3683              		.loc 1 1380 0
 3684 0084 08301BE5 		ldr	r3, [fp, #-8]
 3685 0088 000053E3 		cmp	r3, #0
 3686 008c 0500000A 		beq	.L234
1381:../CX3RDKOV5640.c ****     {
1382:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:PIBInit Err = 0x%x",status);
 3687              		.loc 1 1382 0
 3688 0090 0400A0E3 		mov	r0, #4
 3689 0094 2C179FE5 		ldr	r1, .L263+12
 3690 0098 08201BE5 		ldr	r2, [fp, #-8]
 3691 009c FEFFFFEB 		bl	CyU3PDebugPrint
1383:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3692              		.loc 1 1383 0
 3693 00a0 08001BE5 		ldr	r0, [fp, #-8]
 3694 00a4 FEFFFFEB 		bl	esUVCAppErrorHandler
 3695              	.L234:
1384:../CX3RDKOV5640.c ****     }
1385:../CX3RDKOV5640.c **** 
1386:../CX3RDKOV5640.c ****     /* Start the USB functionality */
1387:../CX3RDKOV5640.c ****     status = CyU3PUsbStart();
 3696              		.loc 1 1387 0
 3697 00a8 FEFFFFEB 		bl	CyU3PUsbStart
 3698 00ac 08000BE5 		str	r0, [fp, #-8]
1388:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3699              		.loc 1 1388 0
 3700 00b0 08301BE5 		ldr	r3, [fp, #-8]
 3701 00b4 000053E3 		cmp	r3, #0
 3702 00b8 0500000A 		beq	.L235
1389:../CX3RDKOV5640.c ****     {
1390:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:UsbStart Err = 0x%x",status);
 3703              		.loc 1 1390 0
 3704 00bc 0400A0E3 		mov	r0, #4
 3705 00c0 04179FE5 		ldr	r1, .L263+16
 3706 00c4 08201BE5 		ldr	r2, [fp, #-8]
 3707 00c8 FEFFFFEB 		bl	CyU3PDebugPrint
1391:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3708              		.loc 1 1391 0
 3709 00cc 08001BE5 		ldr	r0, [fp, #-8]
 3710 00d0 FEFFFFEB 		bl	esUVCAppErrorHandler
 3711              	.L235:
1392:../CX3RDKOV5640.c ****     }
1393:../CX3RDKOV5640.c ****     /* The fast enumeration is the easiest way to setup a USB connection,
1394:../CX3RDKOV5640.c ****      * where all enumeration phase is handled by the library. Only the
1395:../CX3RDKOV5640.c ****      * class / vendor requests need to be handled by the application. */
1396:../CX3RDKOV5640.c ****     CyU3PUsbRegisterSetupCallback(esUVCUvcApplnUSBSetupCB, CyTrue);
 3712              		.loc 1 1396 0
 3713 00d4 F4069FE5 		ldr	r0, .L263+20
 3714 00d8 0110A0E3 		mov	r1, #1
 3715 00dc FEFFFFEB 		bl	CyU3PUsbRegisterSetupCallback
1397:../CX3RDKOV5640.c **** 
1398:../CX3RDKOV5640.c ****     /* Setup the callback to handle the USB events */
1399:../CX3RDKOV5640.c ****     CyU3PUsbRegisterEventCallback(esUVCUvcApplnUSBEventCB);
 3716              		.loc 1 1399 0
 3717 00e0 EC069FE5 		ldr	r0, .L263+24
 3718 00e4 FEFFFFEB 		bl	CyU3PUsbRegisterEventCallback
1400:../CX3RDKOV5640.c **** 
1401:../CX3RDKOV5640.c ****     /* Register a callback to handle LPM requests from the USB 3.0 host. */
1402:../CX3RDKOV5640.c ****     CyU3PUsbRegisterLPMRequestCallback (esUVCApplnLPMRqtCB);
 3719              		.loc 1 1402 0
 3720 00e8 E8069FE5 		ldr	r0, .L263+28
 3721 00ec FEFFFFEB 		bl	CyU3PUsbRegisterLPMRequestCallback
1403:../CX3RDKOV5640.c **** 
1404:../CX3RDKOV5640.c ****     /* Set the USB Enumeration descriptors */
1405:../CX3RDKOV5640.c **** 
1406:../CX3RDKOV5640.c ****     /* Super speed device descriptor. */
1407:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB30DeviceDscr);
 3722              		.loc 1 1407 0
 3723 00f0 0000A0E3 		mov	r0, #0
 3724 00f4 0010A0E3 		mov	r1, #0
 3725 00f8 DC269FE5 		ldr	r2, .L263+32
 3726 00fc FEFFFFEB 		bl	CyU3PUsbSetDesc
 3727 0100 08000BE5 		str	r0, [fp, #-8]
1408:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3728              		.loc 1 1408 0
 3729 0104 08301BE5 		ldr	r3, [fp, #-8]
 3730 0108 000053E3 		cmp	r3, #0
 3731 010c 0500000A 		beq	.L236
1409:../CX3RDKOV5640.c ****     {
1410:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_Device_Dscr Err = 0x%x", status);
 3732              		.loc 1 1410 0
 3733 0110 0400A0E3 		mov	r0, #4
 3734 0114 C4169FE5 		ldr	r1, .L263+36
 3735 0118 08201BE5 		ldr	r2, [fp, #-8]
 3736 011c FEFFFFEB 		bl	CyU3PDebugPrint
1411:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3737              		.loc 1 1411 0
 3738 0120 08001BE5 		ldr	r0, [fp, #-8]
 3739 0124 FEFFFFEB 		bl	esUVCAppErrorHandler
 3740              	.L236:
1412:../CX3RDKOV5640.c ****     }
1413:../CX3RDKOV5640.c **** 
1414:../CX3RDKOV5640.c ****     /* High speed device descriptor. */
1415:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB20DeviceDscr);
 3741              		.loc 1 1415 0
 3742 0128 0100A0E3 		mov	r0, #1
 3743 012c 0010A0E3 		mov	r1, #0
 3744 0130 AC269FE5 		ldr	r2, .L263+40
 3745 0134 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3746 0138 08000BE5 		str	r0, [fp, #-8]
1416:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3747              		.loc 1 1416 0
 3748 013c 08301BE5 		ldr	r3, [fp, #-8]
 3749 0140 000053E3 		cmp	r3, #0
 3750 0144 0500000A 		beq	.L237
1417:../CX3RDKOV5640.c ****     {
1418:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_Device_Dscr Err = 0x%x", status);
 3751              		.loc 1 1418 0
 3752 0148 0400A0E3 		mov	r0, #4
 3753 014c 94169FE5 		ldr	r1, .L263+44
 3754 0150 08201BE5 		ldr	r2, [fp, #-8]
 3755 0154 FEFFFFEB 		bl	CyU3PDebugPrint
1419:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3756              		.loc 1 1419 0
 3757 0158 08001BE5 		ldr	r0, [fp, #-8]
 3758 015c FEFFFFEB 		bl	esUVCAppErrorHandler
 3759              	.L237:
1420:../CX3RDKOV5640.c ****     }
1421:../CX3RDKOV5640.c **** 
1422:../CX3RDKOV5640.c ****     /* BOS descriptor */
1423:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_BOS_DESCR, 0, (uint8_t *)esUVCUSBBOSDscr);
 3760              		.loc 1 1423 0
 3761 0160 0700A0E3 		mov	r0, #7
 3762 0164 0010A0E3 		mov	r1, #0
 3763 0168 7C269FE5 		ldr	r2, .L263+48
 3764 016c FEFFFFEB 		bl	CyU3PUsbSetDesc
 3765 0170 08000BE5 		str	r0, [fp, #-8]
1424:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3766              		.loc 1 1424 0
 3767 0174 08301BE5 		ldr	r3, [fp, #-8]
 3768 0178 000053E3 		cmp	r3, #0
 3769 017c 0500000A 		beq	.L238
1425:../CX3RDKOV5640.c ****     {
1426:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_BOS_Dscr Err = 0x%x", status);
 3770              		.loc 1 1426 0
 3771 0180 0400A0E3 		mov	r0, #4
 3772 0184 64169FE5 		ldr	r1, .L263+52
 3773 0188 08201BE5 		ldr	r2, [fp, #-8]
 3774 018c FEFFFFEB 		bl	CyU3PDebugPrint
1427:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3775              		.loc 1 1427 0
 3776 0190 08001BE5 		ldr	r0, [fp, #-8]
 3777 0194 FEFFFFEB 		bl	esUVCAppErrorHandler
 3778              	.L238:
1428:../CX3RDKOV5640.c ****     }
1429:../CX3RDKOV5640.c **** 
1430:../CX3RDKOV5640.c ****     /* Device qualifier descriptor */
1431:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_DEVQUAL_DESCR, 0, (uint8_t *)esUVCUSBDeviceQualDscr);
 3779              		.loc 1 1431 0
 3780 0198 0200A0E3 		mov	r0, #2
 3781 019c 0010A0E3 		mov	r1, #0
 3782 01a0 4C269FE5 		ldr	r2, .L263+56
 3783 01a4 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3784 01a8 08000BE5 		str	r0, [fp, #-8]
1432:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3785              		.loc 1 1432 0
 3786 01ac 08301BE5 		ldr	r3, [fp, #-8]
 3787 01b0 000053E3 		cmp	r3, #0
 3788 01b4 0500000A 		beq	.L239
1433:../CX3RDKOV5640.c ****     {
1434:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_DEVQUAL_Dscr Err = 0x%x", status);
 3789              		.loc 1 1434 0
 3790 01b8 0400A0E3 		mov	r0, #4
 3791 01bc 34169FE5 		ldr	r1, .L263+60
 3792 01c0 08201BE5 		ldr	r2, [fp, #-8]
 3793 01c4 FEFFFFEB 		bl	CyU3PDebugPrint
1435:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3794              		.loc 1 1435 0
 3795 01c8 08001BE5 		ldr	r0, [fp, #-8]
 3796 01cc FEFFFFEB 		bl	esUVCAppErrorHandler
 3797              	.L239:
1436:../CX3RDKOV5640.c ****     }
1437:../CX3RDKOV5640.c **** 
1438:../CX3RDKOV5640.c ****     /* Super speed configuration descriptor */
1439:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBSSConfigDscr);
 3798              		.loc 1 1439 0
 3799 01d0 0600A0E3 		mov	r0, #6
 3800 01d4 0010A0E3 		mov	r1, #0
 3801 01d8 1C269FE5 		ldr	r2, .L263+64
 3802 01dc FEFFFFEB 		bl	CyU3PUsbSetDesc
 3803 01e0 08000BE5 		str	r0, [fp, #-8]
1440:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3804              		.loc 1 1440 0
 3805 01e4 08301BE5 		ldr	r3, [fp, #-8]
 3806 01e8 000053E3 		cmp	r3, #0
 3807 01ec 0500000A 		beq	.L240
1441:../CX3RDKOV5640.c ****     {
1442:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_CFG_Dscr Err = 0x%x", status);
 3808              		.loc 1 1442 0
 3809 01f0 0400A0E3 		mov	r0, #4
 3810 01f4 04169FE5 		ldr	r1, .L263+68
 3811 01f8 08201BE5 		ldr	r2, [fp, #-8]
 3812 01fc FEFFFFEB 		bl	CyU3PDebugPrint
1443:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3813              		.loc 1 1443 0
 3814 0200 08001BE5 		ldr	r0, [fp, #-8]
 3815 0204 FEFFFFEB 		bl	esUVCAppErrorHandler
 3816              	.L240:
1444:../CX3RDKOV5640.c ****     }
1445:../CX3RDKOV5640.c **** 
1446:../CX3RDKOV5640.c ****     /* High speed configuration descriptor */
1447:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBHSConfigDscr);
 3817              		.loc 1 1447 0
 3818 0208 0400A0E3 		mov	r0, #4
 3819 020c 0010A0E3 		mov	r1, #0
 3820 0210 EC259FE5 		ldr	r2, .L263+72
 3821 0214 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3822 0218 08000BE5 		str	r0, [fp, #-8]
1448:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3823              		.loc 1 1448 0
 3824 021c 08301BE5 		ldr	r3, [fp, #-8]
 3825 0220 000053E3 		cmp	r3, #0
 3826 0224 0500000A 		beq	.L241
1449:../CX3RDKOV5640.c ****     {
1450:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_CFG_Dscr Err = 0x%x", status);
 3827              		.loc 1 1450 0
 3828 0228 0400A0E3 		mov	r0, #4
 3829 022c D4159FE5 		ldr	r1, .L263+76
 3830 0230 08201BE5 		ldr	r2, [fp, #-8]
 3831 0234 FEFFFFEB 		bl	CyU3PDebugPrint
1451:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3832              		.loc 1 1451 0
 3833 0238 08001BE5 		ldr	r0, [fp, #-8]
 3834 023c FEFFFFEB 		bl	esUVCAppErrorHandler
 3835              	.L241:
1452:../CX3RDKOV5640.c ****     }
1453:../CX3RDKOV5640.c **** 
1454:../CX3RDKOV5640.c ****     /* Full speed configuration descriptor */
1455:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_FS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBFSConfigDscr);
 3836              		.loc 1 1455 0
 3837 0240 0300A0E3 		mov	r0, #3
 3838 0244 0010A0E3 		mov	r1, #0
 3839 0248 BC259FE5 		ldr	r2, .L263+80
 3840 024c FEFFFFEB 		bl	CyU3PUsbSetDesc
 3841 0250 08000BE5 		str	r0, [fp, #-8]
1456:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3842              		.loc 1 1456 0
 3843 0254 08301BE5 		ldr	r3, [fp, #-8]
 3844 0258 000053E3 		cmp	r3, #0
 3845 025c 0500000A 		beq	.L242
1457:../CX3RDKOV5640.c ****     {
1458:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_FS_CFG_Dscr Err = 0x%x", status);
 3846              		.loc 1 1458 0
 3847 0260 0400A0E3 		mov	r0, #4
 3848 0264 A4159FE5 		ldr	r1, .L263+84
 3849 0268 08201BE5 		ldr	r2, [fp, #-8]
 3850 026c FEFFFFEB 		bl	CyU3PDebugPrint
1459:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3851              		.loc 1 1459 0
 3852 0270 08001BE5 		ldr	r0, [fp, #-8]
 3853 0274 FEFFFFEB 		bl	esUVCAppErrorHandler
 3854              	.L242:
1460:../CX3RDKOV5640.c ****     }
1461:../CX3RDKOV5640.c **** 
1462:../CX3RDKOV5640.c ****     /* String descriptor 0 */
1463:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)esUVCUSBStringLangIDDscr);
 3855              		.loc 1 1463 0
 3856 0278 0500A0E3 		mov	r0, #5
 3857 027c 0010A0E3 		mov	r1, #0
 3858 0280 8C259FE5 		ldr	r2, .L263+88
 3859 0284 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3860 0288 08000BE5 		str	r0, [fp, #-8]
1464:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3861              		.loc 1 1464 0
 3862 028c 08301BE5 		ldr	r3, [fp, #-8]
 3863 0290 000053E3 		cmp	r3, #0
 3864 0294 0500000A 		beq	.L243
1465:../CX3RDKOV5640.c ****     {
1466:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr0 Err = 0x%x", status);
 3865              		.loc 1 1466 0
 3866 0298 0400A0E3 		mov	r0, #4
 3867 029c 74159FE5 		ldr	r1, .L263+92
 3868 02a0 08201BE5 		ldr	r2, [fp, #-8]
 3869 02a4 FEFFFFEB 		bl	CyU3PDebugPrint
1467:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3870              		.loc 1 1467 0
 3871 02a8 08001BE5 		ldr	r0, [fp, #-8]
 3872 02ac FEFFFFEB 		bl	esUVCAppErrorHandler
 3873              	.L243:
1468:../CX3RDKOV5640.c ****     }
1469:../CX3RDKOV5640.c **** 
1470:../CX3RDKOV5640.c ****     /* String descriptor 1 */
1471:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)esUVCUSBManufactureDscr);
 3874              		.loc 1 1471 0
 3875 02b0 0500A0E3 		mov	r0, #5
 3876 02b4 0110A0E3 		mov	r1, #1
 3877 02b8 5C259FE5 		ldr	r2, .L263+96
 3878 02bc FEFFFFEB 		bl	CyU3PUsbSetDesc
 3879 02c0 08000BE5 		str	r0, [fp, #-8]
1472:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3880              		.loc 1 1472 0
 3881 02c4 08301BE5 		ldr	r3, [fp, #-8]
 3882 02c8 000053E3 		cmp	r3, #0
 3883 02cc 0500000A 		beq	.L244
1473:../CX3RDKOV5640.c ****     {
1474:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr1 Err = 0x%x", status);
 3884              		.loc 1 1474 0
 3885 02d0 0400A0E3 		mov	r0, #4
 3886 02d4 44159FE5 		ldr	r1, .L263+100
 3887 02d8 08201BE5 		ldr	r2, [fp, #-8]
 3888 02dc FEFFFFEB 		bl	CyU3PDebugPrint
1475:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3889              		.loc 1 1475 0
 3890 02e0 08001BE5 		ldr	r0, [fp, #-8]
 3891 02e4 FEFFFFEB 		bl	esUVCAppErrorHandler
 3892              	.L244:
1476:../CX3RDKOV5640.c ****     }
1477:../CX3RDKOV5640.c **** 
1478:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1479:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)esUVCUSBProductDscr);
 3893              		.loc 1 1479 0
 3894 02e8 0500A0E3 		mov	r0, #5
 3895 02ec 0210A0E3 		mov	r1, #2
 3896 02f0 2C259FE5 		ldr	r2, .L263+104
 3897 02f4 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3898 02f8 08000BE5 		str	r0, [fp, #-8]
1480:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3899              		.loc 1 1480 0
 3900 02fc 08301BE5 		ldr	r3, [fp, #-8]
 3901 0300 000053E3 		cmp	r3, #0
 3902 0304 0500000A 		beq	.L245
1481:../CX3RDKOV5640.c ****     {
1482:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr2 Err = 0x%x", status);
 3903              		.loc 1 1482 0
 3904 0308 0400A0E3 		mov	r0, #4
 3905 030c 14159FE5 		ldr	r1, .L263+108
 3906 0310 08201BE5 		ldr	r2, [fp, #-8]
 3907 0314 FEFFFFEB 		bl	CyU3PDebugPrint
1483:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3908              		.loc 1 1483 0
 3909 0318 08001BE5 		ldr	r0, [fp, #-8]
 3910 031c FEFFFFEB 		bl	esUVCAppErrorHandler
 3911              	.L245:
1484:../CX3RDKOV5640.c ****     }
1485:../CX3RDKOV5640.c ****     /* String descriptor 3 */
1486:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 3, (uint8_t *)esUVCUSBConfigSSDscr);
 3912              		.loc 1 1486 0
 3913 0320 0500A0E3 		mov	r0, #5
 3914 0324 0310A0E3 		mov	r1, #3
 3915 0328 FC249FE5 		ldr	r2, .L263+112
 3916 032c FEFFFFEB 		bl	CyU3PUsbSetDesc
 3917 0330 08000BE5 		str	r0, [fp, #-8]
1487:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3918              		.loc 1 1487 0
 3919 0334 08301BE5 		ldr	r3, [fp, #-8]
 3920 0338 000053E3 		cmp	r3, #0
 3921 033c 0500000A 		beq	.L246
1488:../CX3RDKOV5640.c ****     {
1489:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr3 Err = 0x%x", status);
 3922              		.loc 1 1489 0
 3923 0340 0400A0E3 		mov	r0, #4
 3924 0344 E4149FE5 		ldr	r1, .L263+116
 3925 0348 08201BE5 		ldr	r2, [fp, #-8]
 3926 034c FEFFFFEB 		bl	CyU3PDebugPrint
1490:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3927              		.loc 1 1490 0
 3928 0350 08001BE5 		ldr	r0, [fp, #-8]
 3929 0354 FEFFFFEB 		bl	esUVCAppErrorHandler
 3930              	.L246:
1491:../CX3RDKOV5640.c ****     }
1492:../CX3RDKOV5640.c **** 
1493:../CX3RDKOV5640.c ****     /* String descriptor 4 */
1494:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 4, (uint8_t *)esUVCUSBConfigHSDscr);
 3931              		.loc 1 1494 0
 3932 0358 0500A0E3 		mov	r0, #5
 3933 035c 0410A0E3 		mov	r1, #4
 3934 0360 CC249FE5 		ldr	r2, .L263+120
 3935 0364 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3936 0368 08000BE5 		str	r0, [fp, #-8]
1495:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3937              		.loc 1 1495 0
 3938 036c 08301BE5 		ldr	r3, [fp, #-8]
 3939 0370 000053E3 		cmp	r3, #0
 3940 0374 0500000A 		beq	.L247
1496:../CX3RDKOV5640.c ****     {
1497:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr4 Err = 0x%x", status);
 3941              		.loc 1 1497 0
 3942 0378 0400A0E3 		mov	r0, #4
 3943 037c B4149FE5 		ldr	r1, .L263+124
 3944 0380 08201BE5 		ldr	r2, [fp, #-8]
 3945 0384 FEFFFFEB 		bl	CyU3PDebugPrint
1498:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3946              		.loc 1 1498 0
 3947 0388 08001BE5 		ldr	r0, [fp, #-8]
 3948 038c FEFFFFEB 		bl	esUVCAppErrorHandler
 3949              	.L247:
1499:../CX3RDKOV5640.c ****     }
1500:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1501:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 5, (uint8_t *)esUVCUSBConfigFSDscr);
 3950              		.loc 1 1501 0
 3951 0390 0500A0E3 		mov	r0, #5
 3952 0394 0510A0E3 		mov	r1, #5
 3953 0398 9C249FE5 		ldr	r2, .L263+128
 3954 039c FEFFFFEB 		bl	CyU3PUsbSetDesc
 3955 03a0 08000BE5 		str	r0, [fp, #-8]
1502:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3956              		.loc 1 1502 0
 3957 03a4 08301BE5 		ldr	r3, [fp, #-8]
 3958 03a8 000053E3 		cmp	r3, #0
 3959 03ac 0500000A 		beq	.L248
1503:../CX3RDKOV5640.c ****     {
1504:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr5 Err = 0x%x", status);
 3960              		.loc 1 1504 0
 3961 03b0 0400A0E3 		mov	r0, #4
 3962 03b4 84149FE5 		ldr	r1, .L263+132
 3963 03b8 08201BE5 		ldr	r2, [fp, #-8]
 3964 03bc FEFFFFEB 		bl	CyU3PDebugPrint
1505:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3965              		.loc 1 1505 0
 3966 03c0 08001BE5 		ldr	r0, [fp, #-8]
 3967 03c4 FEFFFFEB 		bl	esUVCAppErrorHandler
 3968              	.L248:
1506:../CX3RDKOV5640.c ****     }
1507:../CX3RDKOV5640.c **** 
1508:../CX3RDKOV5640.c ****     CyU3PUsbVBattEnable (CyTrue);
 3969              		.loc 1 1508 0
 3970 03c8 0100A0E3 		mov	r0, #1
 3971 03cc FEFFFFEB 		bl	CyU3PUsbVBattEnable
1509:../CX3RDKOV5640.c ****     CyU3PUsbControlVBusDetect (CyFalse, CyTrue);
 3972              		.loc 1 1509 0
 3973 03d0 0000A0E3 		mov	r0, #0
 3974 03d4 0110A0E3 		mov	r1, #1
 3975 03d8 FEFFFFEB 		bl	CyU3PUsbControlVBusDetect
1510:../CX3RDKOV5640.c **** 
1511:../CX3RDKOV5640.c ****     //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings 
1512:../CX3RDKOV5640.c ****     /* Setup Image Sensor */
1513:../CX3RDKOV5640.c **** 	CAMERA_Base_Config();
 3976              		.loc 1 1513 0
 3977 03dc FEFFFFEB 		bl	CAMERA_Base_Config
1514:../CX3RDKOV5640.c **** 	 //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings fo
1515:../CX3RDKOV5640.c **** 	CAMERA_Auto_Focus_Config();
 3978              		.loc 1 1515 0
 3979 03e0 FEFFFFEB 		bl	CAMERA_Auto_Focus_Config
1516:../CX3RDKOV5640.c **** 	//TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
1517:../CX3RDKOV5640.c **** 	//[TBD] esCamera_Power_Down();
1518:../CX3RDKOV5640.c **** 
1519:../CX3RDKOV5640.c ****     /* Connect the USB pins and enable super speed operation */
1520:../CX3RDKOV5640.c ****     status = CyU3PConnectState(CyTrue, CyTrue);
 3980              		.loc 1 1520 0
 3981 03e4 0100A0E3 		mov	r0, #1
 3982 03e8 0110A0E3 		mov	r1, #1
 3983 03ec FEFFFFEB 		bl	CyU3PConnectState
 3984 03f0 08000BE5 		str	r0, [fp, #-8]
1521:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3985              		.loc 1 1521 0
 3986 03f4 08301BE5 		ldr	r3, [fp, #-8]
 3987 03f8 000053E3 		cmp	r3, #0
 3988 03fc 0500000A 		beq	.L249
1522:../CX3RDKOV5640.c ****     {
1523:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:ConnectState Err = 0x%x", status);
 3989              		.loc 1 1523 0
 3990 0400 0400A0E3 		mov	r0, #4
 3991 0404 38149FE5 		ldr	r1, .L263+136
 3992 0408 08201BE5 		ldr	r2, [fp, #-8]
 3993 040c FEFFFFEB 		bl	CyU3PDebugPrint
1524:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3994              		.loc 1 1524 0
 3995 0410 08001BE5 		ldr	r0, [fp, #-8]
 3996 0414 FEFFFFEB 		bl	esUVCAppErrorHandler
 3997              	.L249:
1525:../CX3RDKOV5640.c ****     }
1526:../CX3RDKOV5640.c **** 
1527:../CX3RDKOV5640.c ****     /* Since the status interrupt endpoint is not used in this application,
1528:../CX3RDKOV5640.c ****      * just enable the EP in the beginning. */
1529:../CX3RDKOV5640.c ****     /* Control status interrupt endpoint configuration */
1530:../CX3RDKOV5640.c ****     endPointConfig.enable = 1;
 3998              		.loc 1 1530 0
 3999 0418 0130A0E3 		mov	r3, #1
 4000 041c 14300BE5 		str	r3, [fp, #-20]
1531:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_INTR;
 4001              		.loc 1 1531 0
 4002 0420 0330A0E3 		mov	r3, #3
 4003 0424 10304BE5 		strb	r3, [fp, #-16]
1532:../CX3RDKOV5640.c ****     endPointConfig.pcktSize = 64;
 4004              		.loc 1 1532 0
 4005 0428 4030A0E3 		mov	r3, #64
 4006 042c BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1533:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 1;
 4007              		.loc 1 1533 0
 4008 0430 0130A0E3 		mov	r3, #1
 4009 0434 09304BE5 		strb	r3, [fp, #-9]
1534:../CX3RDKOV5640.c ****     endPointConfig.burstLen = 1;
 4010              		.loc 1 1534 0
 4011 0438 0130A0E3 		mov	r3, #1
 4012 043c 0A304BE5 		strb	r3, [fp, #-10]
1535:../CX3RDKOV5640.c **** 
1536:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_CONTROL_STATUS, &endPointConfig);
 4013              		.loc 1 1536 0
 4014 0440 14304BE2 		sub	r3, fp, #20
 4015 0444 8200A0E3 		mov	r0, #130
 4016 0448 0310A0E1 		mov	r1, r3
 4017 044c FEFFFFEB 		bl	CyU3PSetEpConfig
 4018 0450 08000BE5 		str	r0, [fp, #-8]
1537:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4019              		.loc 1 1537 0
 4020 0454 08301BE5 		ldr	r3, [fp, #-8]
 4021 0458 000053E3 		cmp	r3, #0
 4022 045c 0500000A 		beq	.L250
1538:../CX3RDKOV5640.c ****     {
1539:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x", status);
 4023              		.loc 1 1539 0
 4024 0460 0400A0E3 		mov	r0, #4
 4025 0464 DC139FE5 		ldr	r1, .L263+140
 4026 0468 08201BE5 		ldr	r2, [fp, #-8]
 4027 046c FEFFFFEB 		bl	CyU3PDebugPrint
1540:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4028              		.loc 1 1540 0
 4029 0470 08001BE5 		ldr	r0, [fp, #-8]
 4030 0474 FEFFFFEB 		bl	esUVCAppErrorHandler
 4031              	.L250:
1541:../CX3RDKOV5640.c ****     }
1542:../CX3RDKOV5640.c **** 
1543:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_CONTROL_STATUS);
 4032              		.loc 1 1543 0
 4033 0478 8200A0E3 		mov	r0, #130
 4034 047c FEFFFFEB 		bl	CyU3PUsbFlushEp
1544:../CX3RDKOV5640.c **** 
1545:../CX3RDKOV5640.c ****     /* Setup the Bulk endpoint used for Video Streaming */
1546:../CX3RDKOV5640.c ****     endPointConfig.enable = CyTrue;
 4035              		.loc 1 1546 0
 4036 0480 0130A0E3 		mov	r3, #1
 4037 0484 14300BE5 		str	r3, [fp, #-20]
1547:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_BULK;
 4038              		.loc 1 1547 0
 4039 0488 0230A0E3 		mov	r3, #2
 4040 048c 10304BE5 		strb	r3, [fp, #-16]
1548:../CX3RDKOV5640.c **** 
1549:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 0;
 4041              		.loc 1 1549 0
 4042 0490 0030A0E3 		mov	r3, #0
 4043 0494 09304BE5 		strb	r3, [fp, #-9]
1550:../CX3RDKOV5640.c ****     endPointConfig.streams = 0;
 4044              		.loc 1 1550 0
 4045 0498 0030A0E3 		mov	r3, #0
 4046 049c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
1551:../CX3RDKOV5640.c **** 
1552:../CX3RDKOV5640.c ****     CyU3PThreadSleep(1000);
 4047              		.loc 1 1552 0
 4048 04a0 FA0FA0E3 		mov	r0, #1000
 4049 04a4 FEFFFFEB 		bl	_tx_thread_sleep
1553:../CX3RDKOV5640.c **** 
1554:../CX3RDKOV5640.c ****     switch(CyU3PUsbGetSpeed())
 4050              		.loc 1 1554 0
 4051 04a8 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 4052 04ac 0030A0E1 		mov	r3, r0
 4053 04b0 010053E3 		cmp	r3, #1
 4054 04b4 0F00000A 		beq	.L252
 4055 04b8 020053E3 		cmp	r3, #2
 4056 04bc 1200001A 		bne	.L262
1555:../CX3RDKOV5640.c ****     {
1556:../CX3RDKOV5640.c ****         case CY_U3P_HIGH_SPEED:
1557:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x200;
 4057              		.loc 1 1557 0
 4058 04c0 023CA0E3 		mov	r3, #512
 4059 04c4 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1558:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4060              		.loc 1 1558 0
 4061 04c8 0130A0E3 		mov	r3, #1
 4062 04cc 0A304BE5 		strb	r3, [fp, #-10]
1559:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_HS_STREAM_BUF_SIZE;
 4063              		.loc 1 1559 0
 4064 04d0 74339FE5 		ldr	r3, .L263+144
 4065 04d4 032BA0E3 		mov	r2, #3072
 4066 04d8 B020C3E1 		strh	r2, [r3]	@ movhi
1560:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_HS_DATA_BUF_SIZE;
 4067              		.loc 1 1560 0
 4068 04dc 6C339FE5 		ldr	r3, .L263+148
 4069 04e0 BF2EA0E3 		mov	r2, #3056
 4070 04e4 B020C3E1 		strh	r2, [r3]	@ movhi
1561:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_HS_STREAM_BUF_COUNT;
 4071              		.loc 1 1561 0
 4072 04e8 64339FE5 		ldr	r3, .L263+152
 4073 04ec 0820A0E3 		mov	r2, #8
 4074 04f0 0020C3E5 		strb	r2, [r3]
1562:../CX3RDKOV5640.c ****             break;
 4075              		.loc 1 1562 0
 4076 04f4 120000EA 		b	.L254
 4077              	.L252:
1563:../CX3RDKOV5640.c **** 
1564:../CX3RDKOV5640.c ****         case CY_U3P_FULL_SPEED:
1565:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x40;
 4078              		.loc 1 1565 0
 4079 04f8 4030A0E3 		mov	r3, #64
 4080 04fc BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1566:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4081              		.loc 1 1566 0
 4082 0500 0130A0E3 		mov	r3, #1
 4083 0504 0A304BE5 		strb	r3, [fp, #-10]
1567:../CX3RDKOV5640.c ****             break;
 4084              		.loc 1 1567 0
 4085 0508 0D0000EA 		b	.L254
 4086              	.L262:
1568:../CX3RDKOV5640.c **** 
1569:../CX3RDKOV5640.c ****         case CY_U3P_SUPER_SPEED:
1570:../CX3RDKOV5640.c ****         default:
1571:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = ES_UVC_EP_BULK_VIDEO_PKT_SIZE;
 4087              		.loc 1 1571 0
 4088 050c 013BA0E3 		mov	r3, #1024
 4089 0510 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1572:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 16;
 4090              		.loc 1 1572 0
 4091 0514 1030A0E3 		mov	r3, #16
 4092 0518 0A304BE5 		strb	r3, [fp, #-10]
1573:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_SS_STREAM_BUF_SIZE;
 4093              		.loc 1 1573 0
 4094 051c 28339FE5 		ldr	r3, .L263+144
 4095 0520 062AA0E3 		mov	r2, #24576
 4096 0524 B020C3E1 		strh	r2, [r3]	@ movhi
1574:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_SS_DATA_BUF_SIZE;
 4097              		.loc 1 1574 0
 4098 0528 20339FE5 		ldr	r3, .L263+148
 4099 052c 24239FE5 		ldr	r2, .L263+156
 4100 0530 B020C3E1 		strh	r2, [r3]	@ movhi
1575:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_SS_STREAM_BUF_COUNT;
 4101              		.loc 1 1575 0
 4102 0534 18339FE5 		ldr	r3, .L263+152
 4103 0538 0420A0E3 		mov	r2, #4
 4104 053c 0020C3E5 		strb	r2, [r3]
1576:../CX3RDKOV5640.c ****             break;
 4105              		.loc 1 1576 0
 4106 0540 0000A0E1 		mov	r0, r0	@ nop
 4107              	.L254:
1577:../CX3RDKOV5640.c ****     }
1578:../CX3RDKOV5640.c **** 
1579:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_BULK_VIDEO, &endPointConfig);
 4108              		.loc 1 1579 0
 4109 0544 14304BE2 		sub	r3, fp, #20
 4110 0548 8300A0E3 		mov	r0, #131
 4111 054c 0310A0E1 		mov	r1, r3
 4112 0550 FEFFFFEB 		bl	CyU3PSetEpConfig
 4113 0554 08000BE5 		str	r0, [fp, #-8]
1580:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4114              		.loc 1 1580 0
 4115 0558 08301BE5 		ldr	r3, [fp, #-8]
 4116 055c 000053E3 		cmp	r3, #0
 4117 0560 0500000A 		beq	.L255
1581:../CX3RDKOV5640.c ****     {
1582:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig BulkEp Err = 0x%x", status);
 4118              		.loc 1 1582 0
 4119 0564 0400A0E3 		mov	r0, #4
 4120 0568 EC129FE5 		ldr	r1, .L263+160
 4121 056c 08201BE5 		ldr	r2, [fp, #-8]
 4122 0570 FEFFFFEB 		bl	CyU3PDebugPrint
1583:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4123              		.loc 1 1583 0
 4124 0574 08001BE5 		ldr	r0, [fp, #-8]
 4125 0578 FEFFFFEB 		bl	esUVCAppErrorHandler
 4126              	.L255:
1584:../CX3RDKOV5640.c ****     }
1585:../CX3RDKOV5640.c **** 
1586:../CX3RDKOV5640.c ****     CyU3PUsbEPSetBurstMode (ES_UVC_EP_BULK_VIDEO, CyTrue);
 4127              		.loc 1 1586 0
 4128 057c 8300A0E3 		mov	r0, #131
 4129 0580 0110A0E3 		mov	r1, #1
 4130 0584 FEFFFFEB 		bl	CyU3PUsbEPSetBurstMode
1587:../CX3RDKOV5640.c **** 
1588:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
1589:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 4131              		.loc 1 1589 0
 4132 0588 8300A0E3 		mov	r0, #131
 4133 058c FEFFFFEB 		bl	CyU3PUsbFlushEp
1590:../CX3RDKOV5640.c **** 
1591:../CX3RDKOV5640.c ****     /* Create a DMA Manual OUT channel for streaming data */
1592:../CX3RDKOV5640.c ****     /* Video streaming Channel is not active till a stream request is received */
1593:../CX3RDKOV5640.c ****     dmaCfg.size                 = ES_UVC_STREAM_BUF_SIZE;
 4134              		.loc 1 1593 0
 4135 0590 B4329FE5 		ldr	r3, .L263+144
 4136 0594 B030D3E1 		ldrh	r3, [r3]
 4137 0598 BC334BE1 		strh	r3, [fp, #-60]	@ movhi
1594:../CX3RDKOV5640.c ****     dmaCfg.count                = ES_UVC_STREAM_BUF_COUNT;
 4138              		.loc 1 1594 0
 4139 059c B0329FE5 		ldr	r3, .L263+152
 4140 05a0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4141 05a4 BA334BE1 		strh	r3, [fp, #-58]	@ movhi
1595:../CX3RDKOV5640.c ****     dmaCfg.validSckCount        = 2;
 4142              		.loc 1 1595 0
 4143 05a8 0230A0E3 		mov	r3, #2
 4144 05ac B8334BE1 		strh	r3, [fp, #-56]	@ movhi
1596:../CX3RDKOV5640.c **** 
1597:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[0]         = ES_UVC_PRODUCER_PPORT_SOCKET_0;
 4145              		.loc 1 1597 0
 4146 05b0 013CA0E3 		mov	r3, #256
 4147 05b4 B6334BE1 		strh	r3, [fp, #-54]	@ movhi
1598:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[1]         = ES_UVC_PRODUCER_PPORT_SOCKET_1;
 4148              		.loc 1 1598 0
 4149 05b8 A0329FE5 		ldr	r3, .L263+164
 4150 05bc B4334BE1 		strh	r3, [fp, #-52]	@ movhi
1599:../CX3RDKOV5640.c **** 
1600:../CX3RDKOV5640.c ****     dmaCfg.consSckId[0]         = ES_UVC_EP_VIDEO_CONS_SOCKET;
 4151              		.loc 1 1600 0
 4152 05c0 9C329FE5 		ldr	r3, .L263+168
 4153 05c4 BE324BE1 		strh	r3, [fp, #-46]	@ movhi
1601:../CX3RDKOV5640.c ****     dmaCfg.dmaMode              = CY_U3P_DMA_MODE_BYTE;
 4154              		.loc 1 1601 0
 4155 05c8 0030A0E3 		mov	r3, #0
 4156 05cc 1E304BE5 		strb	r3, [fp, #-30]
1602:../CX3RDKOV5640.c ****     dmaCfg.notification         = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
 4157              		.loc 1 1602 0
 4158 05d0 1830A0E3 		mov	r3, #24
 4159 05d4 1C300BE5 		str	r3, [fp, #-28]
1603:../CX3RDKOV5640.c ****     dmaCfg.cb                   = esUVCUvcAppDmaCallback;
 4160              		.loc 1 1603 0
 4161 05d8 88329FE5 		ldr	r3, .L263+172
 4162 05dc 18300BE5 		str	r3, [fp, #-24]
1604:../CX3RDKOV5640.c ****     dmaCfg.prodHeader           = ES_UVC_PROD_HEADER;
 4163              		.loc 1 1604 0
 4164 05e0 0C30A0E3 		mov	r3, #12
 4165 05e4 B4324BE1 		strh	r3, [fp, #-36]	@ movhi
1605:../CX3RDKOV5640.c ****     dmaCfg.prodFooter           = ES_UVC_PROD_FOOTER;
 4166              		.loc 1 1605 0
 4167 05e8 0430A0E3 		mov	r3, #4
 4168 05ec B2324BE1 		strh	r3, [fp, #-34]	@ movhi
1606:../CX3RDKOV5640.c ****     dmaCfg.consHeader           = 0;
 4169              		.loc 1 1606 0
 4170 05f0 0030A0E3 		mov	r3, #0
 4171 05f4 B0324BE1 		strh	r3, [fp, #-32]	@ movhi
1607:../CX3RDKOV5640.c ****     dmaCfg.prodAvailCount       = 0;
 4172              		.loc 1 1607 0
 4173 05f8 0030A0E3 		mov	r3, #0
 4174 05fc B6324BE1 		strh	r3, [fp, #-38]	@ movhi
1608:../CX3RDKOV5640.c **** 
1609:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE ,
 4175              		.loc 1 1609 0
 4176 0600 3C304BE2 		sub	r3, fp, #60
 4177 0604 60029FE5 		ldr	r0, .L263+176
 4178 0608 0710A0E3 		mov	r1, #7
 4179 060c 0320A0E1 		mov	r2, r3
 4180 0610 FEFFFFEB 		bl	CyU3PDmaMultiChannelCreate
 4181 0614 08000BE5 		str	r0, [fp, #-8]
1610:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4182              		.loc 1 1610 0
 4183 0618 08301BE5 		ldr	r3, [fp, #-8]
 4184 061c 000053E3 		cmp	r3, #0
 4185 0620 0300000A 		beq	.L256
1611:../CX3RDKOV5640.c ****     {
1612:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:DmaMultiChannelCreate Err = 0x%x", status);
 4186              		.loc 1 1612 0
 4187 0624 0400A0E3 		mov	r0, #4
 4188 0628 40129FE5 		ldr	r1, .L263+180
 4189 062c 08201BE5 		ldr	r2, [fp, #-8]
 4190 0630 FEFFFFEB 		bl	CyU3PDebugPrint
 4191              	.L256:
1613:../CX3RDKOV5640.c ****     }
1614:../CX3RDKOV5640.c ****     CyU3PThreadSleep(100);
 4192              		.loc 1 1614 0
 4193 0634 6400A0E3 		mov	r0, #100
 4194 0638 FEFFFFEB 		bl	_tx_thread_sleep
1615:../CX3RDKOV5640.c **** 
1616:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set
1617:../CX3RDKOV5640.c ****        DSCR_SIZE field in DSCR memory */
1618:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);
 4195              		.loc 1 1618 0
 4196 063c 28029FE5 		ldr	r0, .L263+176
 4197 0640 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 4198 0644 08000BE5 		str	r0, [fp, #-8]
1619:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4199              		.loc 1 1619 0
 4200 0648 08301BE5 		ldr	r3, [fp, #-8]
 4201 064c 000053E3 		cmp	r3, #0
 4202 0650 0300000A 		beq	.L257
1620:../CX3RDKOV5640.c ****     {
1621:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAppInit:MultiChannelReset Err = 0x%x", status);
 4203              		.loc 1 1621 0
 4204 0654 0400A0E3 		mov	r0, #4
 4205 0658 14129FE5 		ldr	r1, .L263+184
 4206 065c 08201BE5 		ldr	r2, [fp, #-8]
 4207 0660 FEFFFFEB 		bl	CyU3PDebugPrint
 4208              	.L257:
1622:../CX3RDKOV5640.c ****     }
1623:../CX3RDKOV5640.c **** 
1624:../CX3RDKOV5640.c ****     /* Configure the Fixed Function GPIF on the CX3 to use a 16 bit bus, and
1625:../CX3RDKOV5640.c ****      * a DMA Buffer of size CX3_UVC_DATA_BUF_SIZE
1626:../CX3RDKOV5640.c ****      */
1627:../CX3RDKOV5640.c ****     status = CyU3PMipicsiGpifLoad(CY_U3P_MIPICSI_BUS_16, ES_UVC_DATA_BUF_SIZE);
 4209              		.loc 1 1627 0
 4210 0664 E4319FE5 		ldr	r3, .L263+148
 4211 0668 B030D3E1 		ldrh	r3, [r3]
 4212 066c 0100A0E3 		mov	r0, #1
 4213 0670 0310A0E1 		mov	r1, r3
 4214 0674 FEFFFFEB 		bl	CyU3PMipicsiGpifLoad
 4215 0678 08000BE5 		str	r0, [fp, #-8]
1628:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4216              		.loc 1 1628 0
 4217 067c 08301BE5 		ldr	r3, [fp, #-8]
 4218 0680 000053E3 		cmp	r3, #0
 4219 0684 0500000A 		beq	.L258
1629:../CX3RDKOV5640.c ****     {
1630:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiGpifLoad Err = 0x%x", status);
 4220              		.loc 1 1630 0
 4221 0688 0400A0E3 		mov	r0, #4
 4222 068c E4119FE5 		ldr	r1, .L263+188
 4223 0690 08201BE5 		ldr	r2, [fp, #-8]
 4224 0694 FEFFFFEB 		bl	CyU3PDebugPrint
1631:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4225              		.loc 1 1631 0
 4226 0698 08001BE5 		ldr	r0, [fp, #-8]
 4227 069c FEFFFFEB 		bl	esUVCAppErrorHandler
 4228              	.L258:
1632:../CX3RDKOV5640.c ****     }
1633:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4229              		.loc 1 1633 0
 4230 06a0 3200A0E3 		mov	r0, #50
 4231 06a4 FEFFFFEB 		bl	_tx_thread_sleep
1634:../CX3RDKOV5640.c **** 
1635:../CX3RDKOV5640.c ****     CyU3PGpifRegisterCallback(esUVCGpifCB);
 4232              		.loc 1 1635 0
 4233 06a8 CC019FE5 		ldr	r0, .L263+192
 4234 06ac FEFFFFEB 		bl	CyU3PGpifRegisterCallback
1636:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4235              		.loc 1 1636 0
 4236 06b0 3200A0E3 		mov	r0, #50
 4237 06b4 FEFFFFEB 		bl	_tx_thread_sleep
1637:../CX3RDKOV5640.c **** 
1638:../CX3RDKOV5640.c ****     /* Start the state machine. */
1639:../CX3RDKOV5640.c ****     status = CyU3PGpifSMStart (CX3_START_SCK0, ALPHA_CX3_START_SCK0);
 4238              		.loc 1 1639 0
 4239 06b8 0000A0E3 		mov	r0, #0
 4240 06bc 0010A0E3 		mov	r1, #0
 4241 06c0 FEFFFFEB 		bl	CyU3PGpifSMStart
 4242 06c4 08000BE5 		str	r0, [fp, #-8]
1640:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4243              		.loc 1 1640 0
 4244 06c8 08301BE5 		ldr	r3, [fp, #-8]
 4245 06cc 000053E3 		cmp	r3, #0
 4246 06d0 0500000A 		beq	.L259
1641:../CX3RDKOV5640.c ****     {
1642:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GpifSMStart Err = 0x%x", status);
 4247              		.loc 1 1642 0
 4248 06d4 0400A0E3 		mov	r0, #4
 4249 06d8 A0119FE5 		ldr	r1, .L263+196
 4250 06dc 08201BE5 		ldr	r2, [fp, #-8]
 4251 06e0 FEFFFFEB 		bl	CyU3PDebugPrint
1643:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4252              		.loc 1 1643 0
 4253 06e4 08001BE5 		ldr	r0, [fp, #-8]
 4254 06e8 FEFFFFEB 		bl	esUVCAppErrorHandler
 4255              	.L259:
1644:../CX3RDKOV5640.c ****     }
1645:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4256              		.loc 1 1645 0
 4257 06ec 3200A0E3 		mov	r0, #50
 4258 06f0 FEFFFFEB 		bl	_tx_thread_sleep
1646:../CX3RDKOV5640.c **** 
1647:../CX3RDKOV5640.c ****     /* Pause the GPIF*/
1648:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 4259              		.loc 1 1648 0
 4260 06f4 0100A0E3 		mov	r0, #1
 4261 06f8 FEFFFFEB 		bl	CyU3PGpifSMControl
1649:../CX3RDKOV5640.c **** 
1650:../CX3RDKOV5640.c ****     /* Initialize the MIPI block */
1651:../CX3RDKOV5640.c ****     status =  CyU3PMipicsiInit();
 4262              		.loc 1 1651 0
 4263 06fc FEFFFFEB 		bl	CyU3PMipicsiInit
 4264 0700 08000BE5 		str	r0, [fp, #-8]
1652:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4265              		.loc 1 1652 0
 4266 0704 08301BE5 		ldr	r3, [fp, #-8]
 4267 0708 000053E3 		cmp	r3, #0
 4268 070c 0500000A 		beq	.L260
1653:../CX3RDKOV5640.c ****     {
1654:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiInit Err = 0x%x", status);
 4269              		.loc 1 1654 0
 4270 0710 0400A0E3 		mov	r0, #4
 4271 0714 68119FE5 		ldr	r1, .L263+200
 4272 0718 08201BE5 		ldr	r2, [fp, #-8]
 4273 071c FEFFFFEB 		bl	CyU3PDebugPrint
1655:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4274              		.loc 1 1655 0
 4275 0720 08001BE5 		ldr	r0, [fp, #-8]
 4276 0724 FEFFFFEB 		bl	esUVCAppErrorHandler
 4277              	.L260:
1656:../CX3RDKOV5640.c ****     }
1657:../CX3RDKOV5640.c **** 
1658:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSetIntfParams(&cfgUvcVgaNoMclk, CyFalse);
 4278              		.loc 1 1658 0
 4279 0728 58019FE5 		ldr	r0, .L263+204
 4280 072c 0010A0E3 		mov	r1, #0
 4281 0730 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 4282 0734 08000BE5 		str	r0, [fp, #-8]
1659:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4283              		.loc 1 1659 0
 4284 0738 08301BE5 		ldr	r3, [fp, #-8]
 4285 073c 000053E3 		cmp	r3, #0
 4286 0740 0500000A 		beq	.L261
1660:../CX3RDKOV5640.c ****     {
1661:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiSetIntfParams Err = 0x%x",status);
 4287              		.loc 1 1661 0
 4288 0744 0400A0E3 		mov	r0, #4
 4289 0748 3C119FE5 		ldr	r1, .L263+208
 4290 074c 08201BE5 		ldr	r2, [fp, #-8]
 4291 0750 FEFFFFEB 		bl	CyU3PDebugPrint
1662:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4292              		.loc 1 1662 0
 4293 0754 08001BE5 		ldr	r0, [fp, #-8]
 4294 0758 FEFFFFEB 		bl	esUVCAppErrorHandler
 4295              	.L261:
1663:../CX3RDKOV5640.c ****     }
1664:../CX3RDKOV5640.c **** 
1665:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1666:../CX3RDKOV5640.c ****     CyU3PTimerCreate (&UvcTimer, UvcAppProgressTimer, 0x00, TIMER_PERIOD, 0, CYU3P_NO_ACTIVATE);
 4296              		.loc 1 1666 0
 4297 075c 7D3FA0E3 		mov	r3, #500
 4298 0760 00308DE5 		str	r3, [sp]
 4299 0764 0030A0E3 		mov	r3, #0
 4300 0768 04308DE5 		str	r3, [sp, #4]
 4301 076c 0030A0E3 		mov	r3, #0
 4302 0770 08308DE5 		str	r3, [sp, #8]
 4303 0774 2C30A0E3 		mov	r3, #44
 4304 0778 0C308DE5 		str	r3, [sp, #12]
 4305 077c 0C019FE5 		ldr	r0, .L263+212
 4306 0780 0010A0E3 		mov	r1, #0
 4307 0784 08219FE5 		ldr	r2, .L263+216
 4308 0788 0030A0E3 		mov	r3, #0
 4309 078c FEFFFFEB 		bl	_txe_timer_create
1667:../CX3RDKOV5640.c **** #endif
1668:../CX3RDKOV5640.c **** 
1669:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rFirmware Version: %d.%d.%d.%d",MajorVersion,MinorVersion,SubVersion,Su
 4310              		.loc 1 1669 0
 4311 0790 8330A0E3 		mov	r3, #131
 4312 0794 00308DE5 		str	r3, [sp]
 4313 0798 4D3FA0E3 		mov	r3, #308
 4314 079c 04308DE5 		str	r3, [sp, #4]
 4315 07a0 0400A0E3 		mov	r0, #4
 4316 07a4 EC109FE5 		ldr	r1, .L263+220
 4317 07a8 0120A0E3 		mov	r2, #1
 4318 07ac 0330A0E3 		mov	r3, #3
 4319 07b0 FEFFFFEB 		bl	CyU3PDebugPrint
1670:../CX3RDKOV5640.c **** }
 4320              		.loc 1 1670 0
 4321 07b4 04D04BE2 		sub	sp, fp, #4
 4322              		@ sp needed
 4323 07b8 0088BDE8 		ldmfd	sp!, {fp, pc}
 4324              	.L264:
 4325              		.align	2
 4326              	.L263:
 4327 07bc BC030000 		.word	.LC28
 4328 07c0 D0030000 		.word	.LC29
 4329 07c4 F0030000 		.word	.LC30
 4330 07c8 10040000 		.word	.LC31
 4331 07cc 30040000 		.word	.LC32
 4332 07d0 00000000 		.word	esUVCUvcApplnUSBSetupCB
 4333 07d4 00000000 		.word	esUVCUvcApplnUSBEventCB
 4334 07d8 00000000 		.word	esUVCApplnLPMRqtCB
 4335 07dc 00000000 		.word	esUVCUSB30DeviceDscr
 4336 07e0 50040000 		.word	.LC33
 4337 07e4 00000000 		.word	esUVCUSB20DeviceDscr
 4338 07e8 78040000 		.word	.LC34
 4339 07ec 00000000 		.word	esUVCUSBBOSDscr
 4340 07f0 A0040000 		.word	.LC35
 4341 07f4 00000000 		.word	esUVCUSBDeviceQualDscr
 4342 07f8 C4040000 		.word	.LC36
 4343 07fc 00000000 		.word	esUVCUSBSSConfigDscr
 4344 0800 EC040000 		.word	.LC37
 4345 0804 00000000 		.word	esUVCUSBHSConfigDscr
 4346 0808 14050000 		.word	.LC38
 4347 080c 00000000 		.word	esUVCUSBFSConfigDscr
 4348 0810 3C050000 		.word	.LC39
 4349 0814 00000000 		.word	esUVCUSBStringLangIDDscr
 4350 0818 64050000 		.word	.LC40
 4351 081c 00000000 		.word	esUVCUSBManufactureDscr
 4352 0820 8C050000 		.word	.LC41
 4353 0824 00000000 		.word	esUVCUSBProductDscr
 4354 0828 B4050000 		.word	.LC42
 4355 082c 00000000 		.word	esUVCUSBConfigSSDscr
 4356 0830 DC050000 		.word	.LC43
 4357 0834 00000000 		.word	esUVCUSBConfigHSDscr
 4358 0838 04060000 		.word	.LC44
 4359 083c 00000000 		.word	esUVCUSBConfigFSDscr
 4360 0840 2C060000 		.word	.LC45
 4361 0844 54060000 		.word	.LC46
 4362 0848 78060000 		.word	.LC47
 4363 084c 00000000 		.word	ES_UVC_STREAM_BUF_SIZE
 4364 0850 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 4365 0854 00000000 		.word	ES_UVC_STREAM_BUF_COUNT
 4366 0858 F05F0000 		.word	24560
 4367 085c A8060000 		.word	.LC48
 4368 0860 01010000 		.word	257
 4369 0864 03030000 		.word	771
 4370 0868 00000000 		.word	esUVCUvcAppDmaCallback
 4371 086c 00000000 		.word	glChHandleUVCStream
 4372 0870 D8060000 		.word	.LC49
 4373 0874 04070000 		.word	.LC50
 4374 0878 2C070000 		.word	.LC51
 4375 087c 00000000 		.word	esUVCGpifCB
 4376 0880 54070000 		.word	.LC52
 4377 0884 78070000 		.word	.LC53
 4378 0888 00000000 		.word	cfgUvcVgaNoMclk
 4379 088c 9C070000 		.word	.LC54
 4380 0890 00000000 		.word	UvcTimer
 4381 0894 00000000 		.word	UvcAppProgressTimer
 4382 0898 C8070000 		.word	.LC55
 4383              		.cfi_endproc
 4384              	.LFE11:
 4386              		.section	.rodata
 4387              		.align	2
 4388              	.LC56:
 4389 07e8 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartInit failed"
 4389      55564355 
 4389      76634170 
 4389      706C6E44 
 4389      65627567 
 4390 0815 20457272 		.ascii	" Error = 0x%x\000"
 4390      6F72203D 
 4390      20307825 
 4390      7800
 4391 0823 00       		.align	2
 4392              	.LC57:
 4393 0824 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartSetConfig f"
 4393      55564355 
 4393      76634170 
 4393      706C6E44 
 4393      65627567 
 4394 0851 61696C65 		.ascii	"ailed Error = 0x%x\000"
 4394      64204572 
 4394      726F7220 
 4394      3D203078 
 4394      257800
 4395              		.align	2
 4396              	.LC58:
 4397 0864 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartTxSetBlockX"
 4397      55564355 
 4397      76634170 
 4397      706C6E44 
 4397      65627567 
 4398 0891 66657220 		.ascii	"fer failed Error = 0x%x\000"
 4398      6661696C 
 4398      65642045 
 4398      72726F72 
 4398      203D2030 
 4399 08a9 000000   		.align	2
 4400              	.LC59:
 4401 08ac 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PDebugInit faile"
 4401      55564355 
 4401      76634170 
 4401      706C6E44 
 4401      65627567 
 4402 08d9 64204572 		.ascii	"d Error = 0x%x\000"
 4402      726F7220 
 4402      3D203078 
 4402      257800
 4403              		.section	.text.esUVCUvcApplnDebugInit,"ax",%progbits
 4404              		.align	2
 4405              		.global	esUVCUvcApplnDebugInit
 4407              	esUVCUvcApplnDebugInit:
 4408              	.LFB12:
1671:../CX3RDKOV5640.c **** 
1672:../CX3RDKOV5640.c **** /* This function initializes the debug module for the UVC application */
1673:../CX3RDKOV5640.c ****     void
1674:../CX3RDKOV5640.c **** esUVCUvcApplnDebugInit (void)
1675:../CX3RDKOV5640.c **** {
 4409              		.loc 1 1675 0
 4410              		.cfi_startproc
 4411              		@ args = 0, pretend = 0, frame = 32
 4412              		@ frame_needed = 1, uses_anonymous_args = 0
 4413 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4414              	.LCFI24:
 4415              		.cfi_def_cfa_offset 8
 4416              		.cfi_offset 11, -8
 4417              		.cfi_offset 14, -4
 4418 0004 04B08DE2 		add	fp, sp, #4
 4419              	.LCFI25:
 4420              		.cfi_def_cfa 11, 4
 4421 0008 20D04DE2 		sub	sp, sp, #32
1676:../CX3RDKOV5640.c ****     CyU3PUartConfig_t uartConfig;
1677:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 4422              		.loc 1 1677 0
 4423 000c 0030A0E3 		mov	r3, #0
 4424 0010 08300BE5 		str	r3, [fp, #-8]
1678:../CX3RDKOV5640.c **** 
1679:../CX3RDKOV5640.c ****     /* Initialize the UART for printing debug messages */
1680:../CX3RDKOV5640.c ****     status = CyU3PUartInit();
 4425              		.loc 1 1680 0
 4426 0014 FEFFFFEB 		bl	CyU3PUartInit
 4427 0018 08000BE5 		str	r0, [fp, #-8]
1681:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4428              		.loc 1 1681 0
 4429 001c 08301BE5 		ldr	r3, [fp, #-8]
 4430 0020 000053E3 		cmp	r3, #0
 4431 0024 0300000A 		beq	.L266
1682:../CX3RDKOV5640.c ****     {
1683:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartInit failed Error = 0x%x",status);
 4432              		.loc 1 1683 0
 4433 0028 0400A0E3 		mov	r0, #4
 4434 002c D0109FE5 		ldr	r1, .L270
 4435 0030 08201BE5 		ldr	r2, [fp, #-8]
 4436 0034 FEFFFFEB 		bl	CyU3PDebugPrint
 4437              	.L266:
1684:../CX3RDKOV5640.c ****     }
1685:../CX3RDKOV5640.c **** 
1686:../CX3RDKOV5640.c ****     /* Set UART Configuration */
1687:../CX3RDKOV5640.c ****     uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
 4438              		.loc 1 1687 0
 4439 0038 C8309FE5 		ldr	r3, .L270+4
 4440 003c 10300BE5 		str	r3, [fp, #-16]
1688:../CX3RDKOV5640.c ****     uartConfig.stopBit = CY_U3P_UART_ONE_STOP_BIT;
 4441              		.loc 1 1688 0
 4442 0040 0130A0E3 		mov	r3, #1
 4443 0044 0C304BE5 		strb	r3, [fp, #-12]
1689:../CX3RDKOV5640.c ****     uartConfig.parity = CY_U3P_UART_NO_PARITY;
 4444              		.loc 1 1689 0
 4445 0048 0030A0E3 		mov	r3, #0
 4446 004c 0B304BE5 		strb	r3, [fp, #-11]
1690:../CX3RDKOV5640.c ****     uartConfig.txEnable = CyTrue;
 4447              		.loc 1 1690 0
 4448 0050 0130A0E3 		mov	r3, #1
 4449 0054 20300BE5 		str	r3, [fp, #-32]
1691:../CX3RDKOV5640.c ****     uartConfig.rxEnable = CyFalse;
 4450              		.loc 1 1691 0
 4451 0058 0030A0E3 		mov	r3, #0
 4452 005c 1C300BE5 		str	r3, [fp, #-28]
1692:../CX3RDKOV5640.c ****     uartConfig.flowCtrl = CyFalse;
 4453              		.loc 1 1692 0
 4454 0060 0030A0E3 		mov	r3, #0
 4455 0064 18300BE5 		str	r3, [fp, #-24]
1693:../CX3RDKOV5640.c ****     uartConfig.isDma = CyTrue;
 4456              		.loc 1 1693 0
 4457 0068 0130A0E3 		mov	r3, #1
 4458 006c 14300BE5 		str	r3, [fp, #-20]
1694:../CX3RDKOV5640.c **** 
1695:../CX3RDKOV5640.c ****     /* Set the UART configuration */
1696:../CX3RDKOV5640.c ****     status = CyU3PUartSetConfig (&uartConfig, NULL);
 4459              		.loc 1 1696 0
 4460 0070 20304BE2 		sub	r3, fp, #32
 4461 0074 0300A0E1 		mov	r0, r3
 4462 0078 0010A0E3 		mov	r1, #0
 4463 007c FEFFFFEB 		bl	CyU3PUartSetConfig
 4464 0080 08000BE5 		str	r0, [fp, #-8]
1697:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4465              		.loc 1 1697 0
 4466 0084 08301BE5 		ldr	r3, [fp, #-8]
 4467 0088 000053E3 		cmp	r3, #0
 4468 008c 0300000A 		beq	.L267
1698:../CX3RDKOV5640.c ****     {
1699:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartSetConfig failed Error = 0x%x",sta
 4469              		.loc 1 1699 0
 4470 0090 0400A0E3 		mov	r0, #4
 4471 0094 70109FE5 		ldr	r1, .L270+8
 4472 0098 08201BE5 		ldr	r2, [fp, #-8]
 4473 009c FEFFFFEB 		bl	CyU3PDebugPrint
 4474              	.L267:
1700:../CX3RDKOV5640.c ****     }
1701:../CX3RDKOV5640.c **** 
1702:../CX3RDKOV5640.c ****     /* Set the UART transfer */
1703:../CX3RDKOV5640.c ****     status = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
 4475              		.loc 1 1703 0
 4476 00a0 0000E0E3 		mvn	r0, #0
 4477 00a4 FEFFFFEB 		bl	CyU3PUartTxSetBlockXfer
 4478 00a8 08000BE5 		str	r0, [fp, #-8]
1704:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4479              		.loc 1 1704 0
 4480 00ac 08301BE5 		ldr	r3, [fp, #-8]
 4481 00b0 000053E3 		cmp	r3, #0
 4482 00b4 0300000A 		beq	.L268
1705:../CX3RDKOV5640.c ****     {
1706:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartTxSetBlockXfer failed Error = 0x%x
 4483              		.loc 1 1706 0
 4484 00b8 0400A0E3 		mov	r0, #4
 4485 00bc 4C109FE5 		ldr	r1, .L270+12
 4486 00c0 08201BE5 		ldr	r2, [fp, #-8]
 4487 00c4 FEFFFFEB 		bl	CyU3PDebugPrint
 4488              	.L268:
1707:../CX3RDKOV5640.c ****     }
1708:../CX3RDKOV5640.c **** 
1709:../CX3RDKOV5640.c ****     /* Initialize the debug application */
1710:../CX3RDKOV5640.c ****     status = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 8);
 4489              		.loc 1 1710 0
 4490 00c8 0300A0E3 		mov	r0, #3
 4491 00cc 0810A0E3 		mov	r1, #8
 4492 00d0 FEFFFFEB 		bl	CyU3PDebugInit
 4493 00d4 08000BE5 		str	r0, [fp, #-8]
1711:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4494              		.loc 1 1711 0
 4495 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4496 00dc 000053E3 		cmp	r3, #0
 4497 00e0 0300000A 		beq	.L269
1712:../CX3RDKOV5640.c ****     {
1713:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PDebugInit failed Error = 0x%x",status)
 4498              		.loc 1 1713 0
 4499 00e4 0400A0E3 		mov	r0, #4
 4500 00e8 24109FE5 		ldr	r1, .L270+16
 4501 00ec 08201BE5 		ldr	r2, [fp, #-8]
 4502 00f0 FEFFFFEB 		bl	CyU3PDebugPrint
 4503              	.L269:
1714:../CX3RDKOV5640.c ****     }
1715:../CX3RDKOV5640.c **** 
1716:../CX3RDKOV5640.c ****     CyU3PDebugPreamble (CyFalse);
 4504              		.loc 1 1716 0
 4505 00f4 0000A0E3 		mov	r0, #0
 4506 00f8 FEFFFFEB 		bl	CyU3PDebugPreamble
1717:../CX3RDKOV5640.c **** 
1718:../CX3RDKOV5640.c **** }
 4507              		.loc 1 1718 0
 4508 00fc 04D04BE2 		sub	sp, fp, #4
 4509              		@ sp needed
 4510 0100 0088BDE8 		ldmfd	sp!, {fp, pc}
 4511              	.L271:
 4512              		.align	2
 4513              	.L270:
 4514 0104 E8070000 		.word	.LC56
 4515 0108 00C20100 		.word	115200
 4516 010c 24080000 		.word	.LC57
 4517 0110 64080000 		.word	.LC58
 4518 0114 AC080000 		.word	.LC59
 4519              		.cfi_endproc
 4520              	.LFE12:
 4522              		.section	.text.esUVCUvcAppThread_Entry,"ax",%progbits
 4523              		.align	2
 4524              		.global	esUVCUvcAppThread_Entry
 4526              	esUVCUvcAppThread_Entry:
 4527              	.LFB13:
1719:../CX3RDKOV5640.c **** 
1720:../CX3RDKOV5640.c **** /* Entry function for the UVC application thread. */
1721:../CX3RDKOV5640.c ****     void
1722:../CX3RDKOV5640.c **** esUVCUvcAppThread_Entry (
1723:../CX3RDKOV5640.c ****         uint32_t input)
1724:../CX3RDKOV5640.c **** {
 4528              		.loc 1 1724 0
 4529              		.cfi_startproc
 4530              		@ args = 0, pretend = 0, frame = 24
 4531              		@ frame_needed = 1, uses_anonymous_args = 0
 4532 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4533              	.LCFI26:
 4534              		.cfi_def_cfa_offset 8
 4535              		.cfi_offset 11, -8
 4536              		.cfi_offset 14, -4
 4537 0004 04B08DE2 		add	fp, sp, #4
 4538              	.LCFI27:
 4539              		.cfi_def_cfa 11, 4
 4540 0008 20D04DE2 		sub	sp, sp, #32
 4541 000c 18000BE5 		str	r0, [fp, #-24]
1725:../CX3RDKOV5640.c ****     uint16_t wakeReason;
1726:../CX3RDKOV5640.c ****     uint32_t eventFlag;
1727:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status;
1728:../CX3RDKOV5640.c **** 
1729:../CX3RDKOV5640.c ****     /* Initialize the Debug Module */
1730:../CX3RDKOV5640.c ****     esUVCUvcApplnDebugInit();
 4542              		.loc 1 1730 0
 4543 0010 FEFFFFEB 		bl	esUVCUvcApplnDebugInit
1731:../CX3RDKOV5640.c **** 
1732:../CX3RDKOV5640.c ****     /* Initialize the UVC Application */
1733:../CX3RDKOV5640.c ****     esUVCUvcApplnInit();
 4544              		.loc 1 1733 0
 4545 0014 FEFFFFEB 		bl	esUVCUvcApplnInit
 4546              	.L278:
1734:../CX3RDKOV5640.c **** 
1735:../CX3RDKOV5640.c ****     for (;;)
1736:../CX3RDKOV5640.c ****     {
1737:../CX3RDKOV5640.c ****         CyU3PEventGet (&glTimerEvent,ES_USB_SUSP_EVENT_FLAG|ES_TIMER_RESET_EVENT, CYU3P_EVENT_OR_CL
 4547              		.loc 1 1737 0
 4548 0018 10304BE2 		sub	r3, fp, #16
 4549 001c 0020E0E3 		mvn	r2, #0
 4550 0020 00208DE5 		str	r2, [sp]
 4551 0024 B8009FE5 		ldr	r0, .L280
 4552 0028 3010A0E3 		mov	r1, #48
 4553 002c 0120A0E3 		mov	r2, #1
 4554 0030 FEFFFFEB 		bl	_txe_event_flags_get
1738:../CX3RDKOV5640.c **** 
1739:../CX3RDKOV5640.c ****         /* Handle TimerReset Event*/
1740:../CX3RDKOV5640.c ****         if( eventFlag & ES_TIMER_RESET_EVENT)
 4555              		.loc 1 1740 0
 4556 0034 10301BE5 		ldr	r3, [fp, #-16]
 4557 0038 103003E2 		and	r3, r3, #16
 4558 003c 000053E3 		cmp	r3, #0
 4559 0040 1400000A 		beq	.L273
1741:../CX3RDKOV5640.c ****         {
1742:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 4560              		.loc 1 1742 0
 4561 0044 9C309FE5 		ldr	r3, .L280+4
 4562 0048 003093E5 		ldr	r3, [r3]
 4563 004c 000053E3 		cmp	r3, #0
 4564 0050 0300000A 		beq	.L274
1743:../CX3RDKOV5640.c ****             {
1744:../CX3RDKOV5640.c ****             	glIsClearFeature = CyFalse;
 4565              		.loc 1 1744 0
 4566 0054 90309FE5 		ldr	r3, .L280+8
 4567 0058 0020A0E3 		mov	r2, #0
 4568 005c 002083E5 		str	r2, [r3]
1745:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop();
 4569              		.loc 1 1745 0
 4570 0060 FEFFFFEB 		bl	esUVCUvcApplnStop
 4571              	.L274:
1746:../CX3RDKOV5640.c ****             }
1747:../CX3RDKOV5640.c ****             if(glPreviewStarted == CyTrue)
 4572              		.loc 1 1747 0
 4573 0064 84309FE5 		ldr	r3, .L280+12
 4574 0068 003093E5 		ldr	r3, [r3]
 4575 006c 010053E3 		cmp	r3, #1
 4576 0070 0400001A 		bne	.L275
1748:../CX3RDKOV5640.c ****             {
1749:../CX3RDKOV5640.c ****             	//TODO Change this function with "Sensor Specific" function to write the sensor settin
1750:../CX3RDKOV5640.c ****             	esSetCameraResolution(glFrameIndexToSet);
 4577              		.loc 1 1750 0
 4578 0074 78309FE5 		ldr	r3, .L280+16
 4579 0078 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4580 007c 0300A0E1 		mov	r0, r3
 4581 0080 FEFFFFEB 		bl	esSetCameraResolution
1751:../CX3RDKOV5640.c ****             	esUVCUvcApplnStart();
 4582              		.loc 1 1751 0
 4583 0084 FEFFFFEB 		bl	esUVCUvcApplnStart
 4584              	.L275:
1752:../CX3RDKOV5640.c ****             }
1753:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1754:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 4585              		.loc 1 1754 0
 4586 0088 68009FE5 		ldr	r0, .L280+20
 4587 008c 7D1FA0E3 		mov	r1, #500
 4588 0090 0020A0E3 		mov	r2, #0
 4589 0094 FEFFFFEB 		bl	_txe_timer_change
 4590              	.L273:
1755:../CX3RDKOV5640.c **** #endif
1756:../CX3RDKOV5640.c ****         }
1757:../CX3RDKOV5640.c ****         /* Handle Suspend Event*/
1758:../CX3RDKOV5640.c ****         if(eventFlag & ES_USB_SUSP_EVENT_FLAG)
 4591              		.loc 1 1758 0
 4592 0098 10301BE5 		ldr	r3, [fp, #-16]
 4593 009c 203003E2 		and	r3, r3, #32
 4594 00a0 000053E3 		cmp	r3, #0
 4595 00a4 0D00000A 		beq	.L276
1759:../CX3RDKOV5640.c ****         {
1760:../CX3RDKOV5640.c ****             /* Place CX3 in Low Power Suspend mode, with USB bus activity as the wakeup source. */
1761:../CX3RDKOV5640.c ****             CyU3PMipicsiSleep();
 4596              		.loc 1 1761 0
 4597 00a8 FEFFFFEB 		bl	CyU3PMipicsiSleep
1762:../CX3RDKOV5640.c ****             //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the 
1763:../CX3RDKOV5640.c **** 
1764:../CX3RDKOV5640.c ****             //[TBD] esCamera_Power_Down();
1765:../CX3RDKOV5640.c **** 
1766:../CX3RDKOV5640.c ****             status = CyU3PSysEnterSuspendMode (CY_U3P_SYS_USB_BUS_ACTVTY_WAKEUP_SRC, 0, &wakeReason
 4598              		.loc 1 1766 0
 4599 00ac 0A304BE2 		sub	r3, fp, #10
 4600 00b0 0800A0E3 		mov	r0, #8
 4601 00b4 0010A0E3 		mov	r1, #0
 4602 00b8 0320A0E1 		mov	r2, r3
 4603 00bc FEFFFFEB 		bl	CyU3PSysEnterSuspendMode
 4604 00c0 08000BE5 		str	r0, [fp, #-8]
1767:../CX3RDKOV5640.c ****             if(glMipiActive)
 4605              		.loc 1 1767 0
 4606 00c4 30309FE5 		ldr	r3, .L280+24
 4607 00c8 003093E5 		ldr	r3, [r3]
 4608 00cc 000053E3 		cmp	r3, #0
 4609 00d0 0100000A 		beq	.L277
1768:../CX3RDKOV5640.c ****             {
1769:../CX3RDKOV5640.c ****                 CyU3PMipicsiWakeup();
 4610              		.loc 1 1769 0
 4611 00d4 FEFFFFEB 		bl	CyU3PMipicsiWakeup
1770:../CX3RDKOV5640.c ****                 //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the 
1771:../CX3RDKOV5640.c ****                 //[TBD] esCamera_Power_Up();
1772:../CX3RDKOV5640.c ****             }
1773:../CX3RDKOV5640.c ****             continue;
 4612              		.loc 1 1773 0
 4613 00d8 FFFFFFEA 		b	.L279
 4614              	.L277:
 4615              	.L279:
 4616 00dc 0000A0E1 		mov	r0, r0	@ nop
 4617              	.L276:
1774:../CX3RDKOV5640.c ****         }
1775:../CX3RDKOV5640.c ****     } /* End of for(;;) */
 4618              		.loc 1 1775 0
 4619 00e0 CCFFFFEA 		b	.L278
 4620              	.L281:
 4621              		.align	2
 4622              	.L280:
 4623 00e4 00000000 		.word	glTimerEvent
 4624 00e8 00000000 		.word	glIsApplnActive
 4625 00ec 00000000 		.word	glIsClearFeature
 4626 00f0 00000000 		.word	glPreviewStarted
 4627 00f4 00000000 		.word	glFrameIndexToSet
 4628 00f8 00000000 		.word	UvcTimer
 4629 00fc 00000000 		.word	glMipiActive
 4630              		.cfi_endproc
 4631              	.LFE13:
 4633              		.section	.rodata
 4634              		.align	2
 4635              	.LC60:
 4636 08e8 33303A55 		.ascii	"30:UVC_app_thread\000"
 4636      56435F61 
 4636      70705F74 
 4636      68726561 
 4636      6400
 4637 08fa 0000     		.section	.text.CyFxApplicationDefine,"ax",%progbits
 4638              		.align	2
 4639              		.global	CyFxApplicationDefine
 4641              	CyFxApplicationDefine:
 4642              	.LFB14:
1776:../CX3RDKOV5640.c **** }
1777:../CX3RDKOV5640.c **** 
1778:../CX3RDKOV5640.c **** 
1779:../CX3RDKOV5640.c **** /* Application define function which creates the threads. */
1780:../CX3RDKOV5640.c ****     void
1781:../CX3RDKOV5640.c **** CyFxApplicationDefine (
1782:../CX3RDKOV5640.c ****         void)
1783:../CX3RDKOV5640.c **** {
 4643              		.loc 1 1783 0
 4644              		.cfi_startproc
 4645              		@ args = 0, pretend = 0, frame = 8
 4646              		@ frame_needed = 1, uses_anonymous_args = 0
 4647 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4648              	.LCFI28:
 4649              		.cfi_def_cfa_offset 8
 4650              		.cfi_offset 11, -8
 4651              		.cfi_offset 14, -4
 4652 0004 04B08DE2 		add	fp, sp, #4
 4653              	.LCFI29:
 4654              		.cfi_def_cfa 11, 4
 4655 0008 28D04DE2 		sub	sp, sp, #40
1784:../CX3RDKOV5640.c ****     void *ptr = NULL;
 4656              		.loc 1 1784 0
 4657 000c 0030A0E3 		mov	r3, #0
 4658 0010 08300BE5 		str	r3, [fp, #-8]
1785:../CX3RDKOV5640.c ****     uint32_t retThrdCreate = CY_U3P_SUCCESS;
 4659              		.loc 1 1785 0
 4660 0014 0030A0E3 		mov	r3, #0
 4661 0018 0C300BE5 		str	r3, [fp, #-12]
1786:../CX3RDKOV5640.c **** 
1787:../CX3RDKOV5640.c ****     /* Allocate the memory for the thread and create the thread */
1788:../CX3RDKOV5640.c ****     ptr = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
 4662              		.loc 1 1788 0
 4663 001c 010AA0E3 		mov	r0, #4096
 4664 0020 FEFFFFEB 		bl	CyU3PMemAlloc
 4665 0024 08000BE5 		str	r0, [fp, #-8]
1789:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
 4666              		.loc 1 1789 0
 4667 0028 08301BE5 		ldr	r3, [fp, #-8]
 4668 002c 00308DE5 		str	r3, [sp]
 4669 0030 013AA0E3 		mov	r3, #4096
 4670 0034 04308DE5 		str	r3, [sp, #4]
 4671 0038 0830A0E3 		mov	r3, #8
 4672 003c 08308DE5 		str	r3, [sp, #8]
 4673 0040 0830A0E3 		mov	r3, #8
 4674 0044 0C308DE5 		str	r3, [sp, #12]
 4675 0048 0030A0E3 		mov	r3, #0
 4676 004c 10308DE5 		str	r3, [sp, #16]
 4677 0050 0130A0E3 		mov	r3, #1
 4678 0054 14308DE5 		str	r3, [sp, #20]
 4679 0058 A830A0E3 		mov	r3, #168
 4680 005c 18308DE5 		str	r3, [sp, #24]
 4681 0060 4C009FE5 		ldr	r0, .L287
 4682 0064 4C109FE5 		ldr	r1, .L287+4
 4683 0068 4C209FE5 		ldr	r2, .L287+8
 4684 006c 0030A0E3 		mov	r3, #0
 4685 0070 FEFFFFEB 		bl	_txe_thread_create
 4686 0074 0C000BE5 		str	r0, [fp, #-12]
1790:../CX3RDKOV5640.c ****             "30:UVC_app_thread",         /* Thread Id and name */
1791:../CX3RDKOV5640.c ****             esUVCUvcAppThread_Entry,          /* UVC Application Thread Entry function */
1792:../CX3RDKOV5640.c ****             0,                           /* No input parameter to thread */
1793:../CX3RDKOV5640.c ****             ptr,                         /* Pointer to the allocated thread stack */
1794:../CX3RDKOV5640.c ****             UVC_APP_THREAD_STACK,        /* UVC Application Thread stack size */
1795:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* UVC Application Thread priority */
1796:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* Pre-emption threshold */
1797:../CX3RDKOV5640.c ****             CYU3P_NO_TIME_SLICE,         /* No time slice for the application thread */
1798:../CX3RDKOV5640.c ****             CYU3P_AUTO_START             /* Start the Thread immediately */
1799:../CX3RDKOV5640.c ****             );
1800:../CX3RDKOV5640.c **** 
1801:../CX3RDKOV5640.c ****     /* Check the return code */
1802:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4687              		.loc 1 1802 0
 4688 0078 0C301BE5 		ldr	r3, [fp, #-12]
 4689 007c 000053E3 		cmp	r3, #0
 4690 0080 0000000A 		beq	.L283
 4691              	.L284:
1803:../CX3RDKOV5640.c ****     {
1804:../CX3RDKOV5640.c ****         /* Thread Creation failed with the error code retThrdCreate */
1805:../CX3RDKOV5640.c **** 
1806:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1807:../CX3RDKOV5640.c **** 
1808:../CX3RDKOV5640.c ****         /* Application cannot continue */
1809:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1810:../CX3RDKOV5640.c ****         while(1);
 4692              		.loc 1 1810 0 discriminator 1
 4693 0084 FEFFFFEA 		b	.L284
 4694              	.L283:
1811:../CX3RDKOV5640.c ****     }
1812:../CX3RDKOV5640.c **** 
1813:../CX3RDKOV5640.c ****     /* Create GPIO application event group */
1814:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PEventCreate(&glTimerEvent);
 4695              		.loc 1 1814 0
 4696 0088 30009FE5 		ldr	r0, .L287+12
 4697 008c 0010A0E3 		mov	r1, #0
 4698 0090 2820A0E3 		mov	r2, #40
 4699 0094 FEFFFFEB 		bl	_txe_event_flags_create
 4700 0098 0C000BE5 		str	r0, [fp, #-12]
1815:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4701              		.loc 1 1815 0
 4702 009c 0C301BE5 		ldr	r3, [fp, #-12]
 4703 00a0 000053E3 		cmp	r3, #0
 4704 00a4 0000000A 		beq	.L282
 4705              	.L286:
1816:../CX3RDKOV5640.c ****     {
1817:../CX3RDKOV5640.c ****         /* Event group creation failed with the error code retThrdCreate */
1818:../CX3RDKOV5640.c **** 
1819:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1820:../CX3RDKOV5640.c **** 
1821:../CX3RDKOV5640.c ****         /* Application cannot continue */
1822:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1823:../CX3RDKOV5640.c ****         while(1);
 4706              		.loc 1 1823 0 discriminator 1
 4707 00a8 FEFFFFEA 		b	.L286
 4708              	.L282:
1824:../CX3RDKOV5640.c ****     }
1825:../CX3RDKOV5640.c **** }
 4709              		.loc 1 1825 0
 4710 00ac 04D04BE2 		sub	sp, fp, #4
 4711              		@ sp needed
 4712 00b0 0088BDE8 		ldmfd	sp!, {fp, pc}
 4713              	.L288:
 4714              		.align	2
 4715              	.L287:
 4716 00b4 00000000 		.word	uvcAppThread
 4717 00b8 E8080000 		.word	.LC60
 4718 00bc 00000000 		.word	esUVCUvcAppThread_Entry
 4719 00c0 00000000 		.word	glTimerEvent
 4720              		.cfi_endproc
 4721              	.LFE14:
 4723              		.section	.text.main,"ax",%progbits
 4724              		.align	2
 4725              		.global	main
 4727              	main:
 4728              	.LFB15:
1826:../CX3RDKOV5640.c **** 
1827:../CX3RDKOV5640.c **** /*
1828:../CX3RDKOV5640.c ****  * Main function
1829:../CX3RDKOV5640.c ****  */
1830:../CX3RDKOV5640.c **** 
1831:../CX3RDKOV5640.c ****     int
1832:../CX3RDKOV5640.c **** main (void)
1833:../CX3RDKOV5640.c **** {
 4729              		.loc 1 1833 0
 4730              		.cfi_startproc
 4731              		@ args = 0, pretend = 0, frame = 48
 4732              		@ frame_needed = 1, uses_anonymous_args = 0
 4733 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4734              	.LCFI30:
 4735              		.cfi_def_cfa_offset 8
 4736              		.cfi_offset 11, -8
 4737              		.cfi_offset 14, -4
 4738 0004 04B08DE2 		add	fp, sp, #4
 4739              	.LCFI31:
 4740              		.cfi_def_cfa 11, 4
 4741 0008 30D04DE2 		sub	sp, sp, #48
1834:../CX3RDKOV5640.c ****     CyU3PIoMatrixConfig_t io_cfg;
1835:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 4742              		.loc 1 1835 0
 4743 000c 0030A0E3 		mov	r3, #0
 4744 0010 08300BE5 		str	r3, [fp, #-8]
1836:../CX3RDKOV5640.c **** 
1837:../CX3RDKOV5640.c ****     /* Initialize the device */
1838:../CX3RDKOV5640.c ****     status = CyU3PDeviceInit (NULL);
 4745              		.loc 1 1838 0
 4746 0014 0000A0E3 		mov	r0, #0
 4747 0018 FEFFFFEB 		bl	CyU3PDeviceInit
 4748 001c 08000BE5 		str	r0, [fp, #-8]
1839:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4749              		.loc 1 1839 0
 4750 0020 08301BE5 		ldr	r3, [fp, #-8]
 4751 0024 000053E3 		cmp	r3, #0
 4752 0028 0000000A 		beq	.L290
1840:../CX3RDKOV5640.c ****     {
1841:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 4753              		.loc 1 1841 0
 4754 002c 270000EA 		b	.L291
 4755              	.L290:
1842:../CX3RDKOV5640.c ****     }
1843:../CX3RDKOV5640.c **** 
1844:../CX3RDKOV5640.c ****     /* Initialize the caches. Enable instruction cache and keep data cache disabled.
1845:../CX3RDKOV5640.c ****      * The data cache is useful only when there is a large amount of CPU based memory
1846:../CX3RDKOV5640.c ****      * accesses. When used in simple cases, it can decrease performance due to large
1847:../CX3RDKOV5640.c ****      * number of cache flushes and cleans and also it adds to the complexity of the
1848:../CX3RDKOV5640.c ****      * code. */
1849:../CX3RDKOV5640.c ****     status = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
 4756              		.loc 1 1849 0
 4757 0030 0100A0E3 		mov	r0, #1
 4758 0034 0010A0E3 		mov	r1, #0
 4759 0038 0020A0E3 		mov	r2, #0
 4760 003c FEFFFFEB 		bl	CyU3PDeviceCacheControl
 4761 0040 08000BE5 		str	r0, [fp, #-8]
1850:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4762              		.loc 1 1850 0
 4763 0044 08301BE5 		ldr	r3, [fp, #-8]
 4764 0048 000053E3 		cmp	r3, #0
 4765 004c 0000000A 		beq	.L292
1851:../CX3RDKOV5640.c ****     {
1852:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 4766              		.loc 1 1852 0
 4767 0050 1E0000EA 		b	.L291
 4768              	.L292:
1853:../CX3RDKOV5640.c ****     }
1854:../CX3RDKOV5640.c **** 
1855:../CX3RDKOV5640.c ****     /* Configure the IO matrix for the device.*/
1856:../CX3RDKOV5640.c ****     io_cfg.isDQ32Bit = CyFalse;
 4769              		.loc 1 1856 0
 4770 0054 0030A0E3 		mov	r3, #0
 4771 0058 30300BE5 		str	r3, [fp, #-48]
1857:../CX3RDKOV5640.c **** 
1858:../CX3RDKOV5640.c ****     io_cfg.useUart   = CyTrue;
 4772              		.loc 1 1858 0
 4773 005c 0130A0E3 		mov	r3, #1
 4774 0060 2C300BE5 		str	r3, [fp, #-44]
1859:../CX3RDKOV5640.c ****     io_cfg.useI2C    = CyTrue;
 4775              		.loc 1 1859 0
 4776 0064 0130A0E3 		mov	r3, #1
 4777 0068 28300BE5 		str	r3, [fp, #-40]
1860:../CX3RDKOV5640.c ****     io_cfg.useI2S    = CyFalse;
 4778              		.loc 1 1860 0
 4779 006c 0030A0E3 		mov	r3, #0
 4780 0070 24300BE5 		str	r3, [fp, #-36]
1861:../CX3RDKOV5640.c ****     io_cfg.useSpi    = CyFalse;
 4781              		.loc 1 1861 0
 4782 0074 0030A0E3 		mov	r3, #0
 4783 0078 20300BE5 		str	r3, [fp, #-32]
1862:../CX3RDKOV5640.c ****     io_cfg.lppMode   = CY_U3P_IO_MATRIX_LPP_DEFAULT;
 4784              		.loc 1 1862 0
 4785 007c 0030A0E3 		mov	r3, #0
 4786 0080 1A304BE5 		strb	r3, [fp, #-26]
1863:../CX3RDKOV5640.c ****     /* No GPIOs are enabled. */
1864:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[0]  = 0;
 4787              		.loc 1 1864 0
 4788 0084 0030A0E3 		mov	r3, #0
 4789 0088 18300BE5 		str	r3, [fp, #-24]
1865:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[1]  = 0;
 4790              		.loc 1 1865 0
 4791 008c 0030A0E3 		mov	r3, #0
 4792 0090 14300BE5 		str	r3, [fp, #-20]
1866:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[0] = 0;
 4793              		.loc 1 1866 0
 4794 0094 0030A0E3 		mov	r3, #0
 4795 0098 10300BE5 		str	r3, [fp, #-16]
1867:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[1] = 0;
 4796              		.loc 1 1867 0
 4797 009c 0030A0E3 		mov	r3, #0
 4798 00a0 0C300BE5 		str	r3, [fp, #-12]
1868:../CX3RDKOV5640.c ****     status = CyU3PDeviceConfigureIOMatrix (&io_cfg);
 4799              		.loc 1 1868 0
 4800 00a4 30304BE2 		sub	r3, fp, #48
 4801 00a8 0300A0E1 		mov	r0, r3
 4802 00ac FEFFFFEB 		bl	CyU3PDeviceConfigureIOMatrix
 4803 00b0 08000BE5 		str	r0, [fp, #-8]
1869:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4804              		.loc 1 1869 0
 4805 00b4 08301BE5 		ldr	r3, [fp, #-8]
 4806 00b8 000053E3 		cmp	r3, #0
 4807 00bc 0000000A 		beq	.L293
1870:../CX3RDKOV5640.c ****     {
1871:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 4808              		.loc 1 1871 0
 4809 00c0 020000EA 		b	.L291
 4810              	.L293:
1872:../CX3RDKOV5640.c ****     }
1873:../CX3RDKOV5640.c **** 
1874:../CX3RDKOV5640.c ****     /* This is a non returnable call for initializing the RTOS kernel */
1875:../CX3RDKOV5640.c ****     CyU3PKernelEntry ();
 4811              		.loc 1 1875 0
 4812 00c4 FEFFFFEB 		bl	_tx_initialize_kernel_enter
1876:../CX3RDKOV5640.c **** 
1877:../CX3RDKOV5640.c ****     /* Dummy return to make the compiler happy */
1878:../CX3RDKOV5640.c ****     return 0;
 4813              		.loc 1 1878 0
 4814 00c8 0030A0E3 		mov	r3, #0
 4815 00cc 000000EA 		b	.L295
 4816              	.L291:
1879:../CX3RDKOV5640.c **** 
1880:../CX3RDKOV5640.c **** handle_fatal_error:
1881:../CX3RDKOV5640.c ****     /* Cannot recover from this error. */
1882:../CX3RDKOV5640.c ****     while (1);
 4817              		.loc 1 1882 0 discriminator 1
 4818 00d0 FEFFFFEA 		b	.L291
 4819              	.L295:
1883:../CX3RDKOV5640.c **** }
 4820              		.loc 1 1883 0
 4821 00d4 0300A0E1 		mov	r0, r3
 4822 00d8 04D04BE2 		sub	sp, fp, #4
 4823              		@ sp needed
 4824 00dc 0088BDE8 		ldmfd	sp!, {fp, pc}
 4825              		.cfi_endproc
 4826              	.LFE15:
 4828              		.text
 4829              	.Letext0:
 4830              		.file 2 "c:\\program files (x86)\\cypress\\ez-usb fx3 sdk\\1.3\\arm gcc\\arm-none-eabi\\include\\s
 4831              		.file 3 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4832              		.file 4 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyfx
 4833              		.file 5 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_p
 4834              		.file 6 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_a
 4835              		.file 7 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4836              		.file 8 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4837              		.file 9 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4838              		.file 10 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4839              		.file 11 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4840              		.file 12 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4841              		.file 13 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4842              		.file 14 "..\\..\\CX3OV5640LIB\\INC/CX3OV5640Lib.h"
 4843              		.file 15 "../CX3RDKOV5640.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CX3RDKOV5640.c
                            *COM*:00000004 gl32SetControl
                            *COM*:00000002 gl16SetControl
                            *COM*:000000a8 uvcAppThread
                            *COM*:00000028 glTimerEvent
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:21     .bss.UvcTimer:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:24     .bss.UvcTimer:00000000 UvcTimer
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:27     .text.UvcAppProgressTimer:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:29     .text.UvcAppProgressTimer:00000000 UvcAppProgressTimer
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:58     .text.UvcAppProgressTimer:00000028 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:67     .bss.glDMATxCount:00000000 glDMATxCount
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:64     .bss.glDMATxCount:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:74     .bss.glDmaDone:00000000 glDmaDone
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:71     .bss.glDmaDone:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:80     .bss.glActiveSocket:00000000 glActiveSocket
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:81     .bss.glActiveSocket:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:87     .data.doLpmDisable:00000000 doLpmDisable
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:84     .data.doLpmDisable:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:94     .bss.glHitFV:00000000 glHitFV
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:91     .bss.glHitFV:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:101    .bss.glMipiActive:00000000 glMipiActive
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:98     .bss.glMipiActive:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:108    .bss.glIsClearFeature:00000000 glIsClearFeature
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:105    .bss.glIsClearFeature:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:115    .bss.glPreviewStarted:00000000 glPreviewStarted
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:112    .bss.glPreviewStarted:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:122    .data.glUVCHeader:00000000 glUVCHeader
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:119    .data.glUVCHeader:00000000 $d
                            *COM*:00000020 glCommitCtrl
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:140    .data.glCurrentFrameIndex:00000000 glCurrentFrameIndex
                            *COM*:00000020 glStillCommitCtrl
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:147    .data.glCurrentStillFrameIndex:00000000 glCurrentStillFrameIndex
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:153    .bss.glStillTriggerCtrl:00000000 glStillTriggerCtrl
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:154    .bss.glStillTriggerCtrl:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:159    .bss.glFrameIndexToSet:00000000 glFrameIndexToSet
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:160    .bss.glFrameIndexToSet:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:166    .bss.glStillCaptureStart:00000000 glStillCaptureStart
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:163    .bss.glStillCaptureStart:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:173    .bss.glStillCaptured:00000000 glStillCaptured
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:170    .bss.glStillCaptured:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:179    .bss.glStillSkip:00000000 glStillSkip
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:180    .bss.glStillSkip:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:186    .bss.glIsApplnActive:00000000 glIsApplnActive
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:183    .bss.glIsApplnActive:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:193    .bss.glIsConfigured:00000000 glIsConfigured
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:190    .bss.glIsConfigured:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:200    .bss.glIsStreamingStarted:00000000 glIsStreamingStarted
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:197    .bss.glIsStreamingStarted:00000000 $d
                            *COM*:000000e8 glChHandleUVCStream
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:208    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 ES_UVC_STREAM_BUF_SIZE
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:205    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:215    .bss.ES_UVC_DATA_BUF_SIZE:00000000 ES_UVC_DATA_BUF_SIZE
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:212    .bss.ES_UVC_DATA_BUF_SIZE:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:221    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 ES_UVC_STREAM_BUF_COUNT
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:222    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:227    .data.g_IsAutoFocus:00000000 g_IsAutoFocus
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:233    .bss.glGet_Info:00000000 glGet_Info
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:234    .bss.glGet_Info:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:240    .bss.gl8GetControl:00000000 gl8GetControl
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:237    .bss.gl8GetControl:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:247    .bss.gl8SetControl:00000000 gl8SetControl
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:244    .bss.gl8SetControl:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:254    .bss.gl16GetControl:00000000 gl16GetControl
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:251    .bss.gl16GetControl:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:261    .bss.gl32GetControl:00000000 gl32GetControl
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:258    .bss.gl32GetControl:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:267    .bss.glcommitcount:00000000 glcommitcount
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:268    .bss.glcommitcount:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:273    .data.glcheckframe:00000000 glcheckframe
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:276    .text.esUVCAppErrorHandler:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:279    .text.esUVCAppErrorHandler:00000000 esUVCAppErrorHandler
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:305    .text.esUVCUvcAddHeader:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:307    .text.esUVCUvcAddHeader:00000000 esUVCUvcAddHeader
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:358    .text.esUVCUvcAddHeader:00000074 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:363    .rodata:00000000 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:373    .text.esUVCUvcApplnStart:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:376    .text.esUVCUvcApplnStart:00000000 esUVCUvcApplnStart
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:525    .text.esUVCUvcApplnStart:00000184 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:548    .text.esUVCUvcApplnStop:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:551    .text.esUVCUvcApplnStop:00000000 esUVCUvcApplnStop
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:652    .text.esUVCUvcApplnStop:000000f4 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:683    .text.esUVCGpifCB:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:686    .text.esUVCGpifCB:00000000 esUVCGpifCB
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:774    .text.esUVCGpifCB:000000dc $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:785    .text.esUVCUvcAppDmaCallback:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:788    .text.esUVCUvcAppDmaCallback:00000000 esUVCUvcAppDmaCallback
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1095   .text.esUVCUvcAppDmaCallback:00000380 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1115   .text.esUVCUvcApplnUSBEventCB:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1117   .text.esUVCUvcApplnUSBEventCB:00000000 esUVCUvcApplnUSBEventCB
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1147   .text.esUVCUvcApplnUSBEventCB:0000003c $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1157   .text.esUVCUvcApplnUSBEventCB:0000005c $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1279   .text.esUVCUvcApplnUSBEventCB:00000198 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1290   .text.esUVCApplnLPMRqtCB:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1292   .text.esUVCApplnLPMRqtCB:00000000 esUVCApplnLPMRqtCB
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1355   .text.esSetCameraResolution:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1358   .text.esSetCameraResolution:00000000 esSetCameraResolution
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1553   .text.esSetCameraResolution:00000200 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1595   .text.esUVCUvcApplnUSBSetupCB:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:1597   .text.esUVCUvcApplnUSBSetupCB:00000000 esUVCUvcApplnUSBSetupCB
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:3082   .text.esUVCUvcApplnUSBSetupCB:00001074 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:3121   .text.esUVCUvcApplnUSBSetupCB:00001108 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:3622   .text.esUVCUvcApplnInit:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:3625   .text.esUVCUvcApplnInit:00000000 esUVCUvcApplnInit
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4327   .text.esUVCUvcApplnInit:000007bc $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4404   .text.esUVCUvcApplnDebugInit:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4407   .text.esUVCUvcApplnDebugInit:00000000 esUVCUvcApplnDebugInit
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4514   .text.esUVCUvcApplnDebugInit:00000104 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4523   .text.esUVCUvcAppThread_Entry:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4526   .text.esUVCUvcAppThread_Entry:00000000 esUVCUvcAppThread_Entry
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4623   .text.esUVCUvcAppThread_Entry:000000e4 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4638   .text.CyFxApplicationDefine:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4641   .text.CyFxApplicationDefine:00000000 CyFxApplicationDefine
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4716   .text.CyFxApplicationDefine:000000b4 $d
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4724   .text.main:00000000 $a
C:\Users\dragon.fu\AppData\Local\Temp\ccbks1r4.s:4727   .text.main:00000000 main
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.29463082a45126943f020ea30bda05c8
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.219.8eb38badc3f446ace4f0fbbdc7b4e018
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.cyu3types.h.80.f5310e165127de2daf78c334a454267e
                           .group:00000000 wm4.stdlib.h.18.8bab2fb43ac4e90235390733c30a4530
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.59.db8450f33c1f6150c0372fa1091a887a
                           .group:00000000 wm4.stddef.h.348.9a99de77b6ba3b4278b57e9cc6d6e349
                           .group:00000000 wm4.reent.h.16.ec713094ff7b80200da61a1b94cca956
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.7091a050e07f1c4abd225630fe3d62f1
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4.cdefs.h.56.efab90f4d89fbc41d6b3a5c5fb0d3d0f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.tx_port.h.95.54ef54ef950923016df123872c81f77f
                           .group:00000000 wm4.tx_api.h.90.d18ffa804751aa80b6d59c3d596c2234
                           .group:00000000 wm4.cyu3tx.h.61.421a5eac9b37f3e2677fcfe17ba1c9c3
                           .group:00000000 wm4.cyu3dma.h.569.521da17a880bb7dc9c063e240d18d9bc
                           .group:00000000 wm4.cyu3system.h.43.0fbd82548e591beefe95401c72410881
                           .group:00000000 wm4.cyu3usbconst.h.37.502980e110c2142a7316d50a53794397
                           .group:00000000 wm4.cyu3usb.h.302.ade7bb9b5b6e92c233eea1baf2851afa
                           .group:00000000 wm4.cyu3lpp.h.138.66435309bc2407b6684483dfed574450
                           .group:00000000 wm4.assert.h.11.060c3dc511517628fd4f958fa9448dce
                           .group:00000000 wm4.cyu3utils.h.45.ea1b88089ccad3d50489f6f768ad8e9f
                           .group:00000000 wm4.cyu3pib.h.192.a1483c513c81c352d6719814a4b66283
                           .group:00000000 wm4.cyu3descriptor.h.104.486178ff96f7d84792762d8905519d09
                           .group:00000000 wm4.cyu3socket.h.153.0d077cd39632ba9c913ec648cfa0f9e9
                           .group:00000000 wm4.sock_regs.h.24.15d70ab2b2a99b01b4189217fc091bd3
                           .group:00000000 wm4.cyu3sib.h.59.b1cff9a75023363cc612aef2b2314b23
                           .group:00000000 wm4.cyu3gpif.h.52.b01ef1bece12652336136a0aaabab45b
                           .group:00000000 wm4.cyu3mipicsi.h.46.b99df5b141b2543db3c56d6e408e0c5e
                           .group:00000000 wm4.CX3OV5640Lib.h.18.ebed1e57f77d2633a42de60cae388313
                           .group:00000000 wm4.CX3RDKOV5640.h.34.16f03605a9abf281a0c637c9029be977
                           .group:00000000 wm4.AR0330.h.25.89dbe56eed4266c402224122a3ed554a

UNDEFINED SYMBOLS
_txe_event_flags_set
_tx_thread_sleep
CyU3PMemCopy
_txe_timer_deactivate
CyU3PDebugPrint
CyU3PUsbSetEpNak
CyFx3BusyWait
CyU3PUsbFlushEp
CyU3PDmaMultiChannelReset
CyU3PDmaMultiChannelSetXfer
CyU3PGpifSMControl
CyU3PGpifSMSwitch
CyU3PMipicsiWakeup
CAMERA_SetAutofocus
CyU3PMipicsiSleep
CyU3PUsbStall
CyU3PUsbLPMEnable
CyU3PDmaMultiChannelSetWrapUp
CyU3PUsbGetSpeed
CyU3PUsbLPMDisable
CyU3PUsbSetLinkPowerState
_txe_timer_activate
CyU3PDmaMultiChannelGetBuffer
CyU3PDmaMultiChannelCommitBuffer
_txe_timer_change
CyU3PMipicsiSetIntfParams
CAMERA_1080P_config
CAMERA_VGA_config
CAMERA_720P_config
CAMERA_5MP_config
CAMERA_VGA_HS_config
cfgUvc1080p30NoMclk
cfgUvcVga30NoMclk
cfgUvc720p60NoMclk
cfgUvc5Mp15NoMclk
CyU3PUsbAckSetup
CyU3PUsbSendEP0Data
CyU3PUsbGetEP0Data
CAMERA_GetBrightness
CAMERA_SetBrightness
CAMERA_GetAutoExposure
CAMERA_SetAutoExposure
CAMERA_GetContrast
CAMERA_SetContrast
CAMERA_GetExposure
CAMERA_SetExposure
CAMERA_GetHue
CAMERA_SetHue
CAMERA_GetManualfocus
CAMERA_SetManualfocus
CAMERA_GetSaturation
CAMERA_SetSaturation
CAMERA_GetSharpness
glProbeCtrl
gl5MpProbeCtrl
gl720pProbeCtrl
glVga60ProbeCtrl
gl1080pProbeCtrl
glVga30ProbeCtrl
glStillProbeCtrl
CAMERA_SetSharpness
CAMERA_GetAutofocus
CAMERA_GetWhiteBalance
CAMERA_SetWhiteBalance
CAMERA_GetAutoWhiteBalance
CAMERA_SetAutoWhiteBalance
CyU3PMipicsiInitializeI2c
CyU3PMipicsiInitializeGPIO
CyU3PMipicsiInitializePIB
CyU3PUsbStart
CyU3PUsbRegisterSetupCallback
CyU3PUsbRegisterEventCallback
CyU3PUsbRegisterLPMRequestCallback
CyU3PUsbSetDesc
CyU3PUsbVBattEnable
CyU3PUsbControlVBusDetect
CAMERA_Base_Config
CAMERA_Auto_Focus_Config
CyU3PConnectState
CyU3PSetEpConfig
CyU3PUsbEPSetBurstMode
CyU3PDmaMultiChannelCreate
CyU3PMipicsiGpifLoad
CyU3PGpifRegisterCallback
CyU3PGpifSMStart
CyU3PMipicsiInit
_txe_timer_create
esUVCUSB30DeviceDscr
esUVCUSB20DeviceDscr
esUVCUSBBOSDscr
esUVCUSBDeviceQualDscr
esUVCUSBSSConfigDscr
esUVCUSBHSConfigDscr
esUVCUSBFSConfigDscr
esUVCUSBStringLangIDDscr
esUVCUSBManufactureDscr
esUVCUSBProductDscr
esUVCUSBConfigSSDscr
esUVCUSBConfigHSDscr
esUVCUSBConfigFSDscr
cfgUvcVgaNoMclk
CyU3PUartInit
CyU3PUartSetConfig
CyU3PUartTxSetBlockXfer
CyU3PDebugInit
CyU3PDebugPreamble
_txe_event_flags_get
CyU3PSysEnterSuspendMode
CyU3PMemAlloc
_txe_thread_create
_txe_event_flags_create
CyU3PDeviceInit
CyU3PDeviceCacheControl
CyU3PDeviceConfigureIOMatrix
_tx_initialize_kernel_enter
